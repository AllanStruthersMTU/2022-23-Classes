(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    329034,       6547]
NotebookOptionsPosition[    322784,       6438]
NotebookOutlinePosition[    323407,       6459]
CellTagsIndexPosition[    323364,       6456]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["18: Least Squares Conditioning", "Title",
 CellChangeTimes->{{3.8465884180627756`*^9, 3.846588429089326*^9}, {
   3.84666883912605*^9, 3.846668864267633*^9}, {3.846670417593573*^9, 
   3.846670436952243*^9}, {3.846672726384389*^9, 3.8466727270705147`*^9}, {
   3.8466757090828*^9, 3.846675717466256*^9}, {3.846758673014533*^9, 
   3.8467586795609393`*^9}, {3.846761881784243*^9, 3.8467618862742233`*^9}, {
   3.8469363463111053`*^9, 3.846936358196007*^9}, {3.847018316901873*^9, 
   3.8470183251261463`*^9}, {3.8470200375420237`*^9, 
   3.8470200478588257`*^9}, {3.847053667805138*^9, 3.847053681986454*^9}, {
   3.8470972361875973`*^9, 3.847097248729143*^9}, {3.847097861861884*^9, 
   3.8470978622770367`*^9}, {3.8471407238307734`*^9, 3.847140732837379*^9}, {
   3.847140862556156*^9, 3.8471408676027*^9}, {3.847141132528528*^9, 
   3.847141159248384*^9}, {3.8471411957132587`*^9, 3.847141204408482*^9}, {
   3.847142702555348*^9, 3.847142710848901*^9}, 3.8543693260612793`*^9, {
   3.854369360258556*^9, 
   3.8543693613718367`*^9}},ExpressionUUID->"bb443c9e-1a1c-437e-b10c-\
400e63a30bb8"],

Cell[CellGroupData[{

Cell[TextData[{
 "Matrix Condition Number for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "m"}]]}], TraditionalForm]],ExpressionUUID->
  "041bb189-6a20-4f2f-a124-8ab5beb20a30"]
}], "Section",
 CellChangeTimes->{{3.854369382603953*^9, 3.854369477742015*^9}, {
  3.854369591466156*^9, 
  3.854369608403687*^9}},ExpressionUUID->"719f27e9-c266-4ace-9b9f-\
026af5442dae"],

Cell[TextData[{
 "The matrix condition number is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Kappa]", "(", "A", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[Sigma]", "1"], "/", 
     SubscriptBox["\[Sigma]", "m"]}]}], TraditionalForm]],ExpressionUUID->
  "439c9c2e-7738-401d-9ceb-cc989ffdb1ee"],
 "."
}], "Text",
 CellChangeTimes->{{3.854369490451037*^9, 
  3.8543696233604383`*^9}},ExpressionUUID->"d2bb9855-a211-4ab2-8ed6-\
a309051590d9"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "(", "A", ")"}], TraditionalForm]],ExpressionUUID->
  "186948bf-168f-460c-a575-a4d1a0f8049d"],
 " is the condition number for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", ".", "x"}], "=", 
    RowBox[{"b", "\[Rule]", "x"}]}], TraditionalForm]],ExpressionUUID->
  "2d01a3bc-01e2-403f-810a-132d9bfeb490"],
 "  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", ".", "x"}], TraditionalForm]],ExpressionUUID->
  "d16a20f6-912d-480c-9eb5-08224a75df59"],
 "."
}], "Text",
 CellChangeTimes->{{3.85436963396141*^9, 
  3.854369679296966*^9}},ExpressionUUID->"d15f4658-2f42-408e-9f9f-\
643732a72290"],

Cell["\<\
Not all problems involving a matrix A have this condition number!\
\>", "Text",
 CellChangeTimes->{{3.854369688055805*^9, 
  3.854369729623829*^9}},ExpressionUUID->"46993a41-4d51-4538-b7c2-\
003b4ebda5cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Least Squares Problem", "Section",
 CellChangeTimes->{{3.8543693530189342`*^9, 
  3.85436936784229*^9}},ExpressionUUID->"de37e882-2bc7-4467-a993-\
0e0cb834281c"],

Cell[TextData[{
 "The least squares problem for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "1e72f192-d1e4-421a-9e25-64607ca0ee26"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"117edc31-c8a6-4bd0-8a90-6a7f6f806e5b"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", ">", "n"}], TraditionalForm]],ExpressionUUID->
  "0cc7298e-3603-4930-8fdb-5064aa56ae86"],
 " is \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SubscriptBox["argmin", "w"], "||", 
     RowBox[{
      RowBox[{"A", ".", "w"}], "-", "b"}], 
     SuperscriptBox["||", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "aedcd654-b9d4-46bc-bcaf-681b83de4477"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"A", ".", "x"}]}], TraditionalForm]],ExpressionUUID->
  "31ddaeb6-3aab-473b-a7b6-3e8964d5ae57"],
 " is also of interest. \nWe have seen several algorithms for this problem: \
QR, Normal Equations aka Projective, and SVD.  Every software package has a \
built in black-box command. "
}], "Text",
 CellChangeTimes->{{3.8470540488466187`*^9, 3.847054299041844*^9}, 
   3.847054620646575*^9, {3.84705469788529*^9, 3.8470547053171043`*^9}, {
   3.84705474014857*^9, 3.847054741548669*^9}, {3.84705479048367*^9, 
   3.8470548010520067`*^9}, {3.847097256754077*^9, 3.8470972849056597`*^9}, {
   3.847140756236305*^9, 3.847140780380496*^9}, {3.847141112793906*^9, 
   3.847141123081209*^9}, {3.847141212815769*^9, 3.8471414441116858`*^9}, {
   3.847141743880835*^9, 3.847141771661133*^9}, {3.854369745392618*^9, 
   3.85436991082874*^9}, {3.8543709148786097`*^9, 3.8543709200938272`*^9}, {
   3.854370985282303*^9, 3.8543710052569647`*^9}, {3.854371663784494*^9, 
   3.8543716651446047`*^9}, {3.8543725138494473`*^9, 3.854372514168063*^9}, {
   3.854632377399561*^9, 
   3.854632377399561*^9}},ExpressionUUID->"19c34891-b4a5-4bb2-9167-\
f8ac0b4049d9"],

Cell[TextData[{
 "The simplest way to write the solution is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SuperscriptBox["A", "+"], ".", "b"}]}], TraditionalForm]],ExpressionUUID->
  "a7c4e0b7-28d3-4ef5-89d4-061aed42c6e3"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"P", ".", "b"}]}], TraditionalForm]],ExpressionUUID->
  "53f18116-01e2-479d-8a7d-3d7c10cd6407"],
 " where ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", "+"], TraditionalForm]],ExpressionUUID->
  "6c70200c-3012-4934-b7e8-5aa041f7ce72"],
 " is the pseudo inverse and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{"A", ".", 
     SuperscriptBox["A", "+"]}]}], TraditionalForm]],ExpressionUUID->
  "0e9a079e-8030-4705-aa9e-331e00e686d8"],
 "is the orthogonal projector onto the range of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "7e534ad0-f13e-4429-8299-0d0be6439d7b"],
 ".  Just a reminder, When a TS A is full rank we have\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "+"], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"A", "\[Transpose]"}], ".", "A"}], ")"}], 
      RowBox[{"-", "1"}]], ".", 
     RowBox[{"A", "\[Transpose]"}]}]}], TraditionalForm]],ExpressionUUID->
  "f64b29f0-1871-4f2e-8b53-0efd651f6844"],
 "  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{
     RowBox[{"A", ".", 
      SuperscriptBox["A", "+"]}], "=", 
     RowBox[{"A", ".", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", "\[Transpose]"}], ".", "A"}], ")"}], 
       RowBox[{"-", "1"}]], ".", 
      RowBox[{"A", "\[Transpose]"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "2bd4dbbf-89ce-4ef2-a4af-91a26cf356d9"],
 "\nNote, P is symmetric and a projector i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", ".", "P"}], "=", "P"}], TraditionalForm]],ExpressionUUID->
  "98351123-04bc-497d-a547-1eab81631afb"],
 "."
}], "Text",
 CellChangeTimes->{{3.8543717856021137`*^9, 3.854371913476048*^9}, {
  3.8544414157609053`*^9, 3.8544414491843967`*^9}, {3.8544415801694736`*^9, 
  3.8544417015711913`*^9}},ExpressionUUID->"faabc7dc-dc02-46ce-bad3-\
29283234925f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"12", ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"b", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "m"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"LeastSquares", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u1", ",", "u2"}], "}"}], "=", 
   RowBox[{"Orthogonalize", "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "[", 
   RowBox[{"\[Epsilon]1_", ",", "\[Epsilon]2_"}], "]"}], ":=", " ", 
  SuperscriptBox[
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"\[Epsilon]1", " ", "u1"}], " ", "+", " ", 
        RowBox[{"\[Epsilon]2", " ", "u2"}]}], ")"}]}], "-", "b"}], "]"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<3D\>\"", "->", 
     RowBox[{"Plot3D", "[", " ", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"\[Epsilon]1", ",", "\[Epsilon]2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]1", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]2", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Contours\>\"", "->", 
     RowBox[{"ContourPlot", "[", " ", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"\[Epsilon]1", ",", "\[Epsilon]2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]1", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]2", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Epilog", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}]}]}], "]"}]}]}], 
   "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.854369915559379*^9, 3.8543703008298683`*^9}, {
  3.85437253200383*^9, 3.854372532293746*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"49aa87d4-3ff3-4900-8b18-21869d76cfa2"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"3D\"\>"->
  Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
jf32Nu3sXHvhj6Vqz8rez3g1yEHYtxQtxNzx4vHC9sJPS9VynnBe1OyCvo6g
/ysXfK92dqKd8N9StZlHBqy9leTI44Xnx98IOPL2uz2PC7j75ecNfJ868riA
+5a6Xm/Qby7Cr0vVVge26Vo3jz4ueH7e19Q9T06643dZzqnLN+Wcuc6VOdaR
jfnrFrYu5cR2GM8v/2vA9PgzMu5L1r4+zOa85U9Hue5o+56/GHHjgR534/lz
iyccdT5nL9Yjs7axd/+9adX0eBzPW/cO21UvzE6Mu1nbG3EzY0h+zlPp6/LQ
28e2t7cV427WPlzz7xH2Sc9H4fnRLfbubnvGVoy7WcvvErujt8lGxJvJWpXJ
L7WQMHux/pq1j6Gzr597Ysvji/e+fvZE78mNHXh8wa/M7HO0boI+78Ar7Cs1
pfhjVxGHJmtN8/y5J3KrJ9phOWcuOtmgZ3FXydVVal+Mr7pJ/THGlQnarOzX
Lzl/1P0Hztf1HHfjnpXMnyRor7/NPuDSzYbHEc/vD4xILxluI+LQf/zNs7PH
dyqs+xv47/eb+Do/f6fnD9kv6psU9Cpc90P++3kzP29zp3f0sUvcH35+L/VH
+EtqD+mnGC+1nvRfjJf6TnKm8WJ5VqbxAoe++NM8xbiAY16L+ahgB8S4KLyX
mI/KaGd4XBTkJuaXgj6LcVFyXPB8umG+8LiolzTuYn6pWMN85HFR0CvhJ6s9
ZOeF/VRLyc4IO6kek72CXwe+kOwbONY9rEfG/Fiyak7zCOOF57HeYbzAsT4a
82DJqhLZAYwjnl9O66+wkwp2xmgnU1Q1xzduD4f8y06qNmTHjOOYorAeCTup
8v6nnUxRow3rHdtJdYbssIibVCKty8JOqgyy8yKeUltpfYf8yU9QmfUt/pIx
n5OqsE5B/ni+MfldxrxNqsK6iXHB8/B/jPmcVIV1GeOC5wuRH2XM86SqVFr3
jXmeVFWe/Afhh6jXBj+E/Q1l/9390MKhziwH8jMV/EzIAf2BH4X1G/w7+WmQ
D9pZSH4s5IPn+01ecbxXF/YnmR8gfxL6A76T/E/hxyoH8leFH6vukX+LfAX6
M29d6xq2g7x4XMC3kx8O+YMXI78d/QT3Ij8f/QQfTHEB+glehuIIyJniDrWO
4g7IDbwpxSnoJ/hpimvQT/AYioPQT/CvFDehn+CtKc4S8aaaSXEc+gMeT/Eg
nkceI9YY3/HzZSm+Q//Bt1IcivbRzi8UV+K98HxDYzzLz0+muFXEoSqB4mUR
h6r5m0fdttcqyP5rC4nD7iA+fZpUuNvj4kEcj4CvG1Z61rwMPQ8Pblf/fP/G
rnqdEuLKhc6Oe0aM1fPS4KGdTm1auM+Pfxd83tfZLTsF+vHvgnfPPmpIg+qc
T2aeePD4b8Vz6PlbxIlb1xR5VH6tF/cHfHXZ36PCq3CdAPOvpaymTZ/E+93M
jy/dmJk6ivcFmH+K+PVpHx/er2G+gOaX0T9M1zaMMY2NuMXrHfNNF7e9eXba
k+0V4rUmVce1jBzG+wUcx5UvOScs4znbQ+YzZifsWG/DdpV5nRbeE4fc5/04
5v3J/hjX65eak2p8MWqQk4hrXmprpjcqFj7bWcQ1L7VlVQd+Va1dRfzyUvvS
Zn/F1pfcpX3WXMjeivVR6zZz8nRTDyfh76VoWGeN/l6KdvTwhisB/aR//s/6
cynq6xQ76Z+naJkNxi2w6eEi5J+ixZdas/xgT3fhb5u1kXlvD72w31ms+2bt
ptX8jhcDHUV/zNrtqTfeHHpvL/pj1gr2mPNwT6Dsj1m7GxNRKzFT91sw/h51
xz68fpLzCcwHrX0eHGbD8Zq+L09+PvoDHknPoz+yfaM/bFayP+CFqP9CPuou
va+Qj/pE8ZSIy9R6ihNF/KWu/7c81XCSP+wV9BfjZex/isre0DK+xv7/E8eT
Phj7n6KgPyLPoCpQXkLkE1QX0k+jH/tSQc+NccRLhXlhjCNeKswjYxzxUmHe
Gd83XcE+GN83Xa0jewI/Cuv+L4b5bmY+lewD5iN4WbInwv6ohmR/MG+xjqeR
3cP8AY8nO4n+gH8y2FUz8+Vkh9Ef8E1kt+G3YL2+RHYe/QHvROsC+gM+ndYR
9Ac8wLDumJnPo3UKv4v11JbWNfwu+BpaB/G74I9p3RT53n9G15KvtvTnsMK8
SUqrFNRoCeKy9Rr8ppK37dsP+1qAnwcvW2Tf9sPW2Ec4pUFPz1n/NnrMXmtu
B/xv7wUTN0ZZk75dVtC7ym3G5rzTFnmDU9yf6WvyLxm+jPujYKfRDvoDHjFG
Wzc1kn+X+3n96fJQu5sFuH08j35SO3hfhfcSclBoB8/jvbL4XVWc5Ab5wN5M
pfciOWiwNxVJDmgfz181jEsCy8d90l+bxs/W42i819ff97ff04/Hhe18zbQK
+0fZyPg9Vuvv+WhGl3sFRP8TtK4+eSffdpBxfawaWLN82clPpT4kaL0jtycF
BOtywO94j6s3sGZiAWHfYjW0Y4xbz6vsP7a39p0qxyVBifaZo5/G582qQrM3
9i+e6f1H+59JPumTUvtHJr/RLH9/atEbPk4f0amC6VavMacyM58q8E4Ok3bW
ehpkWnzJ7UH9Ba+YX/x8oufCAsFoh3l905HH3WroHPYy40WhqrWberDcoP9R
8wJKW0/T9R98Yrtc6tfadkLOZg3vhXkEfUibOCB+VxrrFetDytXEvBOa25Dd
vsXPP3j8qmrHLXbcT/xubFi8S75ID9ZbyC+z474nQ2vbSK7qrev+fPSyf813
LeF9hvu1x3odGnj0L81d22/Wn/9vPUng/lsZ9YHnV9XsnrVfDtXlgH7ahq+/
GzbWRnI1/HVKDdv+trQOXmN92HV5b5Ol9XSOeWezvOf6H+v0Oka0E7rGY9HB
etZCDmZl+u/5pcT84vaTRn2JKPfShvUQdmAvyR/2Ac+/pfE1+rHXlRvZAbQD
/w76RnoLPVfnjXrLHHpL+s+8Pem/0HO1keaLMf/2UkvrPOzuFSuZ/3+pwBGf
Yr48y/5gWsuUCqaxu7dVTt7/hOdRxOCKoxI+Bpkqeoa1CA57wXx8jd3NZ7zR
+4P48dKtc9+sAvX9TcRlGzfdjTp9lONr/n6kpHnZ1RH79Lo4xE0ra/fOeWOQ
j9ifytDOzP/t6KBmvvy7CeQf5Vxe6sDdG5x/4Hl0yuFSv2O19PkF/2tqYttc
McU82E5CTjdIH4x22Kw9fFIxKNJLt/N4Xnuz2fbePhvoLXM70lujHUjWtud5
al9vNus59zN6xuSJnU/YibzcdS20QYMPpQ7p+XDMx/gt5fOv/GzN9gTt9P5s
22F0LXvmXI82ZWRooUw7/l20s5PmnVh/teo0r8U6q/2W+TrCZYO+buL5ETSv
BVf2ZAfEeqHZW2U83dhabx/zNXHXrYItQ/+13ml+oUHLwovJ9TRWg90z8n/8
2fSU+2PmyPqHWOVD7RjtUoI2b9u2dU/C9XFE+7OKD5tRdJ+t4AnavuW5vbr3
spX9UT/IPsOOgc8xtsPr5gFqB3LDOGO9MMozQS2gfhrtXoIKpPc1Pm9W2U85
OHnM0Pd30D70x7jPe12FkL4Jf08dpXVE+CfKjsYR8kI7R2heCP9QRZH+kH6y
ve1p1FtuJ4XWR8gNz2+i+WKUW7LC/IJ88PxvxnWc+Wha94351fvqhNFuaIib
YTdgPxGnCHvFdYanjPZKI3ulYK/QDuKO9UY7yXV0sJNoB3m8C2RvyT7zegH7
TPacOew57C14Ktl/0b7WMuXi6o61KrI/Br7hQZ9tux4Hsz8G/qzxoDMXPwXL
9rVP7m8vpncJFuvCc21vrz43vnrrda2wY31KBEy81d5OzFOzZtTnZJ6PD+et
zfm2lbR757Wy2Yo2jl9oxxztbLAZ/37uFDtRF3FfO7t/xOPgjp6sP7BLVT1/
Lh6ZpPs/0l6hn+DtD+6N235b2gGzGnV5fOj5DrbCHprVfVpfjPsL9xX6g35j
XjyrO/Lrhxq2Qn+eK8gT/gb0JNU4LqwPGBf4G3h+PY2vWN9VM9IHyBPjGKql
RucJd+T5i/4EE4dfAT2p8+PwsTPfgtmvAC/R7KtVp0f671r++1ctvnkj/9vF
WP+Vpb2PWrL74sTlp/TvJeEPLF1R7lC3hZ7Cr3isDTxxtcr8/CxPXmchT+P6
mKwNK9Y7voSnnbD/Zg3jKOIjbbjXiJwT03U7DH3oSPoAPYe9FH4s609l0jfh
t6tN5LeLuE8Npd+F/Hl+GNd95kPovYz5n/uqF807o317rCA32AeSvxLyZ/u2
mOSP52kc1REaR9gr6FVxGnfYK/CapCfsx9D7PjLOd17XxHzn+YX5HhXwOC4z
U//ue9386qsmbCgj9V+zuj88dGzrcszxfPlQ7yVf3Eqbym+1T8zMfMTPNyqX
o8qki2WY43mfgA19y7QvaQok+4Ln23eKSCvZqzRzPN9y5eF3R08WM93+3+/e
4OeLtV8f/rtPKeZ43uHIxGPLhhQxBZO+4fmprfr8+fNVceZ4vu3Uj8la10Km
0P9xjZ+vvrry818eFCV9WxYnv/fH82gn9JOrqdy8gvy8/G7dy/I8z+tr/W8s
WrC4EHM8n+7SyvvpkSCTL9lPrpNM3/BhTZtQ5nj+zfHBi0LiAk03LHLg5wP9
fVd/bV+QOZ4f5lGt9e5vASY/0m887/axzvz1a0KY4/mJrnu7zRwXYCpnGUd+
fn3ck+ABPiHM8bzr4Vv7d9UIMN3MYn0Ex/Nl8+xoFVwzwDTOoof8fPTUck1b
pQWzfiLeMcemzjjdqiTrIbhj7g+LX4wpxvoGnpztr5ftHxZmvQIvssFtlvuM
UNYfcKvXxYcFDQlhPQHvcS9t89hVQTzu4A1H9ggKyBvI4w6O7+gxvuCLLkzu
2r+jH48jeMKoThMbXvHh8QLPHLqg/Mkz3jwu4OFHA6Nu1fRm+YNvbWPbdrry
ZjmDu5tanbpy1JvlSXlybXHfYxHTixVheYK/e+w7+86cUJYn+NU8Rb5GlQph
eYJXN6fs7u8cxPIEL1k7bE9M5QCWJ3izw4e+9zD5sTzBW1avUdBhnjfLExzf
y0Oe4IcOV12XecGd5QnudXBfuumQG8sTfHaOWTe8i7ixPMELrD7cZKG3G8sT
fNW0eh02zndjuSGfsLReAXOt8yEsN/D8Lw/anu0TxHIDz13BefHKegEsN95P
bFbl3IjLviw38KJTon80XeDFcgNvkXfQiZM33Flu4NNvL/RNWuPKcgPH9++Q
G3jLL1e+TrvoxHIDf17n1biiZZ1YbuBbR2Yo1wJOQn9StMRGJ858KR0o9CdF
6+ye4LOrgL/QnxQt1TV5VES4t9CfFC2w0ZywfLk9hP6kaJGJK3bU+cVV6IP+
vblRH1I0j+4Xmy1qay/0IUVbnGz7vFBpe6EPKVrAxm1ObWfbi/cyazPTby5t
ecxXvJdZu31r2JCg157ivcxaJfv+D2avdBP91L/XNvbTrL1udXr1qlfWbPfA
D/7h/PZjUXfuD/yd58vzHNi605P7A97vSq2E5OZu3B9wjzcDbVv2deb+gOO7
ZvQH/H504ae/hluzfMB/fbYr1+Ea9mxPwHvT76L/4E+on0Ke6jC9l5Cnup34
8/3m6i5Snqrl70eie9zAOQMsT5WFPFWuQ8fGLblqK8bdrNzrTY6Yuk2Ou1nV
yJY9+M5ARzHfzaosjSPeFzyJxl2Ml5pKeiLmhTqwa2rwybJucl6olr1mDg87
7iznhcre93m7PknyffXvdoWeq8frGzv7VHGUeq6Kd3IYUOWDk9Rz1YfmkdHu
pSgfmndGOaSoRzRPjXJIUR1pXhvlkKIukB0QdlINrdV07tdEN2knVe36H+we
3nSRdlIFrnof3L2Hs7R7KpXskrB7qjnZMWH3+DtcYffUFLKTwu6pcLKrwu6p
gmSHITdwG7LbkBt4DrLzkBt4HloXIDfw+bSOiHVZrQ/+bB/y00Ouy2rT6GrH
I8e7y3VZYZ0S67LCuibWZTWd1kGxLitXWjfFuqz20Tor1mX+Dlesy6opreNi
XVYNad0X67IqSn6CWJdVZfIrxLqsLpMfYtTPdPWK/BajfqarBeTnCH9S1Ws5
fnvtwz7Sn1TO5C8Jf1JtJv9K+JOqHvljwp9UX8l/E/6kiiN/T/iTag75h8Kf
5O9whT+p6pP/KfxJ1YX8VeFPqsxXFv9W+JOqIPnDwp9USeQ/C39SFSB/G3IG
P0/+uYgrVem+g3cV+z1Axo+qNPn/Ik5UzhRHiHhQjad4RMR9ajDFNSK+U68o
PhLxmnpFcZaI1/g7XBGXqSCK70T8pVpQ/CjiLGVNcaiIp1RjimdF3KTcKC4W
8ZEqS/E15AyOOB1yRn5gI8VNIh5XqyheE3G3cqS4T8TXypfiRxFHq1iKQ0W8
rC5TPCviZf7eVsS/qiLF1yLOVRMpThfxrCpC8b6IW1VbyhuI+FSFUf5BxKHq
xz1LHgNys/z9puVrVzWynHVZ1k9LvvC7tjzl2XvrN3p+Y8fYhjkWBP/Qjtsu
a9z0YSmWJ+o8S23MlqPmrZIszztJsWHBYT+1Su1qefz0K8HyfE954FXVPt+/
tqQYyzN/Kc95+yMztS6N/dqcqq7nHyIoXh4v9HM89d/ca+DO7l2DWZ7o/6QX
/fxevNXtAPr/x583TbP/CmI5HDtYd8P+yE9a2vpugw/ZlGI5WP5+0vLtGbzT
8WNxlkOa487n9Rd81mY3XlDk/M+iLId8tL/Z3z2kzepKRVgO/pEupZL3f9E2
2xcpN3t9IZZDJcpnVq+47tiiarpeNTk9bkRk8let1OyZmQdy63mVbRTPxgl7
mED9r9Xs0qDYiv4sh9vU/w1zOpY8vkZfd9D/i9H33jxo4MdyyNV0y4zI5HRN
c7MfWOGWHhf7/LizfX/ke83zzITsua8XYjlY/r7XEjf3qP3OKpTlEE77tg/3
HKz4sYs+v3rmHOW6IPijFv72t2Tn10Esh3GUv3Vt93fJJlt1e7Ww8/2OwWEZ
WtW0nuU2Lg1gObyl+LS/WH9zU/+nf2w/YOBCD5aDL/W/c+Wo9oeDPVgO6P+r
W5Ojq7l6sBwWUr78tv2FaemdC7IcjlM+uWfOzAfvx+t25j32hQpufGF3OZDl
EEh50HkjDm+s20S32zErb3+vv+Cd1uXFDN9SmX4sh/j6tv4LgtO0lrUntswb
7yPs80vtivDrkNdv0Tcp+Es3Z35f7Bf9UXbc6pjKzvy+6OfE9nlGzxnszO/r
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
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxNnHkcF9P3xj+z3JlpI4RKSlpRQgspkrKVQiVSouxkyU6WiLLTQuUrJUT2
LUKy7/suO9mXRLIvv+fdc71evz/mdc6cz507d+5y7jnPOffTcvTRg45Ka7Xa
h6FWy0T3E11DdLhuZhW12hZJrbZuWavNFt9N/FDxB4r/SmWuFr1dska6dtT9
m3mttrb4VqJv6VpHfBvRY1SuvX7/W/QJ3eeSF6Ltda0uvonobaJr6dpB5Y5W
uXaix6ot14rfRvLGeu/14nuJbyp+A9FPVWawrmkq11b3kyV/T3U1F99ZdEPR
pfp9iK7W4j8T3VPXefq23US/0YffKvmauvrqfpHqOUl0a71nosoMEP+Vylyn
+21pp+qfJPlAyb+W/H+Sd5J8HcmniG8hvqH4g1VmA5V5TGUOEd9S/OPij8r8
Xc+Jf0Tt+1t8Inqknk1Fb6pqtYdF/5S8JtpD17qqs53o4frtdT3/pOp/S1dT
FTlM7f1dz74mfnXR33Q9Iz6I/qtnpurZ+0Sn635j+rfkx1rtCvELJR8jeUOJ
9pfsQvFNJV9NZZboPY9Kvo3ou7oeE7+t6Nr6bZHKDBa9QuU3ou/ETxPfSvwA
8TPEb8KcEP+P3jFF/L2i2+hqIn5j0Qv1LZuLXqayF6jePVT/d+qTqyWbJb6x
ZBP1/PHit1SZs1T+TskWSTZe/I3iF4o/U/wN4u8Tf5WevUrl19X9GZJ/IzpK
zx7PvJU8VZkTxG8pPhO/m755a7WnueiJkq+l52/Vc3OC58tAlVldbTpBV6Jy
f4oeK3lb/d5E/Om6jtH9OXqmsZ49hTkjvpn408Un4jdS2Smig0V7qo6Woueo
3g7i+4uupjqOZ/HpfpLuDxJ7b/AF/4Vk5+s7dhf/rco9r7rrqewavEPyXqxb
yY8Tv7n412ij+M3Evyp+rPhO4l8Rf77a0VHPXaS2nSH5dpJ/JPl5km8i+QWS
TxLfWvxExkV8J/GXiD9T5Xur/Mcqv73a9AvrXfQk/bY2a1dlt9H9CskPEF2o
9p+g8lvp9+N0dRV/qmQni19X5W9X+dNU57aSf6A679BvR4nfQr9fqt/6qsxM
8WN11RV/s2THiq8v/hbxDzBmKt9dsiclC3pvJXqY3r2j6psqeq7KNZVsnMp8
pOtslRkp+cPiZ9AnquM+XQezxiXfI1jPDNUzd6nMqZI/LNn9ug5BV6hMe9V5
pdrdQ7//L3OZf1PPYfrnE/Gn6rce6Bg995rkD4rvhr7RbwN19dM7LlWZPpJf
pjKDJRuka1fJb5R8nOSP0i7xf0l2KvOCNSD5QtGRKruvrmH67U6+S/IHRJep
3AT0jJ7tJX6lft9ZdF/dfy/5T2rDD7o/R/wTkj2lb7lasnskS9NYXtf3uj8N
3aUyk9H/zBmVnSR+a8knSb6v+C/17MWSz9Q1QLLTqVvylip/t2Rb59a3X6NL
JD9YdZ+E3tBvt0v2gPjt9N4fJe+O3hffV1cP8dNV5g76TmXO1rMbMCbMGfE9
Vef5et949K3kd/IulVuu5y5BF+n+Oj27AF0huoXKv6F692PP0v0llecz6+V1
yc+VvLv4iarzLMk7s49J3l3P/6A6h4lermdu02/3iz9D5dfXe++Q7BTdH6Cy
M0XfkPxkle8ififVtaf4o9B74ncUP0r8ESrzp+qZrWcfFH+Z3vW06KHMe/FP
ij6na7b4d0QXq+zt4jcW/UB1nKvrVt0/ovs7RTuIPqzrDvGbML56xwSVmZV7
TA4Xf5b4vdWmlmrnxaINJT9U8jMln6H7UanH5TC97xfV8aradpF+O0RlzhB9
RPKZ6BPqY49RmatV5if2PMmfl/wZya8W/7boIl2TxT8reg96BF5llqv8hex9
4m+QfIz4W8SvpmsvvWus3rVc1zni54jeo/dcozLNRHuqjV0l/0L3l+p+hOiP
kl0mfl/mtvjJ4keKX8G+HLy/f8y+EKw/l4q/Xfx+4j9D/+sdn7Pv6Lldc+/d
XUV7q0xf8fuJX5Zbb/xP9CfRLXV9qWduDX7XJ6rnnWB98iJ6Vb8fq2ue7mfm
ng+XiZ4peiLrW/K7Ve580Wf03HW69ha/PTou+Fvm6fcp+oZeqdfFtfQPulrv
GpJ7z+0lOlrlvlXbJ2ssJug6Vfw8lVlXz52ma7vEe3UP8fvwneK3Td2HMyrP
gx1K9yv9O7rm33vGMtBtonx0bt2Q6Zmn9Wwh+o+evabwHlqT7HLxbRLLm+q5
/rq+rnmvow3N4nt4x1b0ZXBffq92N0qtC/je09B34seJTo79cKDKHaT73vCl
+we+XeJ9tVfk2Zf6iP+25vHaPnX7DtYzQyWbG6yDd4tlttf90aJ7i/6qcrtK
vgv9pPtRkg/Sdz+sb5vFXqXve1T8NeL7iJ+msjvHb2QtsaY203NHJG7/JZLv
pfsLUq+re/RsW5X7QG0ZLdmVqXXiANGdYj2pyvTUM89X1hvIuWdO7kIfiT6m
3+apvp3VhlsLt/dw1fl9rIt6jiptq1wuujd7jq5lun9Zz7YIHq91Uutc9O3U
uG8eKtojxH7NvTch/w6dg22k926vd/6h33eXfHnNe9HIyKPv0Ht9mLOp3817
h6e+h8d2Ghb5HVR2z9T703DxQ9gPkAePzw963/Gl33GCaK427KjfXqysY6mT
++ap29M/8fupk3FF5w1NLUO/raS9pe1L7Ex0caW69hNdq7BOO1nf0Jk5rmtf
ydeQPIgfIb6h+A3RL9SLXlD568TPinP2qjjue8b38l301ci4X09P/Y2MzTF6
5jjR21VnW/Yn1qnKzM6812eihyXeXy6ueS8aHvvtpMT6+SLsRT2/N3qndF+N
l2y66J+SjUj929+J619R815FnSeLthDdI9oeR+f+puHqz5mS7R/HlPEfHMsM
ijzzAXv1VOzK//bJ1Hq8Pd8R38t63C3aPD+q3DF6x+bqy7109cutk4cyprl1
9fWp18bpqv9s9lf1wfWSLxC/rcp8KH6x+Ksk36aw3pgc9QNz/HLWUuI1fkV8
72Uqv0zl3yytJ6ZEXdErPts98lNjPb1jGeRZ5TX3QuV+oX/4BtbltLjWvi5t
62LzflvaLsU+ZZ6M13VGzfrvsqiHt2KO6FotznfmxADxn+rZI/X7bcHrljnS
Vd/4eWnb+I44z2f+v3U3I86r43Kvn11UpoNkE+mLaHNge/SS/I/Sftgx+paX
JDtUZc6r2cY8JLXe2kz9dC/7m8odF8uMxlYovactYZ+X7HBdC3S/geiZqedx
A6iuf8RvKjpW1yfiDyk8754SHYFdy1wSrXT/vOQvqe76rAnWT+L2A0i8rt/O
0m9HiH9eZeeIHqnrCex15qv4N5jrkcfX/ZrxEf8mNl/iZ6czl0q393tsmVgG
H/gMyX+qea+5T/2yc+49fRP9fi5jrDKjJX8GG1byMeLfFP80a1f8/fjwjI/4
tyV/ljEU/5b4Z2i7+DfEP8XaFP+B+Oexr8V/Lv418aeL/0L868wd8R+Jf1H8
0eLfEf+c+HHiP8M2E98NfaCrVNs6i17EXNI3PKgyw3L7KYvEX4GNq+99CBs9
sx/9AGsvt79zL3M7t12xEBs+t120heq7UFeDOBeZk9Rzv8rsmdsn7Rrb0Bwf
pvRcGY4+UJmletcrrAnxH4p/QXxHlZ2UeqxGVrZrH8bmFH+X6vy99HqZkHof
PUjy51XmCckPFP+c+MexVbHtVX6l+P0q276PoM/EPwtOIX6Y+GnYx+JPEf+p
+JfZB/ET8OXE74O9Ivld2O2lfZRBkp2s65PMc3LLuE47xvl8HnqfNYFvojb8
xr5U2Q+8W/yltEO/7yPaXWUvZT/SsyNUZpDeex5+Vmb93BHfMNhOxs4FS8HG
w9YDPxkm/nrxXZkfidfdH/ji4m+nv3RdLP623GsEu/M9lblS9//Ts5317I+M
mfhfxXdjX1CZ9/GXwUsYU9GfmBPif1OZNwvjJ7uD0UU9gD4Yi02W2FdZVlg3
PFl5f2Kf+jmzHkP/oLMGiu6bWCc8EP1TbIbHC+tP9p2X6DPJO4keLdm4xP7P
i4wJ/S16Tu69FF3xVuH9eg90BnMo8btfiH5QR9GfRcck7t8PVG66nn9C7Vwh
Ogk7WnSL0nb4K3x3Znt8Q9FNS9vt6JlZqfUec3pBYf29Hf6urpvQ92rPZqzn
xDb/g3p+vuStRJcE+0rUf7/ub8AGAUPT/eV6/zxsDfRP4n55rfB47Yb/p9+v
REfl9p2YG/Ppj8z+YFP0ReL+oq/qZ6Z/oDsSjxNjRN8cFfvnbv02R3Q9MCS1
+Wds29L1Uv9qYBjs0zX3NT43bViH9ZnY1wAfuVzftbPoRmrbK6zPxH4dfjzf
uzZrTLIDE/s29B97DHsHvj92yi6ioxKvkVOYN6rrPPHX5/at8aEaZcaXsNnx
LbYsbd9i5x5RGn8Gh8Y3x77A9pmS2Uf5OTUGhW8xp7DP+5z4VqI/Zt5D98+N
y7Hf3lEYL8J/mCv+PpWZpjJrim5V2pa8TfIXEo8Z4wWuwPfVAScobYMxdseV
tkWxwVqntr1o3z7BuEQAW0ht52HjlaltJuylTaLvUVf0cdV7HftqZqyHMcQe
fFTXXPHNRduktinZ97GV8CGwl/rp3b+L74s+V7nLJVsrsz8FDvCE6ts82BZc
U/Ts3Hbl6sF2MbYm9/2C+fFgjLl99u9yzxFshFX2bbCdh78DBoLOfkz1n5Qb
g/o2N/46SPyWuf1IfD/GZq1gXzQVXT+1jYidhh26drQzq2DZAbntn4GirTVu
NxfGXLuINlPZ3xLPj0bB/g/+6XqpcUj81SNL22r4R3fqt/1rtgPBbptEW/Ex
XdsnxiP2zb3ffSHaKrgOfF/wMnCzvnrv9Znnfl3sAP0+KDEOSExklOhdwbgb
eNp27Gu6+mCD6ff5hf2Szuh4lVsmeR4c1ziUPRwsRbLBiXFA/Ah8JJ6ZVtoH
HFM6HnFIzdjkhbnX42m5sRgwmX6FcUDGAl/1VrV1ovhK9BZd54ovRW/O/F0F
+7TKTxXfX+Un5dYjJ4iem1u3oufvin4x/vHczLbu32rTtZnjJv+ktg8PS71v
TUy877CXfJhYD7P3sD6Yk9he+FIbxn2fuTwkzudNg/X5BL1/92CfY3lm/Ig5
if9LbAj9BI57kupYMzVGA0ZLf/6i+41L14n+OSXxXGeeT1W9v0b92aJ0fAc8
mZgX84T5Ag7NXvxxbvsdOx4849rUY4pOAbsBw/lI9NHEsQ/eDdYA5oDPApYK
pgqGgN+Nzw2+j8+B74EOmh0cyzqgsF/SKPog6DX024bBeAT9D2b1lcrdLP4b
ya8JjmuBjWBrUB8xh+alMW1w+G903cLaxP9PjY+gZ8fkbtvXYH2J40TMrYdE
N02Ml11R2qc6WnTjYP05RPSJxPs9e31b/bZb4jWCT4usm+iCYL8KbAFcm3mN
73ZIbr/pK9EzUvs26Nzjc2MAK9izco8FuNxBueNBX4q2C7Y38HtuKhyjZE2B
4XVO3EfNSsfmiCnMCo4xdVH5zSTbPHG9q7CB1PhA/WCdeqzKLE5cjjLDoq5A
V3dMjKsdVnNMjXEHwxtSWpfcUhjfQr+h67ADF4g2TBwX6qLyb0lWqXwD5krh
GAXxglfAPBPHQ/vVHFMCb39ZtG5pf7ED80f3HegTvbeR+E0okzqGVZ/xw+bK
HM/8jLWZOD7SrGZ/mljYO5IXKvdszfb5Y6onRX+yv0vPzsjse85NHKtdT+Ua
gj2Kvqhnx7FHin+XNSf5xuJfSo1BEl9bIv5xyTOezx2fain5E5IfL35D8U8y
r0v7MW1Yc+L/xVYR/6/K1GcO4kNG2+8Dfe+KwvGU3yP+T9z2zMIxAmLHZxWO
9WDHvo99HdwPIwrvQ+xHxIW/T73WwE+J4TLHwYaJNxWqpzWYT+4Y6yKVrZO7
/x4Rf13iMuvX7Ht1jj4vsTzieHxDgygjvtsldRyR3/CZukbf7ajC/hPfWy93
fV2CfS98sL/Q0bn7frHuX1W5i3V/jcbnRLW7teRPSz4/8bgzD+brt5tU5tvC
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
7P8AUQCuGA==
             "]], Polygon3DBox[CompressedData["
1:eJw1nAf8T9Ufxu/93nvP/VLaG1lFRnuRlChUtDclFJWUFtJAlKShJaQd7aW9
ZWsPaSijSEV7UFH/5+05/9fLff3Oc8+543vvOZ/xfJ6rQc9zjzqnkiTJKXmS
6F+yRZkkr6ZJ0l3t20OSvFMkyZVqP5olyZ7VJDla/a+o/yTtO0rtt9U/Qu1H
1L+H+scItxfeVScbLXy2xhysC3zLOXS+d9V/ldqPafxe6p+u/ieEmwufJlxH
YxoKz9AxGwvXFW4kPFN4E+HzNH6Grn+B9vVXe2P1b6r2w+oP6t9T+Hzhf4Tf
F95UeHPhx4WrwtN0zOPCzXS9XsJbCb+u8/XWvvs0tqL7Wyn8jfDR+g3j1X+7
jj1D+y5Wu732NVf7DW3L1D5AWzO1p2pbqva2Osd2OnaWjtlU5++v820hfLau
t7lwPfVvLzxb/ZsJHyV8r3Bd9bcUfkW4u871sPBuwrvq+KYaO0RjNlZ7hu7h
SbVbqP909c/TvpuFnxNuJVxL/U/r+IO1b5TO9bH6b1H7efXvo/5NhNeq/zft
G6b7nS98q9ovqL+1+psLN9L1+mtfDbW/1naf2tPU30b9J+n8vXR8D22v6vwt
1L+9xp8ovL7au2rccxo/VHim2idq/HbqP0G4ldofacxN6n82/t6ZwgOE7xXe
SbixxryjsSt0by2EZ6l/IO9G/TszX3TNM9V/CNcSfkTj91P/Ql3jcOHdtL+5
2jdpzL86x+7q/0TtH9Tem/MxfzW+pc7XV/hc4cM0foX2PalzNxP+QONXavwu
6t9I+zZR34MaUwg/rP42wl8KHyb8qPD+wouEjxC+SfgatW/Xvg917FeF3+8b
ut6+zEfhf3X+Xtp3s/Y11faY2lfyPGnr+LbCi3WOIzV+A+Fn+L3aN1rnS3T8
98Lz1fxC41dqW6b2Xtp3lO65j8YfqGP3VfsEHX+A+mep/3r1f6B2I/W/qfYp
PCf1NxSeK/wd81j4b/1dJjw78fi/hJemPsf7wrcVvpcdtX8Uz0P3dJD6TxXe
TritxsxU/3Wpx1+k85+s+/lZ+17U2PrCs9U3WHiK8NPCZ6m9SmNO1vGTdP4T
hQ/U+W4Q3llj+sb+BsKDNf40tX/Vvt7q66htpNrVOD9e1vFnCE8Q3kH4GPXf
L1wvzv9jhScJ14/zvaOus1Nqm7dE7Uba/6D6Bwi/rPaWut5r/D7tu0PH1hOe
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
F73Pn6VroC1i/PBz9Hc7Rn+N/6NmjFaOHIL1iuYWDRc+e1Vpjh2ufV1OXjqG
QjsLp4J9gyPiOxc06XBHcGToCNFkwZ0dGDw33onxMZwccRfxF1zdHrl1o+hH
0R63Co7FZsX4t0Ww9hQNas3SnNWWuTUvZeRzsXVwKuv4WOKn3P4HbgQOanPh
fRJzU82Dj0WTXC2tIUZLjObk99IcGXEq8SrcGesZre/cGP/D6aEjR08O1wdn
hs4cvTlcGhwZ3/mguYc7g/PjuwG+H4ALhDMkriS+hEuEo6OOTz0f7m634NoE
nB75ExwocTLxMtwoHChxNfE13GjL4FrFzBgft8uti0Qzh3ZuTmH9ADEv+lX0
BORucKR8X0ENAm6UZ06+SG0JvQ32kXowtSr0NnAA6F8+Cba1T2XWl6DXwbYw
H5gXnwbXuqZk1sdQs4JLviF3LYtaGfof7Dd83bV51OYk5vPIu7HV+EDq1bOD
9RYPZtanUJujFsb74vuL94LP/2RmfQz2G33MA5n1Knxfgu0amrgeemKwbcBG
EAt2Ff4wcQxJLAmnTmxEDEUsBSfP2v0wM1d/SHDsQY5IrniS8PTEMSmx6cel
9TFo/dG7YB+JvYlZiF3Q+azT+2C/iLOCa0/MOeZeu2A9Ee+cdz+y8NzdKrce
ZWHp+gprjLWG7gb9Tc/E9WneJ7k/OTS5dKfgZ4tPxbeemfvdMwfI49sE+z/W
JGuzfXCtijnGXKPGRW5KjkSuNDnYVv1GTlv1/MJf3Z9ZvzQ3+t9JmfVXuwbX
3pjjzPX9gmtFrAHWAvw9WkH4CPiQ70t/q4JNwbZ8XZp7gIOgPv9N6fo8a461
923pb/NYc6w9ChXwa9Qc4b/QH/HtRY/ov9HzUBvGB8P33FmYf/0+s15icWl9
xoqK9QFLSusTWMOs5aWlv33EBmALFpWury2M/C66J/RPZ2J/4zPiWXGOlRr7
ZWk+6ZPI5/5buh5GzEbshh765tTfbFSCNXaV3JoctHdrg7V16zSK8F/BWm5y
dnJ39Nlo8b5jjNpLg78dg+MlPiKepLbNGkSLR30VLvzy1PVYvh8h1xuhbUzp
+BVunZgD7Sb1bLThnHNZsIYTHp1zvB1cf8b33artz+DvNdACk+MRr6Fpa1qY
b0TPQA0f/8I3Uf2jv4BLwabNKLz+0erBGaCHpz5+a+77QQs2N1h7B+cAX8P3
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
8bG6
             "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/Hbc9+e5/FghizNqyZ6ZDAZy1QohjINSmmGQgpNUtmXUig1
1ESkzLyisbRYs++7LCFUQsqerSxZJhWlIsz7N1d/fF/X+X3O93fOdV/XuX7n
3PntujfrlpVKpVZRQcrPTqV6pFOptZlUalyBVOqi+EMd/fR1wbrSNzmp1Bqs
K9ZG3Ja+wm7jfVtu50zij7w1+AfYTbQC+wq7lW+cuD1fL2wtdoivsfgOegB7
HSvP9wftLW4wD+8pvsiXra8m1cZHYO9hG41XJ538jq/1rcM+FTekBlQ/N5kn
5nvYWI/QKZ6faJ72z3TU7/2B5wK2VFxA+wSWMcdU+ot2fewWShtvOtYQqyv+
E2VhG+RuN99t9JG5zuN1+V4XdzRmF2w11pEKa1/AL9IOee9hT2CP8nWgr7G1
9KH+2rRS3ymeStoVaSzPP82/XPtqc3R3XYONxS6I18vdhjWijXLPyR2A19Te
7dldzfuceD9fPe17qI7c8Xz/wGvw7eIri/cXN+ArFn3i9vhT4kepNvaNuAX/
IzEW7xvmbJ1J1kislZRnU9b1pnj/vON4Nmo/r6s3Xx86LXckjdZ/v74e2Lfi
w7xv8l1hzHHYEfEzeJP4PeIz8cywJtg17v+U/Cv13Sle4HqV+HeuOXQJ+zdV
4Kst97gxt4nnyD9pnEo8v6cC7rcGNlJ/K/FrsdZiPHoTy6IB2Cvi16ltrBXj
TcLeEL9PO3hup03G/Vl/C6ymeb/jKSduHmveHNN4nswkzyKeyX5stPh67eq8
bflqYaP4/ob1xQZirWNNyjki/lJfG/GLeDOeu+lpfLD4Ej7evOuMmUt74n7j
fco9ynNM7gPZyZgxdtO4V74vxc/jtfj24Pmx3sRH8eaZxBf+Ra7bsVMxTib5
TuYWTGpH1JD3sGzazXM+3iX2bnxftAv7MzZWbi9xG33LxAfxhuJGUV/MP8Z4
TWNdaV/O+yN1Eh/gu4WnfnzT+ibwbcIO6L+bdmM5fOci19ir+FK0k2cL9gQ2
VPxsrKP41miXvDtoC+vF+N74nhRviHWE9cW28H2BtaDPsEI887Ex4kt8fbF3
4/ngvzH2FppurkKx1mIN8p3ha8M3mm8aTaW5+obry7f+Zmv/S/s0X2u+kfqn
0GSap2+EvnJ815mjmrHHuM7WNye+M+162ETXpeJl9KD2CTm13Eu+vlfFh419
iMpgxbHn9I+KdSU+SMuxUua6EaurPcF1sbGW0Pf4RJ7v6IC+Y7Hm9F8h/phm
YIV5MjRZe2PMQZ+Jh/JVibVIC/X9GhtPPc3/sfup6vf2iprKdyz2Ib5FdI7n
e/ww9pN4Fp3FPqZDclvSXrl58s7yHeE7xzObfuBJ48exS+LFdD4nqe9R52MD
XBJ7ATaOuhnrQ/dSQVdPfUP4Ksc6pgX8v+KZRcP4vo2axTeKbyY2GDuJ/RV7
GRuLdcU+wN6nUt7bwnh+WCHabLyK4hm80+ltc9XHJru+hT8StT1qsfE6x96H
36x/kus74uVUI9Yuls87Ip6tvkY0IfYYuX3kboi6iE3HsukFbBPWX24nnurY
zNgbeSZivdPJ/cZ93+6e78M3Y9VogdwzcptgM8Q5NBDbjN0T60R8WdwLtgN7
03gPiucaax7dmpuswViLX4lP6msnrh57aKw78RD3sjnWd3byXbTKTdZ/fAfN
sSVYCXrNHDujXmYn38V9uclzjOfZCtuEVaX5fKexu7CZ4lwaFGeMX95Rl/C4
lwXUwBgt+FZjZWgC3yG+66K2u7/S2MvubyvPvbQ29mGaFDWZryW2RlyWJmKH
sePYFDkVsBnYiah1cT7IJHUt6tvn4qqxd5ujJDZY30dYndgXxGfdW0e+FcZr
hi3EitGr2Lao/dgicXEajm3H7sf2iOvF2Q4rEGeX2BfEF4zXG1v/y7npE6xm
1ImosZ5BTWy3eykn/o972SevXdQEeTXkFMEew/4e+xt2Q3y3sffHusBelHcC
v8scQ/UVw1tjkzGX1IPYJ3xH4v3SfqwIz16snHG20xzzv8BXFR/Asz3m4RuA
VcH6xz6OXY/1xz7FhsW5NGq93BuM9UqsI/EXsfb4hsW3gT8mdytWDXtc7r44
H8RZKJOcE4bHeNjRWFd0gK9odlLvou6d4ZsQdZBnIF5ee6/xavMNEq/CV8q7
lmZhB+S9i60SV6bZ2EFsJTZffCW9FednuR9gO8WNo0bEebFg8l7i/cwwz0vm
3xDnO759rk1pZ5Sy+E6xz8XNaU8cwbCPsP3iZrQLy8ZKU3vx4jhnYx3MsRBr
buxG2g0pYx2sjnMN3420nO+/+LXZye+M31vC/Twp3hpnNp57aZ++wtiKOGen
kzNcnOXej/oQ+4K4CHU113qsTU5y5mlp7LN4R6wUPaS9EC8UZz19FWPvxtZj
5bE+WBmsUzzjqK9Yd+yd2G/Tybca3+wfc5K61ieeE98OuspvmxRnn3Ry3o1z
7+PxXwZ7Kp2clePM3Atbhs1OJ7UpalQ18SKaJM6LMwNWKSepde3SSR2JepJn
jtyc5AwQZ4FS1DvqMDaI7zhPE3MMiXMA9mysM+xm7Jmod9gz8W1g9bCnsbyc
ZI+NvfbyOEMbrzGWx1Naf9E4a4unxbqUewy/U+5LcYbA+sX7wepi/bCS8Q3H
esRy4n8S9mM8v9gnM8leGnvq0tj30kltihpVJb4Xub3E6+ReE2f6OHdjHWOd
YiWxbthlWFtselbyf/Oh2HPlT8GK0ifGqywuHmtBPDXr/8e1VDu+EtgDsT9h
mqn22OUaD2NLs5L/U/G/qizWGZsTzwHrgf0W64BNi3WKdcX+BxsQBD8=
             "]], 
            Polygon3DBox[{{1454, 1453, 2017, 1096, 1097, 2018}, {1466, 1465, 
             2026, 1113, 1114, 2027}, {1585, 918, 1115, 2028, 1453, 1454}, {
             1771, 1194, 807, 808, 1195, 1772}, {1661, 1052, 726, 727, 1053, 
             1662}, {1680, 1073, 739, 740, 1074, 1681}, {1456, 1455, 2020, 
             1101, 1102, 2021}, {1762, 1182, 792, 793, 1183, 1763}, {1464, 
             1463, 2024, 1111, 1112, 2025}, {1980, 945, 793, 792, 1019, 
             1643}}]},
           Annotation[#, "Charting`Private`Tag$8593#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktIVVEUBuB1zax83eaC4VwDQWlS0LwoX+WjQa+RFTdKi4JLgVgqBTqw
QiqkQCUlokhEwmtR4FAwH5mVNXDkMAiCkL5Tg823/nU2e++zz6k4c7Ehk4qI
p8blvIikruZvntoesZvnuYed3MssD/AOD3OIJ/iM48Y59Vte51kL9u+I6LJm
r/yYHXoDet3qB3rDXCuIuKE/Kt/0rF1vUt2lvqD+oP5lzj1zbssf5QwH5Vs8
si1iUe9JsqZeD5eS9+KQfNTzZbmOK6znJzZwlY1sMj6rj3GNx/mFzfzKFn5j
K9fZxu+cyY94aI9ee/2QL3FTTjvvgpzie/50J6+5wRGu8D7n2cM5XmOOM0a7
+qB1stYbldvkAXWlXrd7uao+pNfPMr0+c/bLpz3bp1elPqmuVZcn9+UcKfOu
yGm5Ji/+ffBOvjNKxbvcYgdnjZLkO/NP8p4s5hsWcZqFnOIuTnInX/GlYet4
QdvGczpeTDA/+Vfo+mKMyTFymo9S///Bv/xGVEs=
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1376, 1644, 859, 1375, 2053, 1552, 1377, 2054, 1553, 1378, 
         2055, 1554, 1379, 2056, 1555, 1380, 2057, 1556, 1381, 2058, 1950, 
         2115, 1382, 2059, 1557, 1383, 2060, 1558, 1384, 2061, 1559, 1385, 
         2006, 2062, 1560, 1786, 2007, 2063, 1561, 1787, 2008, 2064, 1562, 
         1788, 2218, 1645, 1888, 1563, 1646}], 
        Line3DBox[{1387, 1951, 2116, 1386, 871, 1388, 2065, 1564, 1389, 2066, 
         1565, 1390, 2067, 1566, 1391, 2068, 1567, 1392, 2069, 1952, 2117, 
         1393, 1953, 2118, 1394, 1647, 2070, 1568, 1789, 1648, 2071, 1569, 
         1790, 2009, 2072, 1570, 1791, 2010, 2073, 1571, 1792, 2219, 1649, 
         1572, 1793, 2220, 1650, 1890, 1573, 1887}], 
        Line3DBox[{1396, 1954, 2119, 1395, 1955, 2120, 1397, 883, 1398, 2074, 
         1574, 1399, 2075, 1575, 1400, 2076, 1576, 1401, 2077, 1956, 2121, 
         1402, 1651, 1957, 2178, 1794, 1652, 1958, 2179, 1795, 1653, 891, 
         1796, 2011, 2078, 1577, 1797, 2221, 1654, 1578, 1798, 2222, 1655, 
         1800, 1579, 1799, 2223, 1656, 1802, 1580, 1889}], 
        Line3DBox[{1404, 1959, 2122, 1403, 1960, 2123, 1405, 1961, 2124, 1406,
          895, 1407, 2079, 1581, 1408, 2080, 1582, 1409, 2182, 1661, 1662, 
         2224, 1410, 1663, 1664, 2225, 1411, 1665, 1666, 2226, 1412, 1667, 
         1668, 2227, 1413, 2012, 2125, 1669, 1414, 2183, 1670, 1671, 1415, 
         2180, 1657, 1801, 1658, 1416, 2181, 1659, 1803, 1660, 1417}], 
        Line3DBox[{1419, 1962, 2126, 1418, 1963, 2127, 1420, 1964, 2128, 1421,
          1965, 2129, 1422, 906, 1423, 2186, 1678, 1679, 1424, 2187, 1680, 
         1681, 2188, 1425, 1628, 1629, 2189, 1426, 1630, 1631, 2190, 1427, 
         1632, 1884, 2130, 2004, 1937, 1428, 2013, 2228, 1804, 1672, 1429, 
         1065, 1805, 1673, 1430, 2184, 1674, 1806, 1675, 1431, 2185, 1676, 
         1807, 1677, 1867, 1924}], 
        Line3DBox[{1433, 1966, 2131, 1432, 1967, 2132, 1434, 1968, 2133, 1435,
          2016, 2134, 1690, 1436, 2019, 2135, 1692, 1437, 1076, 1808, 1682, 
         1438, 2174, 1633, 1683, 1634, 2193, 1439, 1635, 1684, 1869, 1868, 
         2254, 1440, 1870, 1871, 1685, 2046, 2247, 1851, 1441, 1892, 1893, 
         1809, 2136, 1895, 1894, 1442, 2014, 2229, 1810, 1686, 1443, 2015, 
         2230, 1811, 1687, 1444, 1090, 1812, 1688, 1445, 2191, 1689, 1813, 
         1875, 1874, 1446}], Line3DBox[CompressedData["
1:eJwNz0tKAmAYheHPxGoP3bAsaWQXS4vAZjUthOYNIzU30aAaSdkSzGsOI6wN
1KA1CCHhJnoGL+ec9+Mf/OnL2nk1ERFn6KQi0vMRudmIF31V39J7eksuzEWM
uG19wI3tNXtR7nBD7lfPcB17F20k7W88ul2jx5XlHfJ6FzPuX6hwV+hzBXmB
52TEiSzhFMcYuBflPX6827Of9CqaqGHIJdwaeLD37Vfc6HUs4cOtwN3qE6zb
y7LIvfnPn77BrcgD7p2b6lnu0B7Zm/qR/qn/A4vDJ3w=
         "]], Line3DBox[CompressedData["
1:eJwVz71KgmEYxvG7QesIzNraOgcryKFRKjDoY8oGRbCjkGoTGqPvUiIiXsu+
pD1anDqAICKkc6jfO/y5rvv/XMsztbm93BiJiBJeMxGFbMT0WERfv9QnR3X3
UD5zF9yE/sL9yEfunMun79y3fOB25B52scGf2dT0fVTRs1mSTQy8B05tiu4F
zOPe5k++eVuUczixmZUVzODO5t17WV/Bsfd6uuW72HIfoWXzwSfcoXtcf+K+
5C13wOXS/3Cf8ob7levutrdr95re5Tr6qp7oV/o/ndAulA==
         "]], Line3DBox[CompressedData["
1:eJwVzzsvQwEYxvFXtOVj9JQaXGomqUspYTCYGCxNrCRu34JVQsVqrUtdBr3R
pkM/Cr6CX4d/nv/zvCfn5CSV492jkYjYQTMd8TQWcTAe0eCPmYis/qkXecv2
IBNbw7bE27YffVrPyWXbjbzFHaqYcZuQe7jEimdekLIPcGo7Qd22IPexyrdk
331NbmMdr/ZFeYVndN2v5RnO8e5+Ie9HI974ISb1pudK/AM15G2t4bt5xz/8
6rP61PA7ti/bH5+zlfVvvcA3eJfP803e4/8xXCmj
         "]], 
        Line3DBox[{1487, 1614, 2102, 1486, 1613, 2101, 1485, 1612, 2100, 1484,
          1611, 2099, 2034, 1483, 1610, 2098, 1724, 1737, 937, 1836, 1723, 
         1735, 2176, 1976, 1835, 1640, 1733, 2175, 1975, 1734, 1639, 1917, 
         2201, 1732, 1916, 1915, 1918, 1638, 1914, 1861, 2200, 1730, 1913, 
         1945, 1912, 1731, 2097, 2033, 1944, 1911, 1729, 1609, 1834, 2096, 
         2032, 1482, 1608, 2242, 1833, 1716, 1481, 2195, 1974, 1832, 1715, 
         1480, 2196, 1973, 1831, 1725, 1882, 1935}], 
        Line3DBox[{1495, 1621, 2107, 1494, 1620, 2106, 1493, 1619, 2105, 1492,
          1618, 2104, 1491, 948, 1490, 2203, 1982, 1738, 1752, 2202, 1981, 
         1736, 1751, 2177, 1980, 1643, 2207, 1750, 1617, 1642, 2206, 1749, 
         1616, 1885, 1641, 2257, 1938, 1746, 1615, 1843, 2103, 2035, 1743, 
         2199, 1979, 1841, 1728, 1489, 2198, 1978, 1839, 1727, 1488, 2197, 
         1977, 1837, 1726, 1883, 1936}], 
        Line3DBox[{1509, 1624, 2110, 1508, 1623, 2109, 1507, 1622, 2108, 1506,
          960, 1505, 2143, 1984, 1504, 2142, 1983, 1503, 2213, 1765, 1764, 
         1502, 2243, 1763, 1762, 2212, 1501, 1761, 1760, 2211, 1500, 1759, 
         1886, 1758, 2210, 1499, 1748, 1844, 1747, 2205, 1498, 2209, 1745, 
         1842, 1744, 1497, 2208, 1742, 1840, 1741, 1496, 2204, 1740, 1838, 
         1739, 1921, 1755}], 
        Line3DBox[{1523, 1626, 2112, 1522, 1625, 2111, 1521, 972, 1520, 2149, 
         1988, 1519, 2148, 1987, 1518, 2147, 1986, 1517, 2146, 1985, 1516, 
         2216, 1772, 1771, 2217, 1515, 1770, 1769, 2215, 1514, 1768, 1190, 
         1513, 1767, 2145, 2037, 1512, 2036, 2144, 1766, 1511, 2244, 1757, 
         1846, 1756, 1510, 2214, 1754, 1845, 1753, 1919}], 
        Line3DBox[{1537, 1627, 2114, 1536, 985, 1535, 2159, 1994, 1534, 2158, 
         1993, 1533, 2157, 1992, 1532, 2156, 1991, 1531, 2155, 1990, 1530, 
         2154, 1989, 2113, 1529, 1779, 1204, 1528, 1778, 2153, 2041, 1527, 
         1777, 2152, 2040, 1526, 2039, 2151, 1776, 1525, 2038, 2150, 1775, 
         1524, 2245, 1774, 1920, 1773, 1922}], 
        Line3DBox[{1551, 1785, 1211, 1550, 2173, 2003, 1549, 2172, 2002, 1548,
          2171, 2001, 1547, 2170, 2000, 1546, 2169, 1999, 1545, 2168, 1998, 
         1544, 2167, 2166, 1997, 1543, 2165, 1996, 1542, 2164, 1995, 1541, 
         1784, 2163, 2045, 1540, 2044, 2162, 1783, 1539, 2043, 2161, 1781, 
         1538, 2042, 2160, 1923, 1780, 1782}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{679, 860, 2053, 680, 871, 707, 2120, 882, 721, 2123, 893, 
         734, 2127, 903, 745, 2132, 912, 754, 2138, 917, 2082, 760, 1129, 924,
          2238, 768, 1130, 2195, 933, 778, 1147, 2198, 943, 789, 1162, 2208, 
         1174, 954, 802, 1175, 2244, 1266, 965, 817, 2150, 1198, 1273, 976, 
         832, 2161, 1207, 1279, 557, 647}], 
        Line3DBox[{681, 861, 2054, 682, 872, 2065, 708, 883, 722, 2124, 894, 
         735, 2128, 904, 746, 2133, 913, 755, 2139, 1115, 918, 2236, 761, 
         1116, 925, 2239, 769, 1131, 934, 2242, 779, 1148, 1163, 2199, 944, 
         790, 1165, 2209, 1176, 955, 803, 2144, 1187, 1267, 966, 818, 2151, 
         1199, 1274, 977, 833, 2162, 1208, 1280, 988, 847}], 
        Line3DBox[{683, 862, 2055, 684, 873, 2066, 709, 884, 2074, 723, 895, 
         736, 2129, 905, 747, 2134, 1094, 1095, 1249, 2231, 1096, 1097, 2083, 
         1254, 1117, 1118, 2090, 1257, 1132, 1133, 2096, 1260, 1149, 1164, 
         1150, 2103, 1261, 1167, 2205, 1177, 1168, 804, 2145, 1188, 1268, 
         1189, 819, 2152, 1200, 1275, 1201, 834, 2163, 1209, 1281, 1210, 
         848}], Line3DBox[{685, 863, 2056, 686, 874, 2067, 710, 885, 2075, 
         724, 896, 2079, 737, 906, 748, 2135, 1098, 1099, 1250, 2232, 1101, 
         1102, 2084, 1120, 1009, 1373, 1010, 2091, 1374, 1258, 1355, 1135, 
         1371, 1136, 2097, 1354, 1152, 1013, 1166, 2257, 1014, 1367, 1331, 
         1178, 2210, 1262, 1179, 805, 1190, 1269, 1191, 820, 2153, 1202, 1276,
          1203, 835, 2164, 989, 849}], 
        Line3DBox[{687, 864, 2057, 688, 875, 2068, 711, 886, 2076, 725, 897, 
         2080, 738, 1071, 2186, 1072, 1244, 1076, 1100, 1077, 1104, 2192, 
         1006, 1119, 1345, 1344, 2252, 1368, 1346, 1347, 1134, 1351, 1350, 
         2253, 1352, 1327, 1365, 1328, 1151, 1296, 2200, 1295, 1154, 1015, 
         1169, 2206, 1016, 791, 1180, 2211, 1263, 1181, 806, 1192, 2215, 1270,
          1193, 821, 1204, 1277, 1205, 836, 2165, 990, 850}], 
        Line3DBox[{689, 865, 2058, 691, 876, 2069, 712, 887, 2077, 726, 1052, 
         2182, 1054, 739, 1073, 2187, 1243, 1075, 1079, 1002, 2174, 1103, 
         1004, 1106, 1342, 1343, 1121, 1341, 1340, 2251, 1348, 1289, 1323, 
         1290, 1137, 1294, 1301, 2249, 1293, 1302, 1297, 1329, 1298, 1153, 
         1357, 2201, 1372, 1356, 1156, 1017, 1170, 2207, 1019, 792, 1182, 
         2212, 1264, 1184, 807, 1194, 2217, 1271, 1196, 822, 978, 2113, 837, 
         2166, 991, 851}], 
        Line3DBox[{693, 867, 2059, 694, 2118, 878, 714, 1037, 1224, 2178, 889,
          728, 1055, 2225, 1234, 899, 741, 999, 2189, 1080, 908, 750, 1307, 
         2254, 1358, 1308, 1107, 1282, 1299, 915, 757, 2248, 1287, 1317, 1288,
          1123, 1284, 1369, 920, 2256, 763, 1318, 1319, 1139, 1353, 927, 771, 
         1012, 1157, 2176, 936, 781, 1158, 1172, 2202, 946, 794, 1185, 2213, 
         957, 809, 2146, 968, 824, 2155, 980, 839, 2168, 993, 853}], 
        Line3DBox[{695, 868, 2060, 696, 1027, 1218, 879, 2070, 715, 1038, 
         1225, 2179, 890, 729, 1056, 2226, 1235, 900, 742, 1000, 2190, 1081, 
         909, 751, 2247, 1286, 1334, 1005, 1335, 1309, 1336, 1310, 1359, 2255,
          1311, 1337, 1007, 1349, 1320, 1321, 2194, 1364, 1322, 1011, 1140, 
         928, 2240, 772, 1141, 1159, 937, 782, 1160, 2203, 947, 795, 2142, 
         958, 810, 2147, 969, 825, 2156, 981, 840, 2169, 994, 854}], 
        Line3DBox[{697, 869, 2061, 698, 1028, 1219, 880, 2071, 716, 1039, 
         1226, 891, 730, 1057, 2227, 1236, 901, 743, 1366, 2130, 1001, 1082, 
         910, 752, 1338, 2136, 1084, 1339, 1312, 1313, 1363, 1362, 2140, 1008,
          1360, 921, 2237, 764, 1124, 929, 2241, 773, 1142, 938, 2098, 783, 
         948, 796, 2143, 959, 811, 2148, 970, 826, 2157, 982, 841, 2170, 995, 
         855}], Line3DBox[{699, 1021, 1022, 2062, 700, 1029, 1220, 1030, 2072,
          717, 1040, 1227, 1041, 2078, 731, 2125, 1058, 1237, 1059, 1239, 
         2228, 1062, 1083, 1063, 1245, 2229, 1086, 1108, 1087, 1251, 2233, 
         1109, 1361, 1110, 2085, 1255, 1125, 1126, 2092, 1259, 1143, 1144, 
         2099, 784, 949, 2104, 797, 960, 812, 2149, 971, 827, 2158, 983, 842, 
         2171, 996, 856}], 
        Line3DBox[{701, 1023, 1215, 1024, 2063, 702, 1031, 1221, 1032, 2073, 
         718, 1042, 1228, 2221, 1043, 732, 1060, 2183, 1238, 1061, 1240, 1065,
          1085, 1066, 1246, 2230, 1088, 1089, 1252, 2234, 1111, 1112, 2086, 
         1256, 1127, 1128, 2093, 774, 939, 2100, 785, 950, 2105, 798, 961, 
         2108, 813, 972, 828, 2159, 984, 843, 2172, 997, 857}], 
        Line3DBox[{703, 1303, 1304, 1216, 1025, 2064, 704, 1033, 1222, 2219, 
         1034, 719, 1044, 1229, 2222, 1045, 1231, 1048, 2180, 1064, 1049, 
         1241, 1067, 2184, 1068, 1247, 1090, 1091, 1253, 2235, 1113, 1114, 
         2087, 765, 930, 2094, 775, 940, 2101, 786, 951, 2106, 799, 962, 2109,
          814, 973, 2111, 829, 985, 844, 2173, 998, 858}], 
        Line3DBox[{705, 1305, 1306, 1217, 2218, 1026, 1332, 1035, 1223, 2220, 
         1036, 1333, 1046, 1230, 2223, 1047, 1232, 1050, 2181, 1051, 1242, 
         1069, 2185, 1070, 1248, 1092, 2191, 1093, 758, 922, 2088, 2089, 766, 
         931, 2095, 776, 941, 2102, 787, 952, 2107, 800, 963, 2110, 815, 974, 
         2112, 830, 986, 2114, 845, 1211, 1212, 1213}], 
        Line3DBox[{846, 987, 1330, 1278, 1206, 2160, 831, 975, 1272, 2245, 
         1197, 816, 964, 1186, 2214, 1173, 801, 953, 2204, 1161, 788, 942, 
         2197, 1146, 777, 932, 2196, 1145, 767, 923, 2141, 759, 2081, 916, 
         2137, 753, 911, 2131, 744, 902, 2126, 733, 892, 2122, 720, 881, 2119,
          706, 870, 2116, 678, 859, 1020, 1214}], 
        Line3DBox[{852, 992, 2167, 838, 979, 2154, 823, 967, 2216, 1195, 808, 
         956, 1265, 2243, 1183, 793, 945, 2177, 1171, 1018, 780, 935, 2175, 
         1155, 1326, 1325, 770, 926, 2246, 1370, 1285, 1138, 1292, 1324, 1291,
          762, 919, 1300, 1283, 1122, 1315, 1316, 2250, 1314, 756, 914, 1105, 
         2193, 1003, 749, 907, 1078, 2188, 1074, 740, 898, 1233, 2224, 1053, 
         727, 888, 2121, 713, 877, 2117, 692, 866, 2115, 690}]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
/eQWsaGwZhT/ivVhIIB6533k2HDii53QoWE2GG2dXxCbHA6wTXz8spmtMPbc
8urstjbo289ZPu5aJDixrFTsqlhQXJgrPPSVcE9Mc5PLjU//k1fwnMkrKP9y
sOFxVTUoTB234md2F/TwxbhX/UiEk083ekeElUDa2a5gizlcSHDfY9O7ORkG
mtjfb+9Ph29TDHZVL+wB1c+m1udmpsL8wrUzt713Qe225qOC7j0QqGO/prsq
Da5NGdaJDMjBzMacOVHJXBjDebDvJV8GCIgtO35MrAaXzby27o9VF0wVLxDn
Ls4AH7MMm+MObTCSrxH80KMVopbqqEf+CIc6x4dHdn9gw5953pF259nQFrjj
cH5WJKw+8+H4B+9WuOOjOeh8pg3aGjtVbv36BFpeRS5a0AJ2kjLvA4k/1hYf
6uD3jIUHPLkE2kwuQUf69oLxJYUQdudm361zXBDaoqldWp4Gu/kuyL9viwAf
4XaXLft7gO8ghjTvzYSwsX8cZcRTMfW0xrpXfD3QXRGnKLkmG5xeeY6f0FGJ
2S+vnHBK6YLDyn2LhkuyQdntBD5dwcJWIX/f8QUcaPK3nBxUkAV39sjyz9ne
BrMVdl9tiWkFr5RXk+w3RMMr2Pz0uBYbPr0IE7nzhQ11fs0JWtM/w0a9tYm2
yS0QaOln90ScA2oplheGfBIgaMfJq1/bP+BIgYd26rQeqC2Yd/6QQR5MZ89J
SX1ThlMFUxXYMt3wfKTR4/HnfPitmXUlYDwLnUNXCWa84sDsg+8E1Vzy4NBd
QVuTaqLDc25n3hrPAqdTnTu1L30B0auz8sJH2LBlUbCbfTeZdxVVAttVEkEo
zvmix1nib+eYNTjva4O4JrXZTq7J/+NTWIxP+Td/wesjBhkf8dcvNPH4BfHR
zWPSYjrhyPcCt252GZSGLG0K1K+A5teHnaot2mDlByEBS5diGDIe2+EWwYIU
uwsPSR1DvE9IkTpOrU4opXWRfKdx5Hcw0yWe/g72+CSV0t/J74tKIf8u3qmX
cyX/LlaPjRGg/y4v/5cw/M/L+ZkM5/8bz//9Ll6G+S5eivkunpfnVzA833V8
v11ZKBfGP1syYOKfA2yTO2u3XMiEN2JdR9T9uGBoWTXVRjcdbAPfPT62Kx/u
rfUZ/X0qF1Rqp7TXhIbD9mWaRydpl0HSwsHUEMNOKNV8dzznbTz2pMfNPb2u
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
Bt/9zf8HkiCtsA==
      "]], {}},
   Axes->True,
   AxesLabel->{None, None, None},
   AxesOrigin->{Automatic, Automatic, Automatic},
   BoxRatios->{1, 1, 0.4},
   DisplayFunction->Identity,
   FaceGrids->None,
   FaceGridsStyle->Automatic,
   Method->{"DefaultBoundaryStyle" -> Directive[
       GrayLevel[0.3]], 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
     "Globe"},
   PlotRange->{{-1, 1}, {-2, 2}, {3.4713749314311735`, 23.790541700945795`}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]},
   Ticks->{Automatic, Automatic, Automatic}]}, {2,"\<\"Contours\"\>"->
  TemplateBox[{
    GraphicsBox[{
      GraphicsComplexBox[CompressedData["
1:eJxtnXWc1cXXxxEQCWmkBESU7pDGWQmRlA7pbqTTIKRBkJYUUEJSOhZm6a6l
c3vZXmILth5+99z33Nedffjn8tmZ78ycmTOnpj7v+2O7AenTpUtXNEe6dP/7
lX8vtfM/Xk8Pj3hyeES4wUf/B58EG7z8y2ZLv2zmb7CPI/8Tg1c60r0NXuPA
ZwyWn32e4PmSrsC/y/cGP5DyDV4i9Rt8UNpn8ENpv8FO+myshc5EDb1g6AVD
Lxh6wdALhl4w9IKhFwy9YOgFQy8YesHQ617fSxs76Yoz9IKhFwy9YOgFQy8Y
esHQC4ZeMPSCoRcMvWDoBUOve30vbeyk47WhFwy9YOgFQy8YesHQC4ZeMPSC
oRcMvWDoBUMvGHrd63tpY2e7ww29Pm7jHGww9Pq45XtiMPSCoRcMvWDoBUMv
GHrB0AuGXjD0utf30sbOdvobesHQu9JtXP0Nht6Vbn/3Nhh6wdALhl4w9IKh
Fwy9YOgFQ697fS9t7GyXt6EXDL3g5W50eBt617jR6W0w9IKhFwy9YOgFQy8Y
esHQC4Ze9/pe2tj56+Xpro+8PN31kZenuz7y8nTXR16e7vrIy9NdH3l5Qi/Y
XR95ebrrIy9Pd33k5emuj7w83fWRl6e7PqK+lzZ29jN6INxg6AVDLxh6wSvd
xo1xOmMw9IKhF/y729+9FfSCoRcMvWDoda/vpY2dfORv6AVDLxh6wdALhl4w
9P7uNi77PH93a/cZBf7djW5/Qy94iVs+f0MvGHrd63tpY+c8CTf0gqEXDL1g
6AVDLxh6H7jx2T7PB27jcEY9cGunt8HQC17i1g/hhl7wQ7fvwg29FnbKgdeG
XjD0gqEXDL1g6AVDLxh6wdALhl4w9IKXuI3za0Mv+KFbv7w29FrYKefiDL1g
6AVDLxh6wdALhl4w9IKhFwy9YOgFQy8YesHQ617fSxs75XiioRcMvWDoBUMv
GHrB0AuGXjD0gqEXDL1g6AVDLxh63et7aWP8Fw/LP/Kw/CMPyz/ysPwjD8s/
8rD8Iw/oBVv+kYflH3lY/pGH5R95WP6Rh+UfeUAveIbj+/3quJOuO478Vw3e
7/i9b/Bmya8DnHTyPZjvwfJ71fndGfM9mO/BfA+mfrC0477zuzOK8sGUD6Z8
MOXb399x9ivfg/keTP37nf3M92C+B4/838/hSC2/ycbeASel/u+fjwKX+N/n
SwPTYOd4eX37P/hlqEkHkz5c6jPpYNIZf9Lpj+aOct6a/gbTPjDtAVM/mPrA
9F8px3cxpj4w9YGpD0x9YOoDU5+dnt7Zz6SDGR8w7QPTPjDtA9M+MO2z05kv
zEc7P+m0F8z42O0nHX6z56OdzvxDvtj5bf+GdPrD9nds+WD7P7a8oH7kE+n0
D+n0B5j+cG//S/M9/UG69JOvtrEtL0hHHoNJJz/y2ZZftr9EOv1p+0+2fLT9
KVte2v4V6fQn6fQf7aX/wPQfmP6jPJkngYZeMPKQ/gPTX3Z/OsWJ8a82u/Xb
1TT+li3/Sae/bH1AOv1l6wfS6R/aS/+A6R+wyKVQbWPkO/0Bpj/A9Aff0x+k
r3Gjw6VfbH/M1le2f2brL9tfs/UZ9dMfYPoDjD6yMfoK/UQ6/UM6/QPG3rH7
i3T6y9aftv9GOv1l+3O2frb9O1tfUz/9RTr9Zetn6adoQz/p0E869p7dH6TT
H6TTH6TTH6RDv3v/7/MEQ5/dXuHrGNNeysc+BdN+8tN+0hkPMP0Ppr/B9C8Y
+5jy6Q8w9IOpD0x9YOoDQ6/ItbeGHjD1gakPTH1g6gNTvuiVZFM+mHTpZ2M/
m3Tqt78nP+2x85OOPiPdstc8rPrNegj220E3vkg28TYw/I89hn4BUx6Y8sCU
B4YfsbcoH0z5YMoHUz6Y8m37jXg3/WHH37GPaA+Y9oBpD5j22PYa8Wb0BZj2
gGmPHS+37S/sI+QxmPrA1AemPjD1geEn7AH427YPwJQPpnywOz96eVK+rV/B
lA9290+8POF/9BXlz3cbF1+DaT8Y+QymfjD1g5kf6APqB1M/mPrByDMw9YMp
/4HbPAg1mPLBlA/me+JHfG/Hv2z9AIa/3PXTPk9b3tvyHUz5YMoHUz74qRvf
vzXlgykfTPlgygc/dZs3yaY8MOWBnfLVyMOrju9PqFNOPtnvyL/Z+btfkw6W
fBecf7+qyA9OcPTbTZXROU57JL8pf4zkV+HOeUz5YNKpj+9Jl98Tznz7Tf1g
0mkP5ZFO+/c4+V7aeUsnOPme70lH/tH+GW71XDXts/0X2k/9tn1Oe6CfdPIz
32e40bnfyEPoo73Yq/QHmHTm82a3cb2qjjjaH6XlN0UnO/rhhQIL30YYLOwY
lQa3dM476LHHH0w6/QW/0L9g+rexo9xHJp36KI/xtPnT5g/KY3zApNPf8936
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
G3rkSzXy5dvXg3wuNYs35dfv8eW2G83e+0er2vg3W++fxr/5fNOfm0+PcJ0v
+PbN7YDCn5r74fSNL+ruLvuZ6zzBpLnrrnx/0bU+MLNt0sGIcnHm+xmFTtdZ
O9e13//z6vuTO/0VYdpT66e2zed/7Lr/vfDpodsGLAnVO5745ni3NNjYQ8in
PsHjrvZ54Ktb5Mg5++p/zyx7wFtv/zr/h6kF/XRq8JtpjXIFK/t+9SUxl4aW
07f1wPnLFuzv47qvsm3XlT8WmIC94uWZ7fMuuy42Dzf2/40xLTPFNbyVZr+6
Kvu2XtKzeyr36C9Gvo5y7X//Y3JCD79s0Qa3OdSw3T+b/U38H/q7Fd24NORE
uNlfvWTe9QsLDrruy5yowz9dXjHC1FdL1ZpRqVCkGj0zR/Zv/Fz73+NzlRuS
rUXa/eylpb+Nv/dqxpzBvh++UV6DI+YHvbyd5r7vWzK+5rxnUM6tkW9buu7f
LJKhUK2/kl37wSuHx9Zb5uHaT/4sqnBqdOZ4lb/ThjMnMvin2U/eQvhRFW80
tMaqptEm3dy/PWDn9519Eo19EfXH09x3pieq6cLvZn/ED8Xnvz6w44X+ZUiR
Asn1knTne4t9Hvf31vVz5k6/dGqintH8xpLikV6q54hrT46cS9QdLi6qN2Kg
v56Uq3jvwwlxevio196rNt5Wly/Ozl+jSrzWg+ZmX93pnO4RW3D09Guv9e7N
v505e/qFvlrc63XfupG6R8hPy2ZMfur8jdBXhyxuFJr9tFLLr8zokC1Cf5Sr
RuT9j/zVa59VJdu9DNcBPeqMeDwlWNVuvKhki6wB2kPlnxM66qnu/tWa0Hnf
39X9K/9VauK+aLWwdEznmv7LtNfk4l8V6h6uKlTJ93Z3em814OqKjP8uuO38
9VNf7Roz7ZsxwWrJpoklr03wU57Pzt+MXBStPvK9WzXdAD/1pkj+jS3GhKls
M0/19Z0Qqk7/tLJD8s+31L+3fnyzpN8rFVtl7NGJJfydv69Vzv+6bfRNCFMX
i9Xq1PruKzVkV/xa75/Oaa+rP9aY0TpOre/jU7tmRW9Vf2Gp+ROux6kvDuuo
27FhKnV4xStz+8WpPVmHtxtaeLWe1enx3IBd71TDaTN3Nq/qr+bn2R7ztGOi
qvehyrpuRZjz952q3e1C1i3HolWuPDWCu5ZOVOXiW2UpX2ql/m7JoW03Wqeq
72a/bbzo8G31tEqXrgcPp6q4IlWafLLNTw1MCN7/skeqim+X8+L8kOfqVdXK
WVc2TNFtPV69GnzCV53+dHuvxmNSdN3SOS+NnBegOiXXuXJIp+g8i0q017HP
1L2Hh16P/ixB96zbtW0urwA1e2b4+K7tEnTNmW3+LpwxRNV1/Cbox2Mrr6ra
dYeaPGHw+sdNYvVvVzLk6XHqrrrfvUy3aP9InfNAsc+fFQ1SK7+J2bvi9Qvd
7e+aa8NLHdLbr+ef7LP0hQ4PHJrYqdwD/e0/C/vPy/ZU/3F6dNkvbgbqUn1a
DevQ10vll+/1Mvle+c70ybsn/KG+H5q4WUdHqvVSn/aR+tTX0j7tbJ96lJQw
q+2E998/P/linkeCGir06PlCj+qxa9X9zQG+Ojxo4Zjo9+kVhH79WOhXPaS/
9EXpL9W8ydcfVy+b9v6Nql+uuD13b6pqJulp7t8oL+kmftLyu4FHi7Zx3Q+9
etYfl5eUct03fXv02h4ht13v9czv0iSnf4lIY08NTD+h+C7/IN32Uos2xXJ4
mvg+9uvYs6FlJ/8dYOyDQ0t3bvh47jVTnr9gs5/tJ8lv/Ps/pD4jb6/Xuxtc
aFOK6nByed5p8VFaflN0/4AV0/YFvFBt5jepefI9Ht6zQ1zNoiGq1LXKu/9O
SNF9gz84vvO3CBWftUXLW9dT9Hzfkak7N0fotvdTnmS9mqKGSrpOlHQ1Tr7X
ZeV7Vff87ja5zgap2Z29/9z8IkVffdR5R/zOINX5x7pT2wan6Fo/tB6zvEeY
6rXFd+Wz6BQ97I+q/02vHqaepHuzKtcr1/0lfsd7/lh7puv+kkDBSsn3uq98
r4bK99pHvleNpH49X+pXV6R+3U3qN/K5T2TjhnW6uM4vOrFKXlPh4tOPotXh
zJl/aR4Qq/8ru/3ofx2j1LjPwoatqh+nM6x1pOsjkq62Srr+SdLVR7Mv9c11
P+17j2X/Wnf60mnX/bMPOuR5W/v7WP3Z0ic53nWKTnMfS86g2N77P3Cd/0t8
UXzA/tUHdc1dFf8d2sV130oDwWb/6dbx9ZZ82fxomvtUPpXyzP2HT6V+VVnq
N+vrTfpODupW+nqa+1UqSftVO+3RJt3LUD0h851xzWa8p++TYouG7gvUn25v
eD/pbrLO2z7064vVAvX0273a98ifojd9FRg8OudD3VedmPWsTYrOFxtTPnHS
If1TxwiP+0VS9BeRF1vO2LdVV5le/Un88hQd73tvStOp91WuTw5+f2l2ss5c
a3HnLbei9L6aLXtdyZqgP7na/vtWFYJ0nXzBY1eeeqtvZXqYZdy/D/W955vH
fPLxO71qyY2ZFeMP6suq46D2U97qLj51Iwtf2K5DM6+p0NHvrc5Qo33BUeci
9YlNlW4+2xij52Q6Of3WxEidvdjCXB1ux+gj68tki2oX5PyN1SlViuZb3f2h
vlSuevvn7/Gp/z5Y9eHq43pmrcQMI+a+0S3HTAj4+0ak/s57Wr4Rt6L1T9s3
ZdSJgbpLr5y+44e81F2OtBhfZf8DPfDw4m8alI3WgSIPlbfIQ/1h/S9mnevx
SFWfdWhH9peR+mT7OtX+2O+revb0VY+8I3SNoPLt/87vp4vVrt7jcOZQ/Wnb
f5cvr3hR3z8+eVn3E4F6YK2HR4+HndcdApdt2Zw1SI+7fCNx5L++qtYoPWrd
uotq9aILm56sfT+fDl2oVmr06ff2WfalDeJD1NuGeVL7HX2svC7Py9v4doCK
Gnlleb+uQapwlQXjS2SLVLkK/HYhcWaQOpK32vWP/7yvPtjaKf/Gk9GquNCj
fhd6VOstuf3v7o9UXosPhbyOj1blpD/UdOkPlWfC3NmVX1zR04pu9rt6LE79
ULv7gL2pu1SBkA1zPysUo6pLf6qF0p+q/Tf988X2f66uDzm35+y5N6pYnRMV
5lYOUe+iy2RW69+o4TJeqoSMl2r43DG+6rWMr/qy35sCZf68qH5IbrJ6ZOUE
9cvTGltOXn2u5qTThUfPT1BbP8y3OEPhEOdvgsoU3nZi97GRyneTbpfXL0HF
13Twm/IUflNOfau7ir5VbYJHL5zUKkCXXe8zqPKJFHXWI13B74o80CGjv2ww
cmWyyurn4F+dT/hXdXhTe+2Nljf19x+f+/kTnaSKRzj4XdUTfldRX2z18A29
qPbHZbwYdC9Jjd0dtunBd89V6Wq7vm76JEklt3PMJ/WHzCc1ZVmWy50br1Rb
ij7rOTrLez9Z2qNKSnvM+sWx6A0+E++l6LuXN/QaH+N638+8Fxn4tEr/PSm6
wb0FtfOOuKs6fn+ya+6nkXrbz+uePVvxTO11/L7HFY+1+Cjomaox7+DivXMj
9bE2Kb/OCPBXUb/9c/hkiy1q6fnAT7T/eVVpffbxf+UIUheFf3Vf4V91QsrT
B6Q8tUHK019LeaqQ8L+uJfyvakl7dDdpj4nXOttr1lu8hD7VS+gz8eryX5Zo
FjXmqTl/hH3fYVLDdYP9U1Rjkc9p3str3OWDqVtfp6gLBcM8Br8JVpcdvyl6
R9VSQ+pmDlUdbjxaef69vtwuWHcR7Dr/6vlwRVKM6328lYLVhObBb0qeD1Zx
S25NPvRev+WvND7XgIHhanLcnenaP0UPTfnup2UeoerJo9TQke/LLyTp2pmu
xki6fi7plKcTpDwTzy2dMbZE5/f6m/XxX2PKhKUGu9ZTnvdJTvfHS9f6iL9g
s/4/U/Ibf6hZrxYjFu1J1lNb7G9XsFfa9/AGFiv9sEX3JLN+6um/r8289/1F
f34+o3bzlntc6bPiZjc6OtS1/nh6ZlKR1guS9delcpU7fvBxmvfvsnh/MLbD
aNf6297jl+78NfmdsafG/xb0Y72ByfrNgaNb6hQ+Zb4vPm9EnZytD6c5v/SL
X6enGR+kGv3a/lS5Hpsrud6381n3a/vBuVzxwcHjlhTqeCtBF7lR9NjCb13v
1x1e+rWP+irtfTKtX3V6+OPP8a73kicOK1vnXKwOvPN7iS0jnqZ5v67zjo6z
1PEEHbXwuXe+mp5p3rP7Z3bXxVkux5v2+HziV2nOiBh941BCnf4b0r5XV2TA
ruW9M7rOL43P933IuMUx+tttJ6Zc7pv2/bpRLZdnu9rZdT7plx9vxnTO8lrf
CTiQJ7DZH2nOS53dWuTXjj9GmfoKDm3XPH/ncFPe03Mrl7XoF6YPhX/zbl41
1/0z8EumT2N6NJ8SqPNU0Id+PZX2PbktA/IN7Ncq0MSXKm2d2SXLsdsm3jfs
yPiHOa/4ut73kvwm/p1Xyleton5ant0vQH/5QaMTKluY2S/z/Hy7VsWWhhn/
PWvixNj6E1+oYtIec16mz8zs6xa3ep7mfpxQoc+s9yUc1D1nZAhRWug134dc
LF94eb7QNOdpvpD+MvGFu+IvqA0ir9K855avRdN5heJfqn+Xd8tQr+blNPfr
zJDxMu2bIOPpqk/4QV1Qz28H3ne9v8b+i38eFtq37Y3rPbZKameLGmdi1OJg
x/inOT+zQ/hR9RZ+Muk+wo9p3l8bJ/xv2tNR5oc6Ef18UZvFR9Och+ks81GN
WeSYD2nOw/T9cMOOAv3eqvR3HfMpzXtrB0U+mP7IJfJDVZD5m+Y8zLHbpQes
K/hO/Xd1X4/mn7neVzPvB4q8Mvw1QuSdGb/ZQyLTHUxOVnfmOuSNOR8DPTNE
3qjBBx3yyayfdRR5Z/Bcka9p3jvzEnmqBg2KyPHZ0wgtv673zlIK1H9U+994
s3+xe57hCfpuvPE3CsxZFZqaL1K/XZo04EaOYNXoaNFPKjcM0hkHZ7m2+x/X
+2UDxB/U7cQfVNdF/+mrov/UtcWZtt4q+FSFNM3QfvDHKXph31U7yk/yU2PW
D+50d06KznjxYHSVifdUztMjCy9cFK8jfsi85pffnikPjwdDKhVK0Gv/rPNZ
nqIBShWt4fn3e/85MnZTwaB3L1TurD1fFP4wQU89e3l3z6ozVM1RzTbmeBKj
G89/lK9kgqd63jGwRtmQWJ3/apUTT1ceV8GTTv13+Haszl1pVKFLqy8pj6nD
61d6GKFP3p8wyD95oy7xpN2zFk9CdOuD6X5UG4LU/ehit1dWu6ZbCNZhglXq
IAf95n2GjA8c36tS8r2ZD59JfFa99uvvl7HnsjTvexWV/lUZ4z65OVzd0kOD
/tow8r1dWmDd+VUXe9zUo3f8WUcPiFSZpb26sbRXHRT6dKDQp7IIffqF0Gf2
a/aU8VQvr359feLNMP1Xl6znd02OV5c2ZZkwNzZUV/vZK6DfrngVIf2p80h/
qsEr/12z81WQjjv+psKtuglqlfS/biT9r054lb5ZaaSfHlEpw+x1zRLUCxkv
3UjGy6z/py/o4C/V8+dK16cMf6THZU08me1pvNpe7dCInhce6vJtvssTfCte
pV5wjL/OLeOv5gt/6AnCH0aelZf4qV4s36tS8r2JnxSUeKueOeCDGz/86Xq/
q5fEe1SoxHv0Pmm/Girt108lXqSWSLxI9xT6VYzQr09Lf6nq0l8mfj9S4s06
YK1jvNQgGS9jD8yT+LTenLflle4DXe93fSf6RZUX/WLs7REJ26rVSgzRjS4s
rZpzatr3vKr3D5++LyJYJ7b6+cjpJsF62pbTi+9uvKuSZX7qejI/jX1bP3DK
06nJIapJoU5ND0xN+37XHFl/UPsL3P7qbYMonbQj9pcFfVP1IcEqVbBZby4n
9qHRf5clPqRz+jr4O839QT+U23p5qofrfazpH7Vq/GWmG7rYtP/qrggM0PeK
F6r/8+F/jH6t0nHqtoVfjlKv8zj6y+gz7Ic1Ei8z8anWEk9T7/o7xtusl+6R
+KSeKvFJ1feSQz7ohiIfVKzER3WMxEdVsMgn/VLkkypUsM79fkujVGHHb4ru
tGtfn00D7+r+F+pP2bfdx9gb1RYcOzJ7xnGV62adnHXqus7jdJH8apDkV1kP
NIlK90fa8zeN+h/cXG64632pg7Ieo3Y+ulLhaPG7ad6bevLJ4eF5IoNVUWmf
LiLtU01kvSTNftWk6ZWnDlsbpg/IeoxZn2P98lKPoIR8I/11+akt9qx5fNHs
F224ufKBmNKu96GKy3ipGTJeeoSsB5n1H+rzbeYYP8PP++Y7+kd/Iv1j9pem
yHqTeR+K/ogX/lB9Zb3KrCexv+1X4SfVTNpn9i/NKDt/Y8cl0ar2qgGdzg5L
0TMF6zqCzX7JLWKv6LJxS3553ThKVXD8xulKgrUTq2mfrBhbqVWUjnrZwi9L
xiTdZNySBt32RetEv2Exlxak6FmSrl5JuvpO0lWKpBt7s6H4g3qtjGea923u
SP+rUeKv6y/FX9cfhLc90CLvU93j9LkPcvdP1v9IvMH5m6DjD30SG7Thhc7W
PCxr4T7v/QuJV+guEq/Q5zKs8t2W87yeVviP8a/GJOj+In/VaJG/esuEWaeG
DX6iXvgsGP3De3n5WvSD2iD6Qf9bZeKCu/5hyntyln1Fx8frTyV+ouMlfqKP
HLrx4nDtF7r0BxvfpNaI0a0l3qKvSrxF9znTvsmiye/tgkYbo3ssjNFZRb+p
/qLf9MJDZ59u/9ZbjRpe9Wiv9/KxgMSLdHaJF+mTEk/SIRJP0q0l3qRfSbxJ
L5d4lL4r8ShdU+Jb6guJb6lGJwaWbjLAT7Xw+GthhS0h6l7uXZ/4twhVR4/0
bFjgs3BVLSXnh/7fXFdHl/peLHT3lTom8Trnb6w6/u7euHeX9+joV6NfVs2d
qO5IfFA9kPigqt1g8dn7Ux6r/Dfzdky/4a269VWl5LnlQ1XrvP1Lew1MVFM+
qDhk8YB9eu3Upz8sOpuq2ki8U02UeKeJn2ZS374O7O56P2Z44QW+p+Nd97v+
KFj1l/mZ5n2YbPK96v4q0PdZ6Whrv0G07hZ0echf+1P0AEk3+w2eSLrqJekq
VtaPdB9ZP9LO9SX9SNaXtHP9STWR9Sf9hdCnlgt9uoasV2nnepWuJetZzt93
Okz6R9eX/tHfyPqXnifrX7q/9Kf+SPpTp8h6mZoh62X6zFvHeKgQGQ/9uayv
6WRZX9MrZf1N15b1N51d1uv0eVmv0zGynuf8fa1Pynqf3i7rffpn4Qe9R/hB
v5L1QZ1Z1gd1kvCP/kn4Rw8Q/tIFhL/0EVlf1BllfVFXk/VHPV/WH7WW9Upd
UtYrdS9Zz9S7ZD1T9Zb1UudvhNor66nqhqynqkuy3qp6yXqr+krmlxor80ut
kPmovpH5qH6W+a/myfxXnWQ9V02R9VzlL/JDFRT5oSbK+q/uI+u/6gdZH1Zf
y/qwehzmkEdqqMgj1V3Wk9V0WU9WnWV9yPmbonZ+eabh4IvhasGTysU++ype
18natcDukRFq065857Kkxum2F8cGPR/gr/oknZleflu47iXrt85fP9275q8J
/oXOqWztdnfePiVIdZb8uqfkf69HHOXr+VK+qiHl63+kfJVX1svN/g/2459o
XfnupD2JevL5mG41u6V9H+ZtUN5HxZJd78N84VHor5/+cb0PMzu4yIC2a7aa
9PQvHNjMx/KSX9WYUKb3rHgvNSf/1aIbqgWb/QRzG4Z83CgkSP0+8Wa5qM/O
mv183zRqu3f1pEg95974hHLrXfsLEqU9ao6015wnxD+ddG/2ixk1XO/BZAlf
dyasZYKuUv3JvSfFQoz9u/DVwx5FlqR9/2Wpd+vel/oG6+gKFX/uGhNozuMu
l/VYlU/WY028627mfwrnfPzC+NsD05W+WmZ6rJqeNUPM7fNH0rwHs6Zc32KL
u7j2x68UbMrrI9/r6tkc36d5H+aK1Kd/lPVjtVvWj1XHU9lHH3x9XN0aNrZt
pXfBqqPQm+Z9mGzSH6Y9P0l/qdbv1mbtNzNS+RcLWjfnWqpqJVj7CNZTZ52o
MGPkA1UkJuf58YfjtX9cnO+arqFqwNqKg+OvuN6D0ZUn3Oj8fbyeVKVA4Tcp
rvdLLq4s9aDs9Gtq0rDH0Z9XjNQVhB/0TOEHXU/GWznHW/+Qq6n3iJfPdZMm
D2qmK3dLL+7dvdgv3s90r8IpVXxyext//eWcJZ0iRz819kyZu/Xn/3rN9T5M
6YGHj12f43qP4IHkN/xfVtLV7nU9Ls+rc11PLfBNlhyVA/TMHEUrvup8U3dd
fzyx/Hp/3V3ao5pLe5R/L0d71JpPHe0x8Z+KUr+5z6TguQzDmr9znX/7VLA6
IPWpX6Q+VVzqU1OkPvXBu7o9u9aJ0n+Uy1Hjas4kvbzw+fi7N6N1Spbf1nw/
OUXPE6yyZHVgcz7jwfqafac+cL0fc+nK3l03/nS9H3PvSe2Dw0ZF6n+nqLX/
lHivfzbOrXhlWKJeUGL8gAM9zXvoXuyvS+ry+dEBG1P1uYYNQh59GKGrFYvp
eMjzrYn/H5R4jy72Q70SYz51vR8T+VvFgGSvJ7rt5IzXv2r91sRPu0u8Se+q
f+Hh92euqoYtZ01seiFOBwQvbp6y+YBqmqn7CI8C4brju/a3Sl7xUy3/UR/2
2Oxp/KsJIY71WrWse/Wx84e53pMpuHvh0QHej1THLTtX5Kv1UPmFTY6rdPWx
2V985lixsGwrQ9XHLRtV33D8tZp9cfXY4fNCVczm7/2aesSrsS+zNcm3y1e1
2ja5+NVCSSp99i73v/onWC2vumnwD1EJxn4dKfFrM76nRX6qFb8eyZSp2hN1
VXfLkOHPZBNfuyDxeLVM+tfslzDvZ3d19K8a0yNLxb6Dw1WmGe307P+STTyt
jawXmPjIzfq5j/4wIcnEoypVWLHqh6mu+FXdS8lXNyx2rSe02uC7bcvhBIOr
fzmgyeDtrnj15xd6d6hfJ0Hfl/XpNO+B7hzQ55MaGeON/Emp/vZUuVDX+bKU
7BcKZ38dbebXuerl1j1cHa3HTHCslxv/C3+tasZ5eWI3u96fKbrhfOKJ7S9N
vLHdV9cqvtgda+KDdaS9BrcXesz+4RdTwgoX+vOtiY/2zN98VJVc70z6t9/8
OqHmN671pANVx+0btzzF5L+Za+6DbwOTVbzIT31E5KfO7f9FndpVLqp2Mw8P
2OPper+uStOze3tnSlYNXmz9ZUo51/va1QWb92XYvzl3+PSGsx6maM91ha+V
zBChEm55hTV9j68ffHjvcj3Xe1JPBJv7PHq0uT2n7sNH+nlojRqnGj7UzxuV
LtJ+wwOzv5b9oEW7fDjkmXpk9sNWXHhg2q0nZ81+70GCVZx8b84rIS9qyvfq
isw/3Urmn7kfppaMl9oo81U3kflq7q/ZK/xh9Msl6U+9NLb4sQUVA/TwXb8v
b7jWJX/3SP/rIm2nndtw8I4+OSQwuGHzVJ0hsEf0/JC7+st636z7PVOqzpVt
8DchH3jrjY2eZ+j4R6JW3+6se7rXDX2gcIOxdcq53of5RsZXFx0772bRin/p
DWP2Nt99LEUH7qj5odeFc6p6wbJHi2ZP0kWq7YtPyX5JZS3Y4+7fTZJ0hqfP
7mXvdkcd+DXianDFZD0s4nxw1LMofeiXsMrT07vu1+ss/KSb528b/uFyf13q
/IAZ90ok6vTNs2b6d1+APnokyLPAwnc6x47Lay4F++mvQ3/Yc7lBvD6366fP
Rob46imFu9x/ctY1f/yFX3XmNZ1Odui9QRdsmjN6eYH331co1TR/rwjd5VTz
Jdtnut6DaSHzQR+fsmTxtmXeeuuZWrUrHI7T/YMPfuv93T2dvdyllM/yxOl6
v1T7ve3lE/ri9xeqlpv8Rj/6uUfAZx9F68OJxy+oHFGGngIy33SV7m3WFX/q
rxMivplb5vArfX9Y4qfNlwboxk33zyvZ7JWeeaPrxIlLHukdBSLWepWIMvLl
rsxvNUfS1W5JV/mlPJU10lGeeiTlqaZSnpm/WXI45IV6Ku1TzvaZ+Zq+hkO+
qOZCj7os9Ki5Qr86IvSrwUK/yin0q1zSf6qr9J9qI/2rCkv/GnurlMg79Wa7
Y7xUWxkvdVHGS/0s46W+kvFW1WW8VUYZb3VcxluNFH5RTn4x8d36In9VOuEv
fVj4y8jvqiKv1S/t6y9rvPKW9hlTZeSwZ0mqxL8OftV1hV9VXuFXnV34VdUV
/labhb/N+tE90Qeq9F8t/+nU/Zz6LSk2JEe1ZBWW1TF/1L8yf9S3Mn/UIZk/
Kr3MP3Ve5p9KL/NPlZb5p5bJ/FWjZP6qdAO2+y+uFKCmhG/v+9Oyxepb2Y+q
Bsl+VHVa9rPqRrKfVWXuEHPr+lJPXaznzdVJh8PVANkvq6/Jflk1aFyRZZeH
3NJB24ZMa5crXl0+MDdHm3HhesvQuNBM/q73xxeK/DT60LnfwKy3Vxx0MOpk
2xSdvd39Lt+PD9Fn9X85T7ZJ1T9Nz+vzvI3rPZg590oca1QpWDdolPLjf1mS
9eWNMTXfhgWa9W3ibTdqbzmwq/l7+SX6XF8SfW7k7b7th/dlypuifxR7QTcT
e0Fnk/3Kxr9CHt8LXjpv7fNEXXJR1VNzp/ikeR8mTPYn62DZr6L3yn4VE9++
0+3ZsH4PkvXDnL6jajY+oFaUqHhuvW+qibcPkv3Ouofsh1EtZT+M7iP8pR4I
f2nnfhoVLPtpdAbZn6N9ZH+OTif2jl4q9o7rvajkce+yjHurZ4q9pF+JvWT6
f2W6ffPa34zTe8d22rG2aUia9woeyH5uPUX2C+lZsl9IN9tXYtx354L1kQWP
/L6YGmPqC/ioavrchWO1FntNZxF7TUfK/nRzXpr6y9xN7tOz+WvddNSWNr4/
h6R5DyZC9qvrQVnq9fU74GnSPWS/lM4v+6V0C9lvpU/Kfitjr1aQ/fK609AG
q4t1fWzOX++T/Vv63T+O/Vv642plf+lwOlwX6t8uafuMF+Y8/ttF92dW/DZY
71n7YdWdXXzUvHZjP+57IczEb1NCs/y5+EK4+urMvIYzP3C9J51dylNFpDxj
f2T63VGe2t08l2/jE1fUnMuj884t8trcJ1OvwMsMk+e/NvZyPTkfoX6R/XPq
B9k/pzpIf5nz8XsHra7c7+8I/fVCv9NzIuNM/P1XOZ+hMlR17NdTV2S/nmol
46dOyPiZ+zJCZfzMfG0h5z9U/mvZPx+f0/Ue11HhF3P+/iPZP6hOyv5Bs15Y
Us6TqL6Z+1w4Pn6+OW++U/YjqquyH1HFiL+hOoi/Yfo3/aysvkW8E0x/eMj5
FdVI5qOJHxSS/Y+qgex/VBfE31E1xN9RF1buPbcgU6RZ72Y8VnX8/WGPoW/V
LvGn1NfiT5n9QyvefqM83stz6PlaztcoH++Lh8qvWm7ij89lfuvVMr9VUdnP
qabJfk4zHj5ynkdtkf2faoDs/zT0TZLzP2pFpaSJz/e53oupNnxPy8WVg1Xo
o3kZkrMmq/uyv1QVl/2l5rxzVZGnKofIU3VR5KmaLvI0zXsx5cQe1k0eXPO7
NS1cf3ii86DTW5L1jLb1524qEaGvBvS+Xb1psi4n6aqwpKvZkq5uSbpqKvpA
PRN9oNe1d+gPlVf0h25cZW++m38F6e4FrmXsuDdYjZX9mLqc7MfUr2T/vGor
++dVyFuH/6y2iv9s5kfmpBcflfQOVP/I/gQjr839PTJe+nfpP6M/qtbc3LPI
/Hu64KdtK+c473ofpv/so0OupLzTX9x2jKfJX/f7hnlWXz+gZv0xcliZBol6
7kvH/gxzXwT+0C+P9n7uNS9Rv7raa+7FuMfK71aDAu1fJ5v122myH0JXftTv
UIqf6/3CDQd/vdLoeYCu8uhS98Gl48z50Pr/Xl91eVCc/iuDY74Yf/xjmX+u
98XPD85b4stoXS5HYq1hh9/o7SJP9CyRJ3qU7I8x8pbz9DVFvuhjZ2cHfLdo
tN7ZqevhfodizPmr0rLfRQ+9kiH4aecIvSTvyqylwl7qLvlPZXuWwfWei79H
wQ4rG0cbeXrFe4mPT9FQ/bzWt5nb9Q7Xz2W/j7nfgvE5kXR5d/qQCL1T5Kme
LfJUN5L9RSY/660vRb7qxO+a3fhn8R39VZ50Gzy2vDT6N6fsB9JD65xcGPH7
7TTvtUTIfiS9LnOxzq12ud5Tzz/xd4+eE/31qTwD8/rVemH0Xco7x/4n/dVX
D4v/fPSFfnC398wYv+d6d/Mhj3L1f2HWu0rMTSoWPy1Ce+/Re0oFXNEpf679
K+to1/ssp4Yuj0rcGaWeh/73aa6/95h4w9E/xo3tvnWbmn+3ddO3FcPUuoqv
53uNdL23krv18F2RH7+30yd/XztzySD1etbZY5tHBhj5fH1bny0Z1/ur4Jol
vUd+H6WmPynZrcWUAFN+jXajr3f/01+NEn1nzufemX8va8ddvmrA3mLrJ8e+
NueLE1//V933wGvV9eDG6u96B6smi+a+LZgt2sRLrsn+NpXY7VuPk4NepHk/
pYLobxUu/GDSX4m+NvopZ7Ulr6qmXlczP+7/07VfXe+l1Cy1asr4ZvGqwrbU
4a+HPFGtvukWOXBJjIm/TJH9eqY9L2S/nzor+w3N+TXas17sGZVZ5ocqL/ND
ZRqyrsUvn5xWA/pNPrL9QYKJX3eT/YamPx6Lvadqy3xN8/5JoOyHdL2nIfad
KW+q7L9UD8U+VfZ9VA/EPjX0lJT9oOpKhc/LVM7pep++xOVJr6bUdL1HcuGv
T8tOHxCsWuzNk2XUVtd7JCXk/KG+KvEyc36/29OMfS4Nd70/kiT7K9QU2V+h
iy7/aOWxhsGqz0cLq6+fdFcvlHic6z0S2c+sr8l+Zn2tv8N/0Guy7Pif/2Du
v1kw7I/F51uHmfO30cVqzUo5FaKPH5xdqanaplv4rou9PitE1/Us+O+ARrv1
zt73Hh2qG2Lkb+z4y18P/tFHPytcpVhU+3t6ffdzHx/+6bmus6HAs6LX7ulM
fSa17O33TD88U2x8zNIgc3/j5mkLi1T+MUht8S3crkOVy/qTsm8K164XpFod
GVjmvZOo70h+c5/TUsmvA3wc+VVeya97SX5zP1GGCY72qE3SHhUr7VENpD0q
h7TH3EcUJ/Sqvw446FU9hV41QOhV+4ReFTV4TcTcDSdUvTWl6m1+EawqPhwf
dzi3p9kfyf1hqn1yUOSwYDVY9rc5f5PUvM8OX2rW01d1X9f8adN3rvc91mX2
PFSoe6r+c+fMdIPGROl7lauPGNc4VReYv+nGkzVRusGd6m++rJiqk7K3vnOz
QbQafX3wmmyTU3T96U/3NssTrQrWbr4g3TTXex4TJzWbOPlUijpd8pNfpmSN
1BU/uBbe8XSKOi7xL50k8S+VLOVpZ3nqaylPO8sz98Nskvap+dI+5S/tU59K
+5SS9qltYr+qBmK/6v2yP9O6Dy1SbSt1MXe7U3Ha5/N+H22JjFYH0gfPn94t
RT8XrA8KVq+q/fO687hwdSs0z40c7/3Nb3NP3XX6hp/ul++/i4UjPPXrMq0z
3I7aq69Xa/Kg6aMwdXbXx7uGZ9mh7zX56uHuFa73On4T/tY9AjffS47+TY3d
cbtWnmvv7Y7Sju/VcfleR8n36pZ873rPuMF3ladMitPf+0R8++rHc+qjX/fP
O942Tt84nXfC8+vnlNeMHcFZusTp6Z9+8fDj0Csq8ELmmo2Ox+lM+3t94ZPv
ktrc/Xi33Itc73f89e7l0P2LI3XVsLdTbs3zUVvP7wvZ6RFp/NVes571KDsv
Qn0o51F1rJxHVYW7z4/xX+qnxzevU61L8wg1U/hJDxJ+MvcJbJXyVRMpX++U
8lU++V5Nku/N+b/Hbwv0v3EqXF/tMvDWj4PDdY+f9/Zd/l+yzjOrRaNiVV6Y
9Qj0f44/jxd9sSRVnxF5Z/zpwHtXftu/64Gxd7r27TCqWt/T+vm/dYKK/Zys
n89YPGNQz4fmfhnin4mN8oyKvJysj4h9b/aLY98uEfteez9Y3Np7R9r3NlJ+
c/gXOnWwQz/ofqIfjP/uU2r+VFXprU4v+ktPE/2lV8j5abPfnXhqZdFn+mDM
dY/4IZeNvXcoY5lcxx5Fmv3j5j7FhS2nH33xRpcV/adbiP4z8Yruu4YsXloi
Vt8S/a37iv7Wg+X8t7HvGP9Y0ed6yrIaR1vu80nznmqbn9tk9v0hRr/atbbM
17sjzfsX9NfQ3T/1ST7zUncWe0A3FHtAvxb9b+y9W3P+/aXI9qA073Mc+Kpx
kRzv52FZ8YeNvTXq4fp2KUXvm/zI/zu5f4vb3v+lDhB7Rk8Te0bPlfPzZn8X
/VVB7Bt9rl/1jMW2p31/Y8PyShufhARpb7GfdKTYT/pDOZ9vyqO9Wuwp7V84
Ylr2fq73OJ7sqjvt9DnXexzw75mHC04EJz3T88R+0yvFftMZ5L4Acx8B8Y24
Vg57zux/mfNrB//NxR7rP6osDZmW2/WeR541Ce+O/xZpzi8yHs83zZgwsOMV
fUzsSf2X2JO6mdxXYO4voH88lzjsS7O+k6fpxD1Df/PSsZUaj/92dlSa9zw6
SrpKkXSzHldS7FvlK/atKiztM+cp8Z8Lbna0z+zP/lvoU38KfWb9rpbY08pX
7GkVKP1r1jPwt32lf1W0jIfZH3RTxtvggmK/qzNiv5v7infJ+KutYu+beMxV
8U+Uv/gnpr7z4o+oVPEvVE3xL9Q88SfMfXp/CP+a9zewFx4I/6qVMt+Mvesj
88Pkx/47J/NDDRf/Si0V/8rEW+bIfRmqn/hbpv4kma9p3gv5UearuS9ph+hH
tfy8w79Te8W/M/qsvcx/FSHyKc37H31F3qi/xD9V1cQ/VZlXO+4LMfa2eW9F
/FXlI/LVxIdOi7wz5x/wT56LvFMVxL/Wc8S/NutVs8SfNvZ1gMhf9ZX476qQ
+O/qrNyHYs4nMB6DxJ9X6e479Ema9z/aSzxUVZT1bpMeIf67Dhb/XZ0QfWPu
J0Mep4i+UT1FPyk/0U+u+xUlvqzWJ+dLSlgfrOoc6+Jz8maSKij60Kwfw395
RR+qwC7r2/z6Pv+WfuMbJo9/rHs2flxn2fRgVTCv778PGj4097dG5ym8IcOk
eD1n/9QOm3LfV8NK3LpRaK3rfY8c3g9z9HgUq5vsXjb2p8deyqNO//Gz8rje
7+j85eQ7Q3ZE6D159gzY9+qy6pXlQbWHCRH6auDICSEHXe9x9N5aISHfxmAV
uSI839hbfrrvr3Ni3vwXrHY83fbbm3a+etKGI1cy/xus7rxJWtC8+lM95O3D
EQ8OBaunleKebB3io69Ieeb9DWd5+rmUp5zlaWd5apyUpwOlPDVYytNHpDxV
TM536h1yvlMNDXHYY/o3scfMemZUlSyZdo+MVFtkP6aeKPsxlZb9K/on2b9i
7gvtKf2hvv59a+idRuf0jmFF5uQYFqHaeH1fO9+Fc/r3RQfW9JsUofykv/QQ
6S/Dr7mlv819ijdKry16cVW82i/7TbVzv6nylf02epDstzH8NKhVlW9878er
k7J/VUfI/lU1Ufbr6GKyX8fcR/haxl/5PS+QMei7O/rRlTPRrbrFq61LK03K
MeeOjv0ue/ZsfeLVJuEPPUr4Q52V/Mpb8utdkl+9kvw6m9CvNgr9upPQrxYI
/bqT+JPmfY0C4j/qsuI/Kh/hXz1c+Fd1F/7VxYV/VSnxZ819cP5yP4quJ/ej
qIvi3+qvxb9VF/8rXCTj3EA9u99XtTPnClW9gwc2XFEgKM17GuVLeAaW9AlV
DYTfdUPhd3M/9eoC3z2/+1GqbnNw94nzO9K+n7Fe0tUPkm7e08DfGC/+kF4o
9z2oVnLfg/YU/0hVEP9IZy0/9guv39/r05Orhrc7kKIHPr2x6UbjSLX6i6o9
q55wvafRqmxgsyrrUvTwSUWb69BIdfjWuMfztqfoCqtX//Br7ijVzq/cr5e2
pOjFiZ8Ou9Q9UIcl7y5bZdMhtezRmA9yrUv7XsaXQzrkWNfrX9VieO/E27GB
5r0M7qvuumPun+menTN41JEVGz8KeKEG5Fza4UG0670M/Mk20j41Utqnne1T
laR92tk+9aDV+QoLygWoJ4FFfun1IkyfK/RwzIf7Xe9h/CHtV5ek/XqVtD/N
+xfegxzt138uH9ip/fK0719kObRk7ITRKTq79K929q9y9q9eI/1r7s9z5lc7
hhz9OrzBOB099rO4eeND9ejPPCcsOvhMr97V/u+5jb11SFj6vfvj3tsJwQUX
XWx2W8+tP65B5MAAXbx5aNDEUt3UU6FP3xf61MHRs5qpFt665e9TDnu9lyd3
9xx7+2b0E50+4+NRfu/na6YKBauOGRWkPnL8uu5fLy/+n1nP2LXoeck2FVNc
9/n1rRdY99cUc76ha40zOupkivH3qjy79WH7Igkm/bdB599saJdg7qcs2WX5
2g0ZE8z9bg+LREzv84XrPajjG/t9k8M30vgT8aGZT1Z8FWnkyWlJN+cVLnSY
U2fU1wnm/Mpcqc/cL3/6yZOL4U0SjL9YQ9pn0jMLPWrcyCcx2c9Eq4BmS/uG
TorVUwTrQMFGX76R9pj+qN1n3jeFlkXon481vBtQ0nU/PP2Ze9HP54/ectn7
3aW/VK36BZo+WRWoNk/ptPzJvRRdQ7DeLlhdOh66u0Z5TxXRLVOZBTeSTbxP
Cz1m/+g5oV+fFfmjfhf5Y/ynZ9K/hv7/ZDzVmTKnxuQpeEt3aPXRh7X6+OsF
wk+qt4eDn3So8JveIvymJgo/qr+FHw2/TI5uviXn6yT9IJt35vadzumNm/Ld
Wlw9WbetNfV10V3n9J3rG376qLzrftU2bdaFVR3geq+0nWCzXvKLlKf+D4tX
o9Y=
       "], {{{
          EdgeForm[], 
          RGBColor[0.148, 0.33, 0.54], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
VQ==
             "]], 
            PolygonBox[CompressedData["
1:eJwtlklsllUUhj/42798UxEKOEGhgBITFyYaV0YB40w0qUgMC5swJCBCVShQ
lxJKYhAljBKKVGgLpSCDWheaWBAEWjWWsZSZDhRspVSEuPJ587o4yTn3jPfc
M9yiGaXFCwYGQVAF5AD3pUFwKhsE3RxeS4KgEXpmXhC8AO8n8NNREIzNBMEZ
zm5Dn4+DYGluEHwE/B4GwRqgcEAQxBhrhlcLTIb3IzAM3YfQuST7wFDoauQf
w14L/rrBe/C5F9487H8Jfwn6pdibiL2l4LfhfwO/hLMV0DtC+xqL/WXQV9DZ
gW4N0IqvDfCLsP8U8Ci8utR3a4feBZ5wNhh8JDaGQl/G/gbsbwSugB+E/yJ3
r4Y/DPu90FPAx8NfAX8MOp3gXcD98I4D6/C9FjgG7y10+pFfB0whlkfgP4m/
EcBq6Ero2YoX/XbsdUI/h2wdZ1fBt0WO9X3oKvA30JlPPC3Qt7CfiW17O/Ql
+CXAMuRPQvfBv4XNA1nnrA98O/xO+OXw98P/I/LdFYNiGc1ZO7JnyO9ufL0C
jIK/mrMy8NrIukuAr5F9m7PNxLMIenfqGBXrd8j3428kZ1eztjkCXg30Avjf
A9fBq5XzjM9qwSvQGYfsLuhrkWtAtVBMDHfAtyLThvwczr6SfmTfC4F60eRj
Uq5rrga8KrWs7qC7bEH+Xegi6BPgP8NfBf0M9FboO/hvyLrmStFfxVkj/map
HpHdHBlXT2xJ7VO+y/SGkd9cb78eaILuAc5Sbw3Y2xk6J8qNfPyd+M319rVA
R+IaVa2qxzYi/4/ek/xOHUR95fN+2J+b5xwoF4ci15JqVLU6B1iZcc0/CH4P
mMbdKslHL/Y2ojMd/QT688g9ol6pBS5DXw/di6pR1apyotyUwt+B7AViPJyx
jS+gDwJpjnN4GHw7OZuI7Q+A49iaAT0AfCAwE/xu4l7W2T3wLqBO7w1cB78B
7M76jfRW/0L/AL2f/NVgbxg+WrPu2SHgr3FWwt2bke+FHkKOJpGrQfg4oveN
jB+A367Zk/jtdYeL8heZt1/1Bn8NMZ7A13pk1oJ3J47tCc4+id2T6k31lHqr
OLRsPVAO3pT67dWD70TOsXKtN9um90pdy8rZUdUWNqfnOmfKXT78k1nPoCbs
7Uvda5XccS/4JmSeRnYM0Ij+udiz8Hnottg1olqZiv278Pekrk31vHpfb6K3
UQ4L1JuJZ51mimZLZ+Ja1AxfjL3Tse/+ITpnwNuxUZ/nHlWvfhz/H0vGvXIL
KMPW68QwPN8zUrOyDJmzsXeEdoV2zGD8H0M+P8c2L0GPSXzXcmSKwAsT7w7Z
lO2FoXeRcrYc3vnEsakG2sCn4aOCWEYBw5FvDu1bOVVuf4VenOsZoVlxlLPV
eY7hSOqZpNmks1/A/9LMhdcA3QU9K3Yty4d87Yyde/Xom9heBLwMvgp/Y1Pn
QLmQjT7VIvSEQa7pG8gWcHY5652o3fge9g6pd8n5PO1PZF7K8QzpAb+J/Ks5
3inaLStjzxadfRq7x9XrumMr9ITYuVBN14fe2drdmtma3doh2iXj0D+F7Yup
Z+9s9UDoO+guijkk9oLYu1A1qFqUjGS1846n3kHaRepp9fbJyLa1k9vg70w9
SzTzNfvPpZ49k2UjdA+pl7QDOyL3tHp7NHRL5J2m3baJ+Kch2wH9rfaN/iOR
e1i9rDfolj4x7Mv6T6G/xXJiHp/rHV4XukfUK49z9lnsGaNZozd5GFujUvvS
DivUfyd1rLJ5QbmJrasZuwvdw5HfTjNIs+gBzdSs/wj6K+gOuotiqED3JjHt
yXrmafZ1pr7Ls9hYEPuPpL+S/kiF4P2Ra1F31t3159HfRzWiWtHO1u6WzyLl
N/HuVk21gs+PbVs+/0z8Z9HfRTtjLvhvoXtPfzr97f4DWgB7Kg==
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.33151207240408065`, 0.42021191042954914`, 0.6241909861905724], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFm3e4VcXVxve555x7zt777IsxgESwB5Vinu+PiBqTGI2JoiJCotEUo6gJ
BAsiIiAgVbDRjF0RP6WDaKKJBQuoEY0lWJAqsQs2RLHGL9/7u+/i4Y95Zs7s
NW3NmrXetWbOXv3O63tuU5IkqypJUlZerydJqrSklCR3FUkyrJYkdyvvoN/t
lX4gmq/0/Uulu/X7WX1fpvwwpU1Zkvxc/bwh+v2ak+SsapJM0e8+Sk+q83+I
ZpFoxqjN30TTRr8PVX/HKP1ANA2l5SWP/W2lg1T/ZiNJ1qrtLWq3XnX7qDxB
+cYm0x6uNDTx+Bcpv1P1nURzmn53TZOki9KnmusB+v0TpQGi+Zd+d1J9T5Uf
1hxPrLjNYrXtqPwE0fXS/I9TekV172m+R4umh9I+anuH0kzVzxZdO9Gnyv+q
1KFsHnXV9y5Kf1N5usZpq7yz5t9R+U5KP9S4S7SuC0R/suqniHZXlU9lH/R9
d5WHMld921PlXZRfr37GqW5flbeKd501l1Uqdy+bZpi+bVPdFWW3X527z0ka
Z6y+7RE0rHs3peX6/UrZvynvI7qR4sXG3LTdgz6vmg4axmYO16nNlZrzOvGg
t+a8a8l7eIrSXoXbLhbNTvrenTGVOqq+m+rnqP498XWzUteyeUaOLH2iPrcq
LVS7+aI7Vuv5QGN+rLr9Uo9Fvr/S9+hTeTelBar/WHQniL5dS5J8XfdY7YLv
8P9d0W0Jmt211neUDlF5o+qOEn2LvnfX76lKr2r836nPf8cY9P95ZjnZRf13
K3mt/ZV2abJcIV+fqZ9tSotUt6TutpNVv7JuniN3Wys71v26vjVUf4Xygzl3
Kh+kfHTF8zkg8jZR/qm+FSofofzouuuZO30U0U+h/VrPWVOqp+7z4bLbQLdI
c95da9lFdTtn5tMuwauOcUaR/5003qdNnuPlSq8pLVTbFzP3P1P5xJrrH1D9
ZSXzC15N1TgviObrwmPSB+Mi51cpPcS6leaHPimi3C2xTlgYeqGIMjRtNZ8F
KneP+gVBkyufp3SIylfBY437ZeH+qe8ae7RU5V+rPEvf/qh536H8RqXfqvyI
8ilqu1Jtv1J5jGhfVfq76EdovgcqbeDsVax/0EOzRXeO2s5XPjW3bCAjk6Lt
PGRV4z6n8mSVp6uPaUrP6veTardY+ZGJdRl9L04sKxvhhcprJJ/TdEbWKl9X
M2/vT9w/NPfBB85g7Mt3NPZalfsrH1/yHOE5euKdsumatMa76qa7Ms7U90In
LQq9hPzNVblLYl12d/C2pn6aK9bNk0VzFzIbZ/+eOP/3qX6q5vxgyWfkwTgn
6IF7VT5W5U2p285ObWuWhJ7nTLzY5PEmJJbBifRfWD6/HbaFc4OufSVydPjI
Ju8x+4uuWRrjklPP2WwT84Se9d4bc75B83gffaX+hzZ5rsxzXJP3j717CTlS
uR9za3L5OtX/V/s+S+ftoYb3GfrTS7YHc2JdWcn8hFePah9/U/O3luA5MlxV
+7nq5wnlL9dtV3qo/oPUNmSu8stVv6bs38ydebJW7OSdQV8Vf1Y2+XfHim0T
fd2k9h+pXJLu2rlk2TtQ9Nu05ldVf2tmvYteRddiL7Gb6MBVzaanXYfQ08jF
PLXZxB5of9pm1h1zxY9VZY/PvI6s2r5iWy+rex/Z+3+Kvo3m95TaHqb+v6W6
nyI/+j1e/Pmrvo/S94/U9jbVj1XduJrl/3bRPK5+ponmIvX5vmiOSKyP0Eub
xcNRmvvdan++aCdE20/Qt6L5kerfVj5EY66Bt4ltALagrPlvUJv5ol+v/FLl
k6Ptg4X13Bmp7fYrYfvQgZcGDTm/obtS+RVKFyfWkdSjIx9WP/ur7u8a86HC
/d+bGV+1CflcXvEcDg2d1xJygr1lb1ptU2bMtEZ9nIGNFB9+2bAeLUJnoq8e
qVpn7dVweU/lvZQO1/fBqfceGfhAdRuVn61x+5aMfcA7J4QdHBv8n1eYblbm
NY+NdfWsGCPtpvJo1V0CxhP9vYXLCzlfZa+B+d+o/s9X/UyVFxYuLyh8VvI4
L/PCTqB/5mTWY4tE80LdNhVd0ynOOmd5VM1jM+5ton9D9LdntjnoO3Td/JDb
87XXl5bcBvrNZZfR/Z+JT58qfai5/kJ82aJyv8zyuCVkEn7ze7NoLlDfm6o+
UyeLfpvKA0X/fMn8vFz1Py5Mc6y+P1mybMBn5PSzGIsxaXtnYozMWjbHnpwT
/fRU++8rH6S9u79uW3ayfg9XeZjSn5tdjy7+g76Nrbhf+hwWdd1ifGSUvdwp
dCEyNk11M7DrnJcmY2L08QtgUfX1odYxqGKcPQNclBonbFP9DI29vsn4DewJ
DgLTvtJsPbJAv79V+Hdb5Xejd0S3JrOuQE/QL3r/7Rh3U9hKdMRemv+eSlP0
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
DecSv5K34cTviOPeVJg/12ie/w9Ap4Su
             "]], 
            PolygonBox[CompressedData["
1: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
3KYafDDyG09vvRtIR+z/Ay0IgT0=
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.5240642044143835, 0.4878819887718281, 0.5109974005998512], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxNmgn4ndO1xs9/yDnn+875kBCR0LptNZTMg7amEkMjLkWMGSWRUBUx18VV
XIqraYkESUyJUq2hSFDE0NYQfap6DS1x2zuY6WMoQeb7/ryvp/d5zvfsdfa3
99p7r732Wu9a+/vS1FkHn9BZq9Ve7qrV9Ku9U9RqK7prtb2rWm3PVq02QXWH
iB4l+gDRB4jeS/RxoseLfl/t3xCDY0S/J/pV0VNFDxOP9/VsULv96rXan0XP
1ADLGrXaB6I3Ez1F9KY9arXnRP+LePYR/YtSc+gyPbujVjtL9T9ReY14nyn6
x6IXiD5NbV4Wn5c03mHtWu1/Rf9d9ed3mZ6nce9V/USNfY/Kk1T/kupfUPtv
tUzvpvIP+n+03g1T+5+ofIV5q+5QraGf5jdW5TjN6Yd6f4b4r9G8Plabbbq8
HtYFj7Ft991bPHdvWYbIclaX6d2Rl/jMVXmm6h9Q+2ma2/0qN+j9HXrOU9tf
6f9Rqr9P5c3dnvf+6vMUMhY9XPS4Zq02Q/RXRU9nL/TuQfE8TnSB3DTOUdkj
9urpTs+VOUwQz0/0zJEcv6t3PVQ+pPZd3e5b7/D6L1b7xWr/iPieqP9fUJtr
2p7DtSrXqayrfZfaL6xM/0htjhXPbtU9KPrgtvlMFf0lPYNED1A5XGPt2Gnd
+LraP8t/lRfo+YbqHyisI1uLZ7fKN1Uu7vaaH2Jf9P9u8fmoy/RlGm83yewF
tZmuulPEZ7V4/7v4nNcyn3NV/qr0vK8WPVnPGWrzfbWZ1OU5/EZjn60930Tt
n1LdyWpztXj/p/ot7zRv5P9I5DVf7x+OfIaq7mdt7/ctKs/XHg3Us1r8LhG/
sXr6qu97ndazO2vuD59K5Sz131ltz9b6JonnSVrP422XrzEW+6f6nfR/PvJX
25UNy/o51d8lvn8VnyHiM0v0Q4XnxNzYw07NpaPp/f2q2vUSv6+UlgUyaalc
qnZPiH9n5TN0SZfP0Z6iv6b5j0JH9O4ZtSlVfizeP1abX6rNTPF+TfM5uId1
dWL089edlm9/0bdq3gep720qB2rsSu/u1JiHt83ne8xdfF5vWF7dlce9tOV1
s0fwmqhyoOrHq3xKz2DRx6g8Ws8g0dNU/lo8T1Cf37R9PmdF/wejf/p/v8Zd
2Wm5PqT6y1W+3u19maBxt9Ycxqn8jp7eovdXuVBt3ux2+9Ett18tPke0vUff
bpkfNLJZ220bha2aoHWdEDvzjub4027/P0/1n2YvF2SP1qnNmJbHWl/Yxp0c
O3CE6vqr/1Bsq8bdVvQlajuy2/SIbu9Bp/Z5C7W/UP8v6PaZO7ZuG4X+DZIc
honvfey5np+JrrTGOzst03vU90nV36L/N4r/FWp/CPqgMfvr/7ait1Hdbzvd
hvHGxh6g559wRsXnMrU7uukSe3KC6BU9zAs7c3nOwjfF90XVf0PlZnp+p7pj
Nf5S1d2DTun/5oXtRgMfgI2TzK7VnL+o+dynsf5N70vR16Kn2D2td2q3bcoM
jbsgurqs8BnhrPyqsD6gF+zZwujDSz18blnLWy3L8uttywu5baz2i7s87lr9
nxP7hp3bovDY+DjsWHf83Zbic6fos/X+BuwD+qS1LG6671uit1L/K1V2cTab
lvMV+r9DaRrZb9N2361Lr2lp9O0Nzrb+X95hH7Vt/NR/FT6Hf1ff6erbpbnN
UNlHsntZdG+VNzTsr/HbN+Av9DymNf8oPH4kng807DvwIXcVPr+c43sjE3QK
f/58l306fg5/d4jKLTT2X9TmiMp+FH96UGH7ix0+sLD/ww++qXYbidcaxsev
iR6hsU+qfA7wi5yFV/Xud2r7sHhf17aPOFF1ffC/qj9I7e+r7CeWlPYftME+
PYndw6eqXy/Ri1Tfs2XZsKfs7duV1/yOyjfE9xm1f7Rln/bLbuvzvKZtKWf2
a6Vp7GtD7etgFvW/R+VA9X1G718v7I/3FM/vqe9xes6uu2TMZTXbTnQY+wk2
YW7YjY8K+4/14v9h6JPxhy3Pp2/L5+zuYJhVsXHdWuNjevcJtlj0b0V/IHoc
fkpjL8n5Qo/Qf3QJG/bj0Mc0fX5Oq9vX3qX2y2u2JRfnHDPm5aHX9jAvdHMH
lY/2sF4yzl0Zi/Lu8JnetI04vm5ZMGfO4LrCe8ResQbqP1XdV9rm+WWVEyTT
7SXj70oO26r8W6d1bquW53986XkjK+zMpm3bk0bp8d7BvoEVNM9LwY1a3/5t
2+gDVN6med2q5ysNn6ulmT97AE/2AZ0Fd6K3tKNEv+9Qv9ubntc0lVP1HFn3
+/PjW1cHn6EXozKHPbotmzu6LB/OOed9e5V/KV1/gcop4neUnsPq5oufAK/v
2zZmGoOtbtu2b6f2k9V2kp6xaru6h8822LFTc7hZ5bal/ehssFa3389Om11b
xn4HlR4PHE08wHngXHxH44wr7GMeEv1PmTO26nNe2BDOKmd2v7axM/qNf8Yf
zgo9sWl/+Z2654p8PsPPTWPfUXX7VWwBa+ZMMzfONTYaWz2zcH9wG5htZcv0
K4Xly35j3/CXF8Y/gh8nhs/D0qdLtG+PVMY2L8YXPKj/F6l+mcpVdc+FczpS
fWbr+aLox9kX8erQemuazyL17Wgbl+CPBqY9NL5sudo/yd502+6OCz7vW5h+
vGZZgnvwF+Njg2lD3fjUjwtN/cda75Ua95OW95q4BTvOWFOi52v0bqHq17Y8
LnafPZrUsP0GD8+Kv+6nOdzQYX+Pr2fd+BRwHX4F+q+a75Ha9z7qf6Dkc536
bty0/7pF9Vep/veV8ciFkc+OkRtyOD5z+NzvrM6cwcXQ6OF7ot9tGO8OD7ZB
5s/Hh71QWa7T4vd/3mlciMz/NfYF23JO3f+hscPQ2BrimGe6jGPA+y/EX+zS
cF/sM9h7UUdk0ul5I7eRWv+IwjiF+ITY5H7NZ4PaL9b7LWvGdOdk3GWl629U
+/lNn8HrOnzmjsm5eyo0eIxxZuQc1TcyVvuj+vbYyOtcLvom8bmm6TOPb19R
/weGo1zWcpyA/J4tLJtpkc864jf0rfCYx2YOdenuLdhMlWvVZrrqf5s2MzI3
eEyPzL9cei3YFfrhDxbEFmOTD8+ZACPir/BD+KPTyC2I77ZgvcpYY8/oM3oA
nnmlw+frMWyp/q8ojNPeabkOveJMD9a6h9RtC2bH/jBX8DPY+Xrx2Uf7snfD
+A3/hEyw8UPShviUWHBQt+NBbD/vwaZ75KwyN2R+RHjO7GF8zn/w1Mjw+SQx
GrEa8cqx2deV8ZFgN+Y7NHNm3aOy9s0Kz+kLNY+5R2zXh1kj5xT7cWn6gNHB
13Pbtgn0wYZc0Tb/OfjAyvKcEr+zR8b6s/boVZW3lz6bQzJ/5sfa8X0/1Fh9
9WyuZy2Yt267cFdicdrcXVgWz7ZsLwZnXTvm3HJmie0mZc4jYoMZa1FwLxh9
WmmMQS6hXhpD9Gzb3+B39tE6BmqsAZwDPQsqn995pWNZ4kRsJBicWPunHd6T
ERnrgrbnP0t9X+/w/PG52H7WBi94owOc/V4bmV5B7KCxtsem6/2lhXMOp8SW
ckaR+Ytq95roXxIXaF19mv4P5h/adHy+Sewk+a4LVW6mp2fTMcL1TcsBm4wM
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
6uG9S/hjs3jHGQc/Yfu6Kn9jTX7hKNH/BzJb54c=
             "]], 
            PolygonBox[CompressedData["
1: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
             "]]}]}, {
          EdgeForm[], 
          RGBColor[0.7166163364246865, 0.5555520671141071, 0.39780381500913], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFmXmQVdURxi/z5s2bd5cBJMY9ZdAkRChB9h3HfY0CorFAkxjRoIgLYuEe
o0YBE9kSxSgVtvyBiQomLIrD4siiYMK+VILGlWiZQqwgbpDvx9cUf9w5/c7t
07dPn+6vu89895qbB42qSZLkIv0paTwvS5KnRazJk+TuIkl6V5LkLo0rq0ky
spwk6/W+tiFJ9opnQZok++uS5Gs9y7R+tcY1ejrUmHeD6N4a2wfPyZI/q2yZ
U7R+n+geoieLvqMwPUbj8/pdp2eb+JfWeD1rJ+vdQPFM1PgL6TdHPPdIhws1
d5t4Doi3VuN0PVdL9vV6N148o8S/RzyzRe8XzxHBs1Yy94vvD6LnJ9YHeqjG
f2hcrmeM+JcF3VL0w3peFd0+xuagMeKq2PsB6bZC9H6Nv475jYnH1cHzcJ31
QAdkrwj564OHdbsrPot9ojdIp3Ga/7b4PxH9mOj+oj8K+scaPwlb7kHneus3
tYXm9Xu46Dniry18RiWNf61a94k60//oeVQyPtJ4p+w2S3IeEc86jV3Fr+mk
i8bOQa/Uuh6iTxN9eb3fvaS5c6ue65P53DroOTKxjC6xdlWsbSv6zKrPtpde
nC76KNHdM/9mvot0mK59PaOnTcnnsrhimz0rff+sZ6n43tU4TU8n0W30vrWe
TfrO5+LrWXdY357x3Tq9r60c1gUavX+kvf9c3+mp796d2sfwtbf1/q2Kz+xM
jY16vtDaEXWml2lta9Gt9FRKjof2sfcXSp7fLnpJrfngeUv7nSSdP9Ned4et
8Pez9O1cMs/U+EfxJxXv63T9rooeUPjcoUdIzmDpeaPGRs03a66Vnn7if6ps
Oby7TDwjNc7O/R77XCSeGRq71tj3RkifddhA+jQoxh+SPo9oXZ3WNGn+Ko11
+l1mP7lthu1Wha8+G2cxs2K5yEQ2dCI/bKr3uzZhX+x8ieQlkjVPw5W5z/Cp
OMfl4n9e/N8veXyu4tgh1qDx7ZllY8ps8c8u+zd+vqnwd1pJ/leZzxbf3BM8
8JdjL5MK+9cr9V4zIrdfHRD/2DpjBPhwn95/E3sEJ/bF/JWh/33iHyWZUyVj
rr65QzK3V7z+qrDhA+L5ZWE5V2vu4orxC+wart9viOdB8fxU9AHxjJG8j+Kc
14ony+1r14qnS27/Gin66AZjRFfNjaw3DVZ8o3dz8ZXc+iATvwX/agN/FpeN
R2sDW16rGE+WamzW2JAYg/B1vr08N84s07it4nn2/5W+9aH8dajm/54bb9/U
uCE3prfOrTcyLgQftPa6usP4BP17cpD2PEz8nQrHHX5Yr9+na34Q5yU5m6XX
Hs1L3EFc/BSM1dw5kvuedFiRW5exge3oeEPo2b1imj0t0JoH6xyjjbEX7EP+
A3tX584di8q2T0fJfFq/tyb2l2fCt+tT67hG339VvMvLxlbWLY618IJlDTV+
v0LPpsSx2Crw6pjcMUgsPhx88Lyo795cZ98ih5Hv4Hs19/ywqn2IefxsgOSN
rjPvCQ3WoZr6Pf7GWujRh/iJST2P1djXttTa3/pE7PQpfCbvVexX2Prx8LH5
Ve/p0cwYg7+ylvcTg+f2es/3j7PYFvj5fmYfxpf7Ss6pejcxd9zsCB5wFz/A
vvg2Ogws2y/eDkzerrULxfthZtnbY+1l4T9HRBwzT34nDnZEbJ5WWM+dkrE7
c35olA636WmJjTQO1Lefkk0WSeaU3PRN4t8lGbdKp5O05p2y6SFl4zN77h/x
yR57azwndU46tbA94MHe6Mc+qVuQc0vIBKvALGKEPbN3csslJetCvoT3w4r5
yeHourjGeuyKHEeOxx9flA5Ty+Yn14DBu2ItmHRvvfFtZ+Q7bL6j6ty+KLPt
sC9xhIyhJcshT35a8drpYW/2coXkvVIxhhBrL0RttzfyO/n//nrHGDEC7jRH
/hpWtkz8+r+iV1YO49PKiJezsam+NTPyWnPMs4/dlcNYzTmjOzmKeWIf3teC
nxoK2Xz/yRjRgXrs5YprMuz2u7JtRRxSb1FrTYpY4Czuqfc8mDOv5DwPpvcq
vPbdqrFqU9kxhI2w9RvBvzNsjm2nxrfIO9hhWPgX53XQxwrnxuNS19lN+FON
x6Vh87nxDeQ3B6bD2yni+fzUtXn7qOGxDbZ7OvbHfsD6TnqmyueL2DvYyh7f
xHfBt5J7gtZ8S+PMzL4xI/M3m+K7YARYsaFwj8Acv/GLj2ttL+oP8GmCeB4t
PH+x5q7OXLM0avxZ5lxxd9U5nry9tbAu1Kzo05r8r+dr8Z2fWWdyFLmHHPQr
8ffX++56JkiHW/VulnjO0PyQete1L0WsrYvY75SZ7pjZLuQafODNyHd3pcbU
2wJ7OTdiAx9um7n+e0TfubnwWvJVY+zrfM29Tr2v+c3J4d6jpejBJeuEPuSu
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
             "]], 
            PolygonBox[CompressedData["
1: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
FtE369tVE1UbVTNUO/4HGmylgg==
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9014646115710846, 0.6236615289277113, 0.29454029587036207`], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFVmtsVUUQ3vbec+49Z/c0JjYqqEH8pSZSFKhQ+kCgFOhtNSYm1EdKURNQ
g0bFKqgorxqVaqJGsDw1wfrAH0KrlqAx0sRAUUib+IJE0PqKiIZIVEz0+/zG
+OPcnTs7Mzs7883Mjl9013VLy51zhTLnclg7An5i5xZhXYn1h7xzr2CjAPpd
o6dgb13k3GeJcyWsO8D7GGoNqXPXgq7Gfg3o+aCrQL/undsG+gDoNZA/jK8Z
/9dGslOA7m783wv7CdY/wGvE9yccK+H/YfArIdMVSafoZLsO9HuQqY9EU4Z2
hyDfX651Gvgt4F2Bsz8BPRHrobxo2piA/wdBT4O/PeCfxj3Hw85QJH4f7BzB
ehTfXtAnY+3xrFHc/wB47+N+v4E+BXp55twx0PtAD4B/Q0761GVc+3HGVvoe
ZHNWqnsyPh84nU95+tCN9Ri+Nuy14xsFXQX+d5HowXLZYqx2gd8IWwvwvx62
Fxe1Rz7jV28+0xbvz7hN8do7Cn9bIuWSeaQe/aRfzC35aU70O3nJbMcZjfD1
JaxbwO/Ly3/msJlxA+9EXnYpf5GX7jisQ0H2V+Hcs2FjO76FkBsgHmJh4RBk
HgV9G2RGQO8C71nEdmckXBKHC4POvRA2S0G5aMiEU+r2Qua05aU8KN8bDEvU
pxxB34C9YdBTYafGK8ZzgmJO/qDl50e7I/37Ka+YlLz4LpVN1ktZTnkfySuP
s4Po4/BlHvyfG8kOsboxL4wxbz0mX/SiC1hXJsrhTYlytykvLMVed4m84k+b
ZebjPLPPWNJP+nuqoJx86VRTQ4btYeBkpKj4vhnpDrQzyfjUYxwWFIVpYuH6
gu7+FGJdAv0k1tVW07S50+wwtnsinU952hs2m5tzwte/fkJ/BXw9GITlrbbX
C9lXi6rl9iCdZYjzHi/8zgyyRZvsG2MqnGvFWpuqz9Af6j6QKYaM5TnQeRt7
92I94RXLI4niypzx/3OZ7vh4qvjxjsR+J/hTQT+YCRfMGbGxGv9ngr8K68Op
ZJ8A3VZU3Gpj5ae1oNiyDuYXVBfEC3WZw/tTrY9Bd3mss4hd4p756cJ+dyY7
K0E34+sAf1ZQr2F+vkp0f8bh0kx98fdY8eq2XkKadcccEw/MyyTDANfJRtP3
Nss7+8kSfGes5yw2mnkjn/7yntRh/VRlOrcpVR2esL7xVyK9Qa9zeB59uQ93
eIszAfKR1S7lK2P1FGKIZ/Bc5nJOqny9AL3zrD+wTwwY3oiHulj+068ZmfoV
+xbnQa/hirFjDEupsEZ+q/XadsvvCss7839VJrs9PLdCOmMrVFvEIs/93mtW
PRN0P/IZ5w6zxxpn3ZesXo57rZ8mmlkthtuJXvO0wfJJ3zgr11seidV+L9nJ
QXlgPhhfYpw99QsnfxmDCaBrE83PKi871fH/fWVarJhyPtO/ZsMA48CcXhbL
P/KpxzlCXc6oTUbTR/pPPznHaO+/ecr7svcOWr8j/2n4fTls1SQ6kzTlHjHc
vOFVO1tsPhIbcazewn5VsFnA/kP/6NuSIJmHYOMsr7izVups5tOHa7wwmYI/
PVY9t1vP7jDfOEfp5+xUbxrmoj7Vm6XV7vh5olwz57941divWOeA3wS7L0Pv
Z4v1Saxfe/n6jdc84HkTgKmlqd49Nwb1dPb2K4NmG2fcmkwzhv39liC/6f8d
oEe9+t23WLOguFRg9UG9OAThgvWzG2auTnTnF4P6Beu7GvbHWP2MxXp+UO++
gPWS6s0xF3QxFbbYR2+G7t2wsy+onzE3rNlxNuvXZ5phnGUzgt4ZfG9ckim3
keWROJpvfenWIPyuzYRZ1iznOntAn9X19FQY6Q6qb+Kbd2DM+D5jftn7mKO6
VHWx2HoU3x3bbL5c7NVz1kHm3CDbSapapyz7DPv/Dptf+73WzqB99mbGszOV
Tb5za81f1lpjorrhm4JvRPL5Ttlvs4wzjX3wjN2bbxTa5FuSc2GLzWLyns/p
LOak0t5ItHd7Tmd9aLPzNa/78F7sqfcE9YAuvj28zuX5w0F9d5m94+g3fSXW
NlutNQX1wUbiLShXfyd6r1GXPY1vqF6b9RuCekgDZD7y8v1O8P4BzpSeIA==

             "]], 
            PolygonBox[CompressedData["
1:eJwllVuIlVUUx3d6vjPn+759JiEhb0H2FIIzZqPNOI6jo8dJnSyCICxovEGN
MoripcxMnUbpoj0UeUktg9BIqcyplHrJwFJRmUANffAyRpFZJJIZ1O/P/2HB
Wvu/1tprr9sePmfR4539QghLoQL0QjmEvziorwphFfxTMYRbSQj/cHY7DeGe
6hB6SyEc6B/CILBVWQjT0f0S43vzEJ5Dp7sYwiFsBoN/ALUid6B/C/xh5J/B
vsPfncgb0f8a24HoLAdrw99sdH/kbApyBepLbPMI2PfYtMN/AZWQP0KuJI6x
E/kI+ovx9TY++sOXoF3wt7nvX+4aQvx7iX8mZ4Phm3njMbAKNhPhmzJj3fgb
g+1Yzo6AN4E/BP8x9+0Bfxn5FPgU9J9E7iXeZuSF3LEV/jT2DyLX58Ya0Z8E
dja171f0JrBn0UmKzqFyuU85ApsG7Ycfh/7Ion3K9/ucNYFNgHbDt2D/DfH9
jU4t8c3k7LeCa6BaKKfK7WH0h8L/x1kg3qJw5PuxOY1+G2eN3N8APgJsPfqX
8TURne0Fv7ECXofc0885HET+WjPfrZgU2zHw99DtweY4/IuZ79Ib9dZR0El0
T4HXKX7wm0XfUUL+BGpTraFP4XdH16aWsCvE1gm9i+5F8EnROVQuN0DnwDZA
P6H7GTHcB3ZCPYr955y1g22PrmUNcgvyDHR+wd8azuYhLwC/VnCNXyK2DuQq
sP34L8M/X/ZsHMB+Jfwyzu4quifVm69y9iG2bei8Dr8W2oncgrwePqK/L3EN
MvinU/tSD3+L3IjcAH+cGGrwNyy6dhn6PyAvje59vXEJ/JDoWUvB74bv0JsS
z5RmSzlULvWmR3P3lHrrV9Ucvpoa1pX8hl7sG3jzCd0PjUReo3mock+qN6uj
c3EH9x3N3YPqRfXQGM0z+k9UuYaq5Rtl7wblZDXY3Oi71SMrkLdFz8YzyDfQ
vwp1Je6xHvg54KHoGdYs15S9G2YhT8W+C/lgwTlejpxmzoV2lHbVm9G9gRjG
k48ruXv7IP4vwf8JbUo8Q4fh16XuXd05G9vreoPyCX4NfkV0LfTGt7j7nehY
GtDfAv9a2bXXDGoWa3Pf/Rg6o3L3mHpNPZBH51i5vs5ZPbGPRz6feCY0G8qJ
cqMddBHb0eBb8D2ds3GZe0S9opnV7Gqnardqhw7QbJS9+zQD3fDzU++ur7Dp
Sr2TtZu1A/uQ15Xdq5oJzYZmVLM6FpsJqW1kq5nQbNRGx6KZfgD+TOrcqodq
ot+ktynmonIdvWu00zbDT42ebe341ug/Rn/NDnSmob8sM68at0fvVO1W9Ugf
+PnUtbmA3BS9E7QbVNM/cses2FXD33P/Cfob9Mfd1L7I/JdpBjQLkzP7Ug1U
i+bUtdXO0e5ZGN37molN5Op/jA/szw==
             "]]}]}, {
          EdgeForm[], 
          RGBColor[0.9322237380903022, 0.7005593452257557, 0.389893588079937], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwtVEtsTVEUvV7d2953ziUhdEBCR/5FNdr6q9JKJBIhRuIXk6KNiSoJJSrV
VySKAapl1sanQlREDJigPjVoK2mVtobUpGYS1rL24Gbvu88+a//WPnn7qrdV
pYIg6MCXha8uJwimRUHwBD9P8Y1nB4GDfAynCsgQPq9dEOyGMsnjg6/Hl8JZ
BPtmyOJ0EMyDrXtiEJTjvyTGGe7lO+ET8wv+H6V0PhV6F+Qw7N7kiOlnQmEy
7lLE+wBlMeQ3p/u9wB6Bfhr275Dr8T8bvsVOebVnKTfijRpmbqR/1rAmVvxC
+J/wOu+FXOQVtwS17IHPbejvYSuOVdsF6A3QB3G3EnIZ7n9EvQWQ03H+YqJq
2urUy4eQo059YD9SwO1E/MnAOeZ1p9arHta1AHolvo/wPxsLi5icRb7hrIzV
P/aZ82lx0hc5+ZeHus/esI/s4SMnnPO4m+9l74feZ3HZ10aAD4XqYzNkJpI+
anNh/y7DvgcxZsHe7dS3//3DWav1PYZsi9TnXNN74J8D/504L0UPriTiWw17
Dv039IWJ8P9GilGP3J4h50uwb4K9FvaXwHnnpXd79bIF+ivY70TCJMdSkey7
cD4QCn+H5dZq+dDeaDUOmU6fq4jXAL3fC+em4dOWa3eLEuW5PBHvyRly5w9y
bgdWDvS9XvmeiZVLynAYh7EZqylUT6YEyp17wvybcHcu/jNee0M7+cSeck84
30yo2ZHHnH+F7SvjlGWLu8RkX/bC91wie32iGTDuKq/ZDtte1MHeAfthL77w
LSD3CoznbZBFoXJjzjmR+EafAePMdsijXjvCXVkBzB7YCrx4y11mzi4t/pBH
G6F/g30dfBbiewN9PuQMwyFej1esu054xGG9zKsb+vOUeNJhuz/Z+PHJ7nVZ
Lewn62Kfya9J9o6RKw9CzSyxHeQu9nnN/bi9Q+XW54uJ+HTIi1Ox8Z9zeWOz
GYuks1cn0+rXQXtjiMHdbLW3lLwac+oN3yfaErOzp9wN7l2bxaK9BpgToO/3
4is5+tmrDhepF8Ox9nkc2APQG6H/gP7TKddfTv70Ze2d9nY1AHuLU033Iau9
MKu89oX8Zc9Xe/F4ENj3zP9UWthNVvtbJw7OtNlmzF4aa9dveOXHPK975bLJ
ZsH6qKcsD+IzzkPLs9M4udPyIZc5a86Pe0cOcLbtJonJHmy3fmZsH/kOsCby
iTis8avZC20uS7x4OmR8491mw1qe1rznJNor5rMhrXnl2nvIvjP2Na/3nTke
iMXJJ8bPVqc8btl7WWS9WuuVT1labxL3nDvOXpHH7A/fHda5D/KIF39Op7Uf
RZZznpM/39d/KU0EOA==
             "]], 
            PolygonBox[CompressedData["
1:eJwtlEtsTVEUhnfv7bntPXufDggGCB15tZ5JW6QeUa+QECFGQusxKS2jqgHa
hJQWiddAPYdFQlQ8GjEgBBe9BkpyG1o1VRNmEr6V3+BP1n/+tdZee621T3lD
86amlHNuHSgGQ1nnzkbObQZ93rk5wbn32HmwKHZuLnys07d52B9BSDs3UuLc
r8S5InzuoG0DL4l/7JXrJCiQ+xNox24D39Cq8c9h93P4AvgLr9ge8AffWeTv
pcDX8ArsRlCacc5zZkzsMvgQ2hN8SojdCS9CT6E79PlBtd9Hj9CXwL9EilmJ
vt/qx78MtMMnwx+mdScP30hMnlQJ+gG0U2AG9mr0YbQT1PiU2sfz7SBaQ1Dt
z4ipDzrTzl6Lf8YrxmLtTgPEXsLnHP5T8V+eVQ1WSx85y/G9BVZFulML2m2L
j9SDw/BJxNfDB4mfiD0zqFej6FXoH+B34c/R92Q1E+uvfUvF6qH18gHYgHYP
PErrTr3YNV61fcV/Kbl2gVRGOWxWbbF6Yz20Xu4FWezt6K+8ZmKz2UrOUq+d
sn2wOw9TTxP+PqOdsd1ZGKtXtiOz0epinW0zs9kdAhPw7wAX2LcziXp1k5ij
+O4Lsi1nM3ZHrLuNg59PtBO2Gz1gPbVU8O03WoH8i4N22HbZzhiA76bGfqee
5+HfvXYX2Y1gtwbN3nbGdicHWjOamc3uutdub0G/hv0O/QZ2HWcc56xpiWY1
hnyNnFWJT65YO1YD77Y3EumN2Fs5lijWZmCz6AY7yPcXXo1Wlci2N2xvuSXo
7rYjb8h1GaxJ64wr2Edi9cJmdprYq161Wk8q4WVBs7QeJNg/0Tsj/QNGvXpW
+P+/sLfentXuWw/eol0MevtT+FaL9jlodvam7G3Zne3u0/nWhbYi1q50EVML
7wzSrAfWi8GsNKvhB/wfL2iVNw==
             "]]}]}, {
          EdgeForm[], 
          RGBColor[0.96298286460952, 0.7774571615238, 0.48524688028951185`], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFVD1oU2EUveblRfLe9wY3TanapfWnHaRUC9GpmMHBFocI6tTBDsVWNyva
JHUosYpT7VD/IG4xCDqVdjWKQ6CDRRAU9+IkSBHEczgXHC7f5X7n/p3vvDcw
PX9pLmdms7AItlsw68Zm72EridkWgtdSsxz8CH4XfiXS/Vsk3gpmP/NmU4i3
kHt5v9kG7pfdP4hztmi2BsxQZtYP/BZyF3AeLqjOAfQ9jfrnkXcC8VXgqsi9
E1Sn6jV/oEcd+EdBeV2fgXkfYs2/UxSG2FcF9f+O+G3kfMPZxH0N959i5Q0H
+Sdx7ni/X+j/APP0wV9EbCio1yhiH2P1Yt99zskc7pdgR4G/j7MOOwK/4Tvu
+p7j6A0abASzvYCdRewlzgnUKMPfzClWdk6uA99A7jbqPANuHPGnOFdhp+D/
Rf8eCu7lVWMKsUnYtonj6Vg7b+L+AvwOML8dR8zVVLlXcLYj5WaR+FuMNSvv
2Yv13wF3kbvjLBX03nwXckyu2Y86oB6+YOYmbBBxS9Wffsf7HCqo117QTDOp
eCf/nxE7h93H4D8Jqt/yd3zjtWaK0teyz0CdkmvydiaRRteB/VoUrxuuz5LX
6aXqy/4Pg/RJnU54LdZZy4S/F/5zR95qQRh+H3XYJOZ4DOyofxvsX3bOWGce
+AR1brguOCfz+3we8jCYSVfHXEd8I/ajRjkb9VbyXYm/GfRmjUR8tn02fp/U
JLX5OtLbR/59sBbrDPh7LyWaq+O5+Vh45v3JS1vVSDy3/FsaybTb81RY5rI+
ccST657rkf66c7IS9AaMlf37rTg/Y/5dHQ+6I2Y4067UUuYcVHz+NJG++/1d
uANn4DvQ5y53gzTWTLRn2zljvbZzSI3X/L9Rc37o/wMp3aDA
             "]], 
            PolygonBox[CompressedData["
1:eJwtk8tLVWEUxTde7417z3eQZmWQSaU9dKCmCTmLGjTIaOCgx8RBjlKaWfm4
Vym5PWikjnrMS4TKQeg4pUAQUoOg+gOiaUQQ/RarwYa1zl57f/t1WofHLo82
RMRprBG7lkWsFSLOYqcqEZ9TxE8c7+C74NvYWjHiK9px8EIe8Q3cXIpYBN8r
R2zBX6JvJVc3OQ7ia8Gq6GfhS/ja4HX4ffSr5G8k5w30f/F3gX/z7Sp8C00N
7StimpJNuIA1oL0L34d/mJiP6Ot82w8fhL+Fv8AGwHupqTtzD+plaE/EPPX+
4NsQfJUhfKGWO8m+OXLsJOdUbvWckfsoMchjHd4G3iZmGjyFfUd7gphzCD7A
O8CH+ZYXXNME/Di2ge81730i9mSyVjmUazv5bfWk3qSR9j3+ds0b6y25ZtU+
gv0qeKaarXpUr+fhPeDIPOsLxC+Dj6jnknei3TxM1i4y70fgK5lnv4l1gZ9h
Z4qe4XPwTTQVzZcZVYmvVbxr3cgtfO25c2kGffiOJc9KPffCJ5Nv5QD2AD5S
dm26Ad3CaPJu9cZY8g61y0vYSuab1G3qRubhj9FUi77dfuKnknNr5pp9Z/bf
h+YpuJZ8i7rx6eQe1esf7Dp4lm+HSp7pJrwj921oBp25d6xd680d3nuSexa6
ed1+vex/4yL+N5lrVu3KOUPunop3qR1oF/8A48ttNw==
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9937419911287377, 0.8543549778218442, 0.5806001724990868], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFVLtuU1EQPCG243vPtUTvUOA4kABC4vUDyPkAqBCPhiIGChAOThrekZBC
TwJUiB9IExoiEyoKB5II8QG0iWNq5/Kc0QxKcbTH6z27M7O79/D1OxdvHwgh
3MMZxumWQpgthHASzuUkhAx2MobwCb45nN6Q/p9zzMuREG4VQ/iJx6OwN3Gm
8N8r+G/gvgf/8zSEVdgHWQincT+Pe70SwptEMZvI/w7nPfwrsA3YLnIQ1+NM
8Xy3XUYN4BvAv4v7NN6+Bp4qbBOngTdnEZfDXo2Kr6FGjvf3kWcN/jH415Hj
R1lcOzg7ZeXsl+Un5lX4i85fR47xRH7Wqvu+hpgPJWnEHGPJfk3e/2tS852Y
+XYwLB6HzOVtIg23gO1pJh2oBzWetebPEPMVsc1E2lAT6kOudwvKMwPbwtkL
OvQfhL0Sdf/jPlCH7/Avwv8R93qUluRMvvOpuDej+HXMkbk7xrzkmZhw7pYx
UIdt68ncM8ZDDu2COJDrqGeGPHJz6ZX1vmPtGU88xEtNiJm61qwze9V3HzlH
Vc9by3WJ+VyqeZqArstROUNUDxrWoW2dWYtYpjx7xEJMxMk6nAH2kJr0jPNL
RXW4K/RzHxhfgv8zfo9UhJd8mfub+zeZqWbXmi8h7hLeLsKeiurb5Si+O8bA
2aUWDzP1ixyoS8+YGLOQSTv2kDNGnXLHDawh5591ub/HorT6mwojuTP+hOdv
KIpny3pSg7p1IL9156l6/1hjsyLfhageMYZ9oeV3gfcjiOnj9zjs0UyaUBt+
FzgTZ1JpxxpbFdWsFvd3J/fsTEfNFPfjV6ad/A37Imo3+D1oeUc4h8REbMej
4hi/gfzXrDm1Z1/a3jvuaO7Z3vCezGfSjzPB3j3KhOmJ+0JtBp6ZXcdQt76/
LSv+1i0A2z+NI81O
             "]], 
            PolygonBox[CompressedData["
1:eJwlkbsuRGEUhRdnzpnM/GcSvZHQYBCNeAHxBFMJKoWDgoiIZtyroWaoXF5A
T2JUCswl3sMDuATfzi5Wsta/zt577X2Gljaq672SBkEOdEvSWyJN8tiBf6bS
A3o5ltpBqqBf+HA2kqaL0lVByvD6QQ3/l7dN/C9whs7w3+m7jb5D71o/aufy
UoP+e+hmzt9OqB0PPnuHtwn7HpTpvQZuCz7DZq2Aa/Q39Y/ka4If+Dx+nzzD
AjxmxmviOyVwBc8SU1/n+9HUd/nAH8a/oedq7DNtdk/wLM+gAZ8i40zkNxih
9g+9BX8C5/h19H3kO9XwW+iLvGe0rIvBbzOAPsVrlzx7ys4teBY8m93cbt8J
vuslPdpFh3HbyXarBK+1DGPwbvBb2UybbTNsVhns0+849X9pGY/gh6l7ttMB
/B8AA0Y4
             "]]}]}, {
          EdgeForm[], 
          RGBColor[1., 0.95, 0.75], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFUEsOAVEQLMMQ87BgMbGU2Pgkgps4gq2EsGbvBCRIfC7DhnEFJ3AAEqr0
Syw6Xf2rru7acDIYBwDqtDTtmQEutBKDaxHY5IAb/Zm5Xgh02Zww3jJ/pz/k
iVPA3AExe0bs6aSNo088Zf8yML4H+W8RUGEtYf+VuEx8Jz6RZ0eehTMTPjL3
KliPeqtel/hWzvR8ItspfdobFo1fe6RJ2vbkmQVWZ/jjU6wda2c6U/RZPxv6
+/QL7Ww642/Qt53d1nLGp7x+ojnp0j79TJr0j4rnUE1748xfi+akRzfpTw+P
xa9Yc09/89v/Qf+I/a3i+QKm8DIx
             "]], 
            
            PolygonBox[{{2897, 1263, 1947, 3535}, {3335, 1049, 1043, 3334}, {
             2856, 625, 1331, 2967}, {2859, 1224, 1263, 2897}, {3536, 1947, 
             1049, 3335}, {3534, 1946, 1047, 3325}, {2479, 1387, 1946, 
             3533}, {2817, 1331, 1224, 2860}, {2857, 1223, 1387, 2479}, {3024,
              1042, 412, 2466}, {3023, 1043, 411, 2464}, {2815, 1330, 1223, 
             2858}, {3325, 1047, 1042, 3324}, {2852, 561, 1330, 
             2966}}]}]}}, {{}, 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{2463, 2940, 2464, 3023, 2766, 3333, 3334, 3335, 3536, 
             3535, 2897, 2859, 2860, 2817, 2967, 2856}], 
            
            LineBox[{2465, 2941, 2466, 3024, 2765, 3323, 3324, 3325, 3534, 
             3533, 2479, 2857, 2858, 2815, 2966, 2852}]}, "22.5`"], 
          Annotation[#, 22.5, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{2909, 2865, 2906, 2907, 2814, 2965, 2612, 2908, 2699, 
             3199, 3201, 3200, 2610, 3364, 2611, 3111, 2516, 3113, 2613, 3112,
              3366, 3365}], 
            
            LineBox[{2918, 2438, 2407, 2991, 2816, 3209, 2691, 2919, 3321, 
             3022, 3203, 3202, 2997, 2996, 2697, 3196, 2851, 3198, 2698, 3197,
              3479, 3478}]}, "20"], Annotation[#, 20, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{2365, 3222, 3052, 2523, 3001, 3131, 3372, 3373, 2974, 
             2975, 2976, 2866, 2867, 2615, 2971, 3211, 3212, 2411, 3367, 2614,
              3114, 3116, 3115, 2517, 3040, 2518, 3041, 3213, 2360, 2861, 
             2973, 2972}], 
            
            LineBox[{2406, 3281, 3087, 2562, 3014, 2561, 3182, 3183, 3181, 
             2688, 3471, 2437, 2849, 2690, 3184, 2689, 3185, 2896, 3288, 3287,
              3477, 3194, 3286, 3572, 3285, 3195, 3019, 2571, 3101, 3193, 
             3192, 2441, 2995, 2994}]}, "17.5`"], 
          Annotation[#, 17.5, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{2363, 2862, 2361, 3043, 3044, 3042, 2519, 3118, 2617, 
             3117, 2616, 2822, 2821, 3122, 2618, 3119, 3121, 3120, 2868, 2366,
              3054, 3055, 3053, 2524, 3133, 2627, 3132, 2626, 2824, 2823, 
             3136, 2629, 3134, 2628, 3135, 2872, 2369, 3226, 3060, 2529, 3002,
              2528, 3382, 3383, 3227, 2370}], 
            
            LineBox[{2400, 3277, 3462, 3461, 3172, 3013, 2556, 3080, 3170, 
             3169, 2434, 3276, 3275, 2987, 2679, 3171, 2560, 2892, 2990, 2989,
              2687, 3470, 3180, 3016, 3086, 3085, 3178, 2436, 2405, 3280, 
             2988, 2686, 3179, 2570, 2895, 2993, 2992, 2696, 3476, 3191, 3018,
              3100, 3099, 3190, 2440, 2410}]}, "15"], 
          Annotation[#, 15, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{2374, 3235, 3065, 2533, 3007, 3148, 3391, 3392, 3233, 
             3234, 2373, 2874, 3142, 3143, 3141, 2637, 3144, 2831, 2832, 2635,
              3139, 2636, 3140, 2530, 3374, 2630, 3223, 3224, 2367, 2414, 
             3137, 3056, 3057, 3003, 3138, 3375, 2631, 2977, 2978, 2869, 2525,
              3368, 2619, 3214, 3215, 2362, 2412, 3123, 3045, 3046, 2998, 
             3124, 3608, 3610, 3609, 2620, 3369, 2621, 3125, 2520, 3047, 2521,
              3048, 3216, 2364, 2863, 2864, 2623, 3126, 2622}], 
            
            LineBox[{2397, 3268, 3075, 2550, 3074, 2549, 3450, 3451, 3447, 
             3449, 3448, 2431, 2396, 3267, 2986, 2670, 3163, 2555, 2889, 3274,
              3167, 2677, 3168, 2845, 3460, 2678, 3457, 3459, 3458, 2891, 
             2404, 3083, 3084, 3082, 2559, 3177, 2684, 3176, 2683, 2848, 2847,
              3469, 2685, 3466, 3468, 3467, 2894, 2409, 3097, 3098, 3095, 
             2569, 3613, 3096, 3284, 3475, 2695, 3598, 3283, 3189, 3017, 2568,
              3094, 3187, 3186, 2439, 2850, 2694, 3188, 2693}]}, "12.5`"], 
          Annotation[#, 12.5, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[CompressedData["
1:eJwV0L1Pk1EYhvGDWz8VEycnJSJK8Btp61dLSSiSQFGjm4O7GuI/oUJItHVw
FzeNMtCyMTHTCmgYZCAhqW4YLQoBf+9w5Tr3fZ5z3tOeePT0zpOOEMIMFmMh
JFIhHE+H8DceQst6PxnCAV4kQviuW9N9w1cckVd4FQ18QRPPzc65q8kNLFmn
9N3u6XGmLp/nBT7Dp8x08We5jz/xST6kP83z8jmu8WFOel+ap+Ud96asl1FF
W57SP3P2Jf+RK/o3vl1Fr3wWOeu6mXUzP7lgJqvLoCb/QAsD8mMzFX6NV8ib
HbB3FXl7b3W/rDest6P/iS/6xoi5C1ziuD6Gfvm2fImv4DKy+mL0Vm7jNzbl
rL1xsxke46P6TtyQy3KOr+NahH7YmV3ewz9syUV7QyjgrjODPKl/782zeId7
+lvmb+Kj/AFl3NdP8DH9qHMP5FL0/ui3RXfqH+I//1pLKA==
             "]], 
            LineBox[CompressedData["
1:eJwV0M9L03Ecx/H32ix0W2Srk/ZjMDuUh/wnIoQugUKFhtI2ETahTPpFKgUq
QTj/AP8EL2aX1LmSZpcGnQvKk1injkLSY4cnz/fr9Xl/P/uw/PjU7WoiIt6i
0RmRyUb0no446or4Y04ihTfpiAPdT/M+fqFHPuTfCCSw7o5lu+/4hNyXibhs
r8CX+Co2nV3nLb7GV+wXeENucQ0ryKMf2/oBrvMFznpfLyeRNqd4zdl7Tsmr
5ofu/C7n5B/8Gsves4IaOuQz3nSSu/kbcjgln+XzOIcJd91y16Jvnjhb4Kd8
UffKWdFOCZ34Jzf1ZfOSvWf2vppbGNQfO5/VP9J/1jVxXzePkfZb2r+PXbuj
PGd32u6e+Qtu6o/sTusr7f9FV8c93UvcMQcS+GT3Lj+2O4MdcwMfccPZlK7k
jiqXuUf3wh0V+YE8ZK/Iw/xXP6kfkT/ImxjSPceY7/4DKiZGdA==
             "]]}, "10"], Annotation[#, 10, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[CompressedData["
1:eJwV0ElP01EUhvHLwoS2TBsVln4PNAZB4tAKRbQFNcYVuLDE4NYhcenEAksH
1AQTGUxQMFGxtgQW6tqvQMKCL4AUEn938eQ55z3n3v9w6k4he68lhFDE70QI
xzpC+MNbmEmFsM2HyRD+qjfUTznZHkICrWiajciyeIwn6EA7SmiYP+LnfJdf
uqPp3Jz+vbrOXZ75kyfNX8gOzIv6BXWNO81/8ES8R/bP/LV+A9/RJk9hDt/0
D/kZV+zNcpkbqOOrvhC/o80z7dWwgF+ybvMeHMdJnEC/fJ7LzlW5wg/sT+NV
/Deykuyd+94iqz4ju6Su29mxs88X9RcwpX/D86hi2P5p81581K9gGYPuOI8r
6k2zXeeOOKNP475+iRfxAaPuGbC/Jz9r75NsFTn55fgtsiHO69PxXmTQF9/N
mTW7n+P7y4bj98uv8XWMYBRXcS6+g/0vdteRl+XQLb/JtzCGGxiP/09+G/8B
Yf5SmQ==
             "]], 
            LineBox[CompressedData["
1:eJwV0ElPk1EUh/FbpwRRF+4gbMDPQtwyNFGxQVqsIm2ghQU41PAZ2CG6xwnF
toCF7uiuCxwSBhP4CECKERcOv7t48pzzP+fe983tzkwOTCRCCPPYbgvh0rUQ
vvAW5ttDaPCfyyF8V2+os/zsagiTstSVEAp8R3YbafOq2VtZhd/xKr/hx+YL
5u/VO1hG8K0Xsidmi5zQf5Dv4iPO6V/Kn5q/4vP6FfkeWu7NyNa5rF/jCn/m
T1znKtd4ExsYtd/jn2/g0J1f9Qf8jX/hp505bjrXVC9xmV9z0V4B++rr/uNH
zFAyn+LnfObsBXf/5ovcwLD6Znwfdc7eLc5zl6xkVnRuXF/g6XgXWvK/5qf8
j+vODKl71YPqjP0BHuUkd8g7MaLPOZ/mPJ8484hT8V3s1ZCM7427sgdmY3iI
Y9l9zmLN3jr6ZbMYspuO7xffHEeyezwS39jeKvpkMzH3H/8BHxxYHQ==
             "]]}, "7.5`"], Annotation[#, 7.5, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[CompressedData["
1:eJwl1NdvT2EYwPEjJLS2Vu1Rght/CEEkRnFDgguCurBvCZUGtVdorZba/AVm
aRUxWroUbXWgy4zE+Dxx8f1932e873nf8zvnZC5dOye7R5IkU/0U9E+SE6lJ
ks+3cSsQr0tJku39kuROX3mcQ5lcmno6BqOfviE8Tf4zPxOfRKN5TfiAjeYd
UC/nB2oXjLcZn485SB2QJJ9irFbMu9R245M4Xe0jzxfPVOvJ9eJm67agFbly
B9Uq+RUqUCtfE9eWn4F2e3tu3g617bgYOXGOntficvEAPY/4rdw7vMdscad8
hd6XqDF+x1X8lqv5kJ5arkOHOe34jAL1b8hwhq98V/0h3+H7uIdTcT+4GIU4
jyK04EH0owSl+uq5Mc5g7QZ+Iz7s2mVcJi6N/fMjXsxL0GWcpWeBMy7gMeKx
GI0M9XF8RT6Th4vH8zBeiRUYgT9yR/RMNj7Kf8UjjSvRbbxQ7krsX3w59s9X
+RzfjDPxNb6B61ikf7wzZKLOvp7E/eOnPFB9EBrULvIlnDH/LE7ji/xXfMNa
czZhM5rVvsv9wE8slVuG5cjCUPVc+cfGU3DZtQ7Ec4NemCPegiZ9H/Aenfq7
0I0cPTu5mmtwAcWYa844+e/6h/mff3Ce/B5cUvspbucq8WMu5KJ49pGuNtbc
Th5qbhd3xLPtzF+4ibtjP5ytf028E/o/og35ai9ijvosa9fLvYl7imNyR7E3
7l38F/Gsxb3EaUzXvwHVequQp2+19Vdhv/x98WB7KuF78T6b08YN3Mrz9E00
Xq93Aqfo7YM28S/rFfEo+TS9I3lInBWF8q3orbeFJ8nt49/xPYl3JN6PeO+t
n4bj8e0Rb417mvr/W/UPOvDHiA==
             "]]}, "5"], Annotation[#, 5, "Tooltip"]& ], {}, {}}}], {}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, AxesLabel -> {None, None}, 
      FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity,
       AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> 
      Identity, Epilog -> {
        RGBColor[1, 0, 0], 
        PointBox[{0, 0}]}, Frame -> True, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "GridLinesInFront" -> True}, PlotRange -> {{-1, 1}, {-2, 2}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              
              RasterBox[{{{0.148, 0.33, 0.54}}, {{0.3315120724040806, 
               0.4202119104295491, 0.6241909861905724}}, {{0.5240642044143835,
                0.4878819887718281, 0.5109974005998512}}, {{
               0.7166163364246864, 0.555552067114107, 0.3978038150091301}}, {{
               0.9014646115710846, 0.6236615289277113, 
               0.29454029587036207`}}, {{0.9322237380903022, 
               0.7005593452257556, 0.3898935880799369}}, {{0.96298286460952, 
               0.7774571615238, 0.48524688028951185`}}, {{0.9937419911287376, 
               0.8543549778218441, 0.5806001724990867}}, {{1., 0.95, 
               0.75}}}, {{
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {{
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], -87.50000000000001}, {
                    Rational[
                    15, 2], -87.50000000000001}}, {{-7.5, \
-87.50000000000001}, {7.5, -87.50000000000001}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], -62.500000000000014`}, {
                    Rational[
                    15, 2], -62.500000000000014`}}, {{-7.5, \
-62.500000000000014`}, {7.5, -62.500000000000014`}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], -37.500000000000014`}, {
                    Rational[
                    15, 2], -37.500000000000014`}}, {{-7.5, \
-37.500000000000014`}, {7.5, -37.500000000000014`}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], -12.5}, {
                    Rational[15, 2], -12.5}}, {{-7.5, -12.5}, {
                   7.5, -12.5}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], 12.5}, {
                    Rational[15, 2], 12.5}}, {{-7.5, 12.5}, {7.5, 12.5}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], 37.49999999999997}, {
                    Rational[15, 2], 37.49999999999997}}, {{-7.5, 
                   37.49999999999997}, {7.5, 37.49999999999997}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], 62.5}, {
                    Rational[15, 2], 62.5}}, {{-7.5, 62.5}, {7.5, 62.5}}]]}, {
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5], 
                  CapForm["Butt"]], 
                 CapForm["Butt"], 
                 LineBox[
                  NCache[{{
                    Rational[-15, 2], 87.49999999999997}, {
                    Rational[15, 2], 87.49999999999997}}, {{-7.5, 
                   87.49999999999997}, {7.5, 87.49999999999997}}]]}}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -112.5}, {7.5, 112.50000000000001`}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -87.50000000000001}, 
                    Offset[{4., 0}, {7.5, -87.50000000000001}]}, {{
                    7.5, -62.500000000000014`}, 
                    Offset[{4., 0}, {7.5, -62.500000000000014`}]}, {{
                    7.5, -37.50000000000001}, 
                    Offset[{4., 0}, {7.5, -37.50000000000001}]}, {{
                    7.5, -12.500000000000025`}, 
                    Offset[{4., 0}, {7.5, -12.500000000000025`}]}, {{7.5, 
                    12.49999999999998}, 
                    Offset[{4., 0}, {7.5, 12.49999999999998}]}, {{7.5, 
                    37.499999999999964`}, 
                    Offset[{4., 0}, {7.5, 37.499999999999964`}]}, {{7.5, 
                    62.500000000000014`}, 
                    Offset[{4., 0}, {7.5, 62.500000000000014`}]}, {{7.5, 
                    87.49999999999997}, 
                    Offset[{4., 0}, {7.5, 87.49999999999997}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"5.0\"", ShowStringCharacters -> False], 5., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.50000000000001}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"7.5\"", ShowStringCharacters -> False], 7.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.500000000000014`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"10.0\"", ShowStringCharacters -> False], 10., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.50000000000001}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"12.5\"", ShowStringCharacters -> False], 12.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.500000000000025`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"15.0\"", ShowStringCharacters -> False], 15., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.49999999999998}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"17.5\"", ShowStringCharacters -> False], 17.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.499999999999964`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"20.0\"", ShowStringCharacters -> False], 20., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.500000000000014`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"22.5\"", ShowStringCharacters -> False], 22.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.49999999999997}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                  False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                RowBox[{"{", 
                  RowBox[{"3.4713749314311735`", ",", "23.790547506423252`"}],
                   "}"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"5.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"7.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"10.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"12.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"15.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"17.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"20.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"22.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
            RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
            RowBox[{"ScalingFunctions", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
            RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
      TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}}, 2]], "Output",
 CellChangeTimes->{
  3.8543700053647213`*^9, 3.85437004657477*^9, {3.854370088145506*^9, 
   3.854370133429936*^9}, {3.8543701678220377`*^9, 3.854370231193574*^9}, {
   3.8543702932891693`*^9, 3.854370301581081*^9}, 3.85437253841076*^9, 
   3.8544414794338226`*^9, 3.8546325080470295`*^9, {3.8546395570627875`*^9, 
   3.854639581174267*^9}, 3.885916859369506*^9, {3.8859168925613947`*^9, 
   3.885916903383342*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"8f5cda32-a1b7-4484-8d82-04d07fd8bf46"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assumptions and Definitions", "Subsubsection",
 CellChangeTimes->{{3.854371585721401*^9, 
  3.854371597079872*^9}},ExpressionUUID->"93528570-34ba-4363-8047-\
3d9aba15a1a9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Assume that ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "877a9578-6ccd-4275-87e9-98e9edf967cd"],
 " is full rank so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Kappa]", "(", "A", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[Sigma]", "1"], "/", 
     SubscriptBox["\[Sigma]", "m"]}]}], TraditionalForm]],ExpressionUUID->
  "03d343fb-d91a-46f6-96a7-e71d0843f687"],
 " is finite! "
}], "Item",
 CellChangeTimes->{{3.854371191471971*^9, 3.8543712381899147`*^9}, {
  3.854371361101231*^9, 3.854371361103923*^9}, {3.854371479851103*^9, 
  3.854371483537624*^9}},ExpressionUUID->"84ce7526-395e-4ba4-b770-\
eac8c1a890e7"],

Cell[TextData[{
 "Write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    RowBox[{
     RowBox[{"ArcCos", "[", 
      RowBox[{"||", "y", "||", 
       RowBox[{"/", 
        RowBox[{"||", "b", "||"}]}]}], "]"}], "=", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"||", 
       RowBox[{"P", ".", "b"}], "||", 
       RowBox[{"/", 
        RowBox[{"||", "b", "||"}]}]}], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"e1299c1f-8b0c-4b6e-a9bc-fa1905fb4eda"]
}], "Item",
 CellChangeTimes->{{3.854371191471971*^9, 3.8543712381899147`*^9}, {
  3.854371362372633*^9, 3.854371491385955*^9}, {3.8543719477186403`*^9, 
  3.8543719798297167`*^9}},ExpressionUUID->"d083aeab-80f3-41a5-83eb-\
e31e0467fb76"],

Cell[TextData[{
 "Write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Eta]", "=", 
    RowBox[{
     RowBox[{"||", "A", "||", "||", "x", "||", 
      RowBox[{"/", 
       RowBox[{"||", "y", "||"}]}]}], "=", 
     RowBox[{"||", "A", "||", "||", "x", "||", 
      RowBox[{"/", 
       RowBox[{"||", 
        RowBox[{"A", ".", "x"}], "||"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"9b060d81-e4bc-4a4b-bf0d-516fd9f32c30"]
}], "Item",
 CellChangeTimes->{{3.854371191471971*^9, 3.8543712381899147`*^9}, {
  3.854371362372633*^9, 3.8543714439960833`*^9}, {3.854371504537712*^9, 
  3.854371543403652*^9}, {3.854371994701928*^9, 3.8543720208448887`*^9}, {
  3.85437214741162*^9, 
  3.8543721639630337`*^9}},ExpressionUUID->"fc963c02-9957-466c-b2f5-\
81f905a216db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Everything is \[OpenCurlyDoubleQuote]diagonal\[CloseCurlyDoubleQuote]", \
"Section",
 CellChangeTimes->{{3.8543693530189342`*^9, 3.85436936784229*^9}, {
  3.8543704740493813`*^9, 3.8543704831920652`*^9}, {3.854370526153102*^9, 
  3.854370598507852*^9}, {3.8543754812325373`*^9, 
  3.854375489451997*^9}},ExpressionUUID->"72702d60-c0c4-4ef8-91b4-\
c09ac88e2054"],

Cell[TextData[{
 "Big picture: Remember everything is diagonal if we look at it correctly \
since \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"U", ".", "S", ".", 
     RowBox[{"V", "\[Transpose]"}]}]}], TraditionalForm]],ExpressionUUID->
  "da64447b-ed89-40c7-8094-5547b0cd3a4e"],
 "\nand we are going to use the rotation invariant 2-norms and induced two \
norms. "
}], "Text",
 CellChangeTimes->{{3.8543706196523542`*^9, 
  3.85437070643754*^9}},ExpressionUUID->"222281d8-de4b-4ebc-9d55-\
69d933dde4e3"],

Cell[TextData[{
 "The least squares problem for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{
     RowBox[{"U", ".", "S", ".", 
      RowBox[{"V", "\[Transpose]"}]}], "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", 
      RowBox[{"m", "\[Times]", "n"}]]}]}], TraditionalForm]],ExpressionUUID->
  "0946ef62-c473-4b2a-9603-97f3845501ec"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"af34d792-6bcc-4507-b2a1-9e43b262db3c"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", ">", "n"}], TraditionalForm]],ExpressionUUID->
  "18463dd9-ae4d-4165-a4b6-7742effd568f"],
 " is \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SubscriptBox["argmin", "w"], "||", 
     RowBox[{
      RowBox[{"U", ".", "S", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"V", "\[Transpose]"}], ".", "w"}], ")"}]}], "-", "b"}], 
     SuperscriptBox["||", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "303713ee-b1d2-48e8-b973-3d9444d63042"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"U", ".", "S", ".", 
     RowBox[{"V", "\[Transpose]"}], ".", "w"}]}], TraditionalForm]],
  ExpressionUUID->"d8d3bbc4-fe20-4361-bd74-784440af4261"],
 "\nor equivalently if we put ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{
     RowBox[{"V", "\[Transpose]"}], ".", "w"}]}], TraditionalForm]],
  ExpressionUUID->"07c2742e-5a4b-4731-a01d-52a9669e132f"],
 "  i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    RowBox[{"V", ".", "v"}]}], TraditionalForm]],ExpressionUUID->
  "7091d2c5-3640-4266-b0a1-17a6f16b9d7b"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "*"], "=", 
    RowBox[{
     SubscriptBox["argmin", "z"], "||", 
     RowBox[{
      RowBox[{"S", ".", "z"}], "-", 
      RowBox[{
       RowBox[{"U", "\[Transpose]"}], ".", "b"}]}], 
     SuperscriptBox["||", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "cff9ef42-89d3-4171-9d54-9626f950d593"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"V", ".", 
       SuperscriptBox["z", "*"]}], "and", " ", "y"}], "=", 
     RowBox[{"U", ".", "S", ".", 
      SuperscriptBox["z", "*"]}]}]}], TraditionalForm]],ExpressionUUID->
  "cd6f0987-e755-4211-906a-9984a5c5d22f"]
}], "Text",
 CellChangeTimes->{{3.854370736515204*^9, 3.8543708997669783`*^9}, {
  3.85437095424657*^9, 3.854370961885251*^9}, {3.8543710234382133`*^9, 
  3.854371189239861*^9}, {3.854371270489448*^9, 3.854371335261435*^9}, {
  3.854372547740453*^9, 
  3.854372551290223*^9}},ExpressionUUID->"cc94bc71-cb25-4980-87d8-\
eacfc02fc0a5"],

Cell[TextData[{
 "Diagonal problems are easy.  Write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"U", "\[Transpose]"}], ".", "b"}], "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["b", "1"], ";", 
      SubscriptBox["b", "2"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "808b82f8-1d5e-4e34-8418-44a7f3ba3f48"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["S", "1"], ";", " ", "0"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"c987786a-b58d-4951-b70d-be58b2387742"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "*"], "=", 
    RowBox[{
     SubscriptBox["argmin", "z"], "||", 
     RowBox[{
      RowBox[{"S", ".", "z"}], "-", 
      RowBox[{
       RowBox[{"U", "\[Transpose]"}], ".", "b"}]}], 
     SuperscriptBox["||", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "3c60dafe-4ccb-4e0f-b331-8dbe3c91bbb5"],
 "\nis the same as \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "*"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["argmin", "z"], "||", 
      RowBox[{
       RowBox[{
        SubscriptBox["S", "1"], ".", "z"}], "-", 
       SubscriptBox["b", "1"]}], 
      SuperscriptBox["||", "2"], 
      RowBox[{"+", 
       RowBox[{"||", 
        RowBox[{"0", "-", 
         SubscriptBox["b", "2"]}], 
        SuperscriptBox["||", "2"]}]}]}], " ", "=", 
     RowBox[{
      SubscriptBox["argmin", "z"], "||", 
      RowBox[{
       RowBox[{
        SubscriptBox["S", "1"], ".", "z"}], "-", 
       SubscriptBox["b", "1"]}], 
      SuperscriptBox["||", "2"], "  "}]}]}], TraditionalForm]],ExpressionUUID->
  "18052951-d0e2-4530-8699-2a3718b509e2"],
 "\nThe answer is simply \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "*"], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]], ".", 
      SubscriptBox["b", "1"]}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["S", "1", 
         RowBox[{"-", "1"}]], "|", " ", "0"}], ")"}], ".", 
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["b", "1"]},
         {
          SubscriptBox["b", "2"]}
        }], ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "d916ec80-2aee-40bb-9636-262603c52ed8"],
 "\nThe pseudo inverse of the diagonal problem is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["S", "1", 
      RowBox[{"-", "1"}]], "|", " ", "0"}], ")"}], TraditionalForm]],
  ExpressionUUID->"520c0d08-fae1-4416-948d-2a2a58d37c19"],
 " and the projector of the diagonal problem is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{"(", GridBox[{
       {"I", "0"},
       {"0", "0"}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "53c78d64-ec13-47de-bd4a-978d59c30c4a"],
 ".   "
}], "Text",
 CellChangeTimes->{{3.854370736515204*^9, 3.8543708997669783`*^9}, {
  3.85437095424657*^9, 3.854370961885251*^9}, {3.8543710234382133`*^9, 
  3.854371189239861*^9}, {3.854371270489448*^9, 3.854371335261435*^9}, {
  3.854372285215873*^9, 3.854372370223659*^9}, {3.854372425101644*^9, 
  3.854372504456938*^9}, {3.854372557809761*^9, 3.854372611652412*^9}, {
  3.85437287852594*^9, 3.854372966760666*^9}, {3.854373145452518*^9, 
  3.854373241315913*^9}, {3.854373274422098*^9, 3.854373367437129*^9}, {
  3.8543734572525253`*^9, 
  3.8543734888854218`*^9}},ExpressionUUID->"9aa64830-0084-4a8d-852e-\
537473292d89"],

Cell["\<\
The book does the conditioning computation geometrically by making everything \
diagonal. \
\>", "Text",
 CellChangeTimes->{{3.854376878418243*^9, 
  3.85437696642486*^9}},ExpressionUUID->"7f211f92-6d5e-4e14-ad05-\
0928b242ee3e"],

Cell["We are going to do the computation more analytically.", "Text",
 CellChangeTimes->{{3.854376969155579*^9, 
  3.8543769874419403`*^9}},ExpressionUUID->"c5adca53-ff2f-435e-b48f-\
0c17760bdf1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Derivatives of ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "83eacb24-cf0d-4ee1-99b9-3df77fbf9883"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", "+"], TraditionalForm]],ExpressionUUID->
  "cb9066ce-da4d-41af-9964-94e17afd26bb"]
}], "Section",
 CellChangeTimes->{{3.8543693530189342`*^9, 3.85436936784229*^9}, {
  3.8543704740493813`*^9, 3.8543704831920652`*^9}, {3.854370526153102*^9, 
  3.854370598507852*^9}, {3.8544417490716047`*^9, 
  3.8544417688357925`*^9}},ExpressionUUID->"3c5f1ccf-8a62-4ca2-87eb-\
e80c6396a475"],

Cell[TextData[{
 "Assume that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "79e161f2-7813-470f-b664-569e9c7b9488"],
 " is a smooth matrix valued function satisfying ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "(", "0", ")"}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["S", "1"]},
       {"0"}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "68281976-2003-493c-babf-fc15ff902c62"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"A", "'"}], 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["dA", "1"]},
       {
        SubscriptBox["dA", "2"]}
      }], "\[NoBreak]", ")"}], " "}], TraditionalForm]],ExpressionUUID->
  "145e161a-9c21-4e33-a156-ea5df8ea9563"],
 ".  This defines vector valued functions \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", "\[Transpose]"}], 
         RowBox[{
          RowBox[{"(", "t", ")"}], ".", 
          RowBox[{"A", "(", "t", ")"}]}]}], ")"}], 
       RowBox[{"-", "1"}]], ".", 
      RowBox[{"A", "\[Transpose]"}]}], 
     RowBox[{"(", "t", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "67214cac-9857-45e6-bb0d-0e40ac61a282"],
 "  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{"A", "(", "t", ")"}], ".", 
     RowBox[{"F", "(", "t", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "70e57090-0bc6-4605-8225-125283bcb15a"],
 "\nWe want to compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "'"}], 
    RowBox[{"(", "0", ")"}]}], TraditionalForm]],ExpressionUUID->
  "7b194e4a-c9db-4566-b5b6-0bb4b68c9649"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "'"}], 
    RowBox[{"(", "0", ")"}]}], TraditionalForm]],ExpressionUUID->
  "968330b1-a26c-42e5-9c52-d172e94d5fc1"],
 " so that we can use the \[OpenCurlyDoubleQuote]derivative\
\[CloseCurlyDoubleQuote] formulas for the condition numbers.  "
}], "Text",
 CellChangeTimes->{{3.854441781178443*^9, 3.8544419843523855`*^9}, {
  3.8544420146196947`*^9, 3.8544421479457273`*^9}, {3.854443130373046*^9, 
  3.8544431353149924`*^9}, {3.885917329972437*^9, 
  3.885917331601121*^9}},ExpressionUUID->"83e35697-b4ce-4165-879f-\
edad4ef70354"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "'"}], 
   RowBox[{"(", "0", ")"}]}], 
  TraditionalForm]],ExpressionUUID->"060fcc5d-6c3d-4a50-8a6a-f0079adda380"]], \
"Subsubsection",
 CellChangeTimes->{{3.854443383619609*^9, 
  3.8544433912403584`*^9}},ExpressionUUID->"ebed9122-8ddb-4ea0-971b-\
4754e07ab53d"],

Cell[TextData[{
 "This is not as tricky or weird as it looks.  We are going to write \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "t", ")"}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SubscriptBox["P", "11"], "(", "t", ")"}], 
        RowBox[{
         SubscriptBox["P", "12"], "(", "t", ")"}]},
       {
        RowBox[{
         SubscriptBox["P", "21"], "(", "t", ")"}], 
        RowBox[{
         SubscriptBox["P", "22"], "(", "t", ")"}]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "2ce99f6f-a2a8-4088-90e0-0699441a3a80"],
 ", note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "0", ")"}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["I", "n"], "0"},
       {"0", "0"}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "2dd23af3-4e90-40da-ad5b-967890cd29a2"],
 ", and write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["dP", "11"], 
        SubscriptBox["dP", "12"]},
       {
        SubscriptBox["dP", "21"], 
        SubscriptBox["dP", "22"]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "76e0d076-c3a1-4546-b237-08474ea5738b"],
 ". \nWe can work out ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "'"}], 
    RowBox[{"(", "0", ")"}]}], TraditionalForm]],ExpressionUUID->
  "608ac0e8-8c23-4716-9cec-5cc9d7ff0332"],
 " using the properties\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", ".", "A"}], "=", "A"}], TraditionalForm]],ExpressionUUID->
  "535f0dc1-b536-4af1-901e-04b793169f67"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{"P", "\[Transpose]"}]}], TraditionalForm]],ExpressionUUID->
  "2569b110-a324-4c15-b834-a407c6bf63bc"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", ".", "P"}], "=", "P"}], TraditionalForm]],ExpressionUUID->
  "3da877e8-4301-446a-bce9-922bf51163fc"],
 "."
}], "Text",
 CellChangeTimes->{{3.8544422260413733`*^9, 3.8544422381132097`*^9}, {
  3.85444226892091*^9, 3.854442714802475*^9}, {3.8544427693672667`*^9, 
  3.854442861476266*^9}},ExpressionUUID->"92d4d147-a4d9-41a2-96a3-\
9aea492dc882"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{"P", "(", "t", ")"}], "\[Transpose]"}]}], TraditionalForm]],
  ExpressionUUID->"19aabeaa-92eb-436a-9cc6-c0c85cb1da33"],
 " we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", "t", ")"}]}], "=", 
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{
      RowBox[{"(", "t", ")"}], "\[Transpose]"}], " "}]}], TraditionalForm]],
  ExpressionUUID->"a22bb7f5-c5f6-4910-bb0e-a060a6348e70"],
 " and evaluating at zero gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dP", "21"], "=", 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["dP", "12"], ")"}], "\[Transpose]"}]}], TraditionalForm]],
  ExpressionUUID->"5a42575b-27a2-43b1-8517-dd945bbdd4ac"],
 "."
}], "Text",
 CellChangeTimes->{{3.8544422260413733`*^9, 3.8544422381132097`*^9}, {
  3.85444226892091*^9, 3.854442717992917*^9}, {3.854447426938449*^9, 
  3.8544474602060447`*^9}},ExpressionUUID->"014fec25-60a0-48ab-b4bf-\
d692b08ec68b"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", "t", ")"}], ".", 
     RowBox[{"P", "(", "t", ")"}]}], "=", 
    RowBox[{"P", "(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "6ae1d961-8cb0-4966-9cf0-395e6f859fb6"],
 " we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"P", "'"}], 
      RowBox[{
       RowBox[{"(", "t", ")"}], ".", 
       RowBox[{"P", "(", "t", ")"}]}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"P", "(", "t", ")"}], ".", 
       RowBox[{"P", "'"}]}], 
      RowBox[{"(", "t", ")"}]}]}], "=", 
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", "t", ")"}], " "}]}], TraditionalForm]],ExpressionUUID->
  "e28410c2-fecf-4460-9570-1fe23f592054"],
 ". Evaluating at zero gives\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["dP", "11"], 
          SubscriptBox["dP", "12"]},
         {
          SubscriptBox["dP", "21"], 
          SubscriptBox["dP", "22"]}
        }], "\[NoBreak]", ")"}], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["I", "n"], "0"},
         {"0", "0"}
        }], "\[NoBreak]", ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["I", "n"], "0"},
         {"0", "0"}
        }], "\[NoBreak]", ")"}], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["dP", "11"], 
          SubscriptBox["dP", "12"]},
         {
          SubscriptBox["dP", "21"], 
          SubscriptBox["dP", "22"]}
        }], "\[NoBreak]", ")"}]}]}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["dP", "11"], 
        SubscriptBox["dP", "12"]},
       {
        SubscriptBox["dP", "21"], 
        SubscriptBox["dP", "22"]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "1314bd49-c18f-43f9-9d54-de1421b30486"],
 "\nwhich is simply \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"2", 
         SubscriptBox["dP", "11"]}], 
        SubscriptBox["dP", "12"]},
       {
        SubscriptBox["dP", "21"], "0"}
      }], "\[NoBreak]", ")"}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["dP", "11"], 
        SubscriptBox["dP", "12"]},
       {
        SubscriptBox["dP", "21"], 
        SubscriptBox["dP", "22"]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "e65fe4dc-f2d4-4f86-9601-b26494e52a4b"],
 "\nwhich means ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dP", "11"], "=", 
    RowBox[{
     SubscriptBox["dP", "22"], "=", "0"}]}], TraditionalForm]],ExpressionUUID->
  "9ea6a47f-2531-42aa-91d6-e8c4cf007695"],
 "."
}], "Text",
 CellChangeTimes->{{3.8544422260413733`*^9, 3.8544422381132097`*^9}, {
  3.85444226892091*^9, 3.8544427563868704`*^9}, {3.8544428717392054`*^9, 
  3.854443049241336*^9}, {3.8544474833292837`*^9, 
  3.85444748591195*^9}},ExpressionUUID->"43f6269b-7955-4e09-8327-\
3bb01b370908"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", "t", ")"}], ".", 
     RowBox[{"A", "(", "t", ")"}]}], "=", 
    RowBox[{"A", "(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "f1b25abc-ef0d-48c8-86d9-34ace4062325"],
 " we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"P", "'"}], 
      RowBox[{
       RowBox[{"(", "t", ")"}], ".", 
       RowBox[{"A", "(", "t", ")"}]}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"P", "(", "t", ")"}], ".", 
       RowBox[{"A", "'"}]}], 
      RowBox[{"(", "t", ")"}]}]}], "=", 
    RowBox[{
     RowBox[{"A", "'"}], 
     RowBox[{"(", "t", ")"}], " "}]}], TraditionalForm]],ExpressionUUID->
  "6f4f23c1-86d4-49b5-b8a9-3c457ba4c24f"],
 ". Evaluating at zero gives\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          SubscriptBox["dP", "12"]},
         {
          SubscriptBox["dP", "21"], "0"}
        }], "\[NoBreak]", ")"}], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["S", "1"]},
         {"0"}
        }], "\[NoBreak]", ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["I", "n"], "0"},
         {"0", "0"}
        }], "\[NoBreak]", ")"}], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["dA", "1"]},
         {
          SubscriptBox["dA", "2"]}
        }], "\[NoBreak]", ")"}]}]}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["dA", "1"]},
       {
        SubscriptBox["dA", "2"]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "94b6fd44-5b24-44a6-b47e-70676fe8331a"],
 "\nwhich is simply\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0"},
        {
         RowBox[{
          SubscriptBox["dP", "21"], ".", 
          SubscriptBox["S", "1"]}]}
       }], "\[NoBreak]", ")"}], "+", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SubscriptBox["dA", "1"]},
        {"0"}
       }], "\[NoBreak]", ")"}]}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["dA", "1"]},
       {
        SubscriptBox["dA", "2"]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "9b498eeb-ce63-4d50-86ab-04fcc190dd3e"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dP", "21"], "=", 
    RowBox[{
     SubscriptBox["dA", "2"], ".", 
     SubsuperscriptBox["S", "1", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "504857d5-46e1-41fa-9617-b21dc59e69b2"],
 ".\nPutting it all together we have\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["dA", "2"], ".", 
           SubsuperscriptBox["S", "1", 
            RowBox[{"-", "1"}]]}], ")"}], "\[Transpose]"}]},
       {
        RowBox[{
         SubscriptBox["dA", "2"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]]}], "0"}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "3efe2e8c-a7ed-414e-bf20-51fcc6c900d3"],
 "."
}], "Text",
 CellChangeTimes->{{3.8544430756413174`*^9, 3.854443358029484*^9}, {
  3.854443397990427*^9, 3.8544434711773624`*^9}, {3.854447528559884*^9, 
  3.8544475343898444`*^9}},ExpressionUUID->"520ca901-b3cd-4976-8572-\
ddcf9f0cc14f"],

Cell["\<\
I suspect some of you think this is to good to be true. Lets check the formula\
\>", "Text",
 CellChangeTimes->{{3.854442275693859*^9, 3.8544422904061527`*^9}, 
   3.85444237414006*^9, {3.854445856296029*^9, 3.8544458891853323`*^9}, {
   3.8544466871400156`*^9, 3.8544466998754435`*^9}, {3.8544468402326803`*^9, 
   3.8544468418799515`*^9}},ExpressionUUID->"d9601690-b2e8-47c8-b9a2-\
f4f3c3d65532"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"M", ",", "P"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"12", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "a", " ", "test", " ", 
    RowBox[{"problem", ".", "  ", "First"}], " ", "the", " ", "pertrurbed", 
    " ", "matrix"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]s", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"Sort", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "10"}], "}"}], ",", "n"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1", "=", 
    RowBox[{"DiagonalMatrix", "[", "\[Sigma]s", "]"}]}], ";", 
   RowBox[{
    RowBox[{"A", "\[LeftDoubleBracket]", 
     RowBox[{
      RowBox[{"1", ";;", "n"}], ",", 
      RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}], "=", "S1"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", "the", " ", "derivative"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"dA1", "=", 
    RowBox[{"dA", "\[LeftDoubleBracket]", 
     RowBox[{
      RowBox[{"1", ";;", "n"}], ",", 
      RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}]}], ";", 
   RowBox[{"dA2", "=", 
    RowBox[{"dA", "\[LeftDoubleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "+", "1"}], ";;", "m"}], ",", 
      RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Building", " ", "the", " ", "functions"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "[", "t_", "]"}], ":=", 
  RowBox[{"A", " ", "+", " ", 
   RowBox[{"dA", " ", "t"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"M", "[", "t", "]"}], ".", 
    RowBox[{"PseudoInverse", "[", 
     RowBox[{"M", "[", "t", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluating", " ", "a", " ", "Finite", " ", "Difference", " ", 
    "approximation"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{"1.0", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]]}]}], ";", 
   RowBox[{"FD", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"P", "[", "\[Epsilon]", "]"}], "-", 
      RowBox[{"P", "[", 
       RowBox[{"-", "\[Epsilon]"}], "]"}]}], 
     RowBox[{"2", "\[Epsilon]"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Construct", " ", "analytical", " ", "expression"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"dP21", "=", 
   RowBox[{"dA2", ".", 
    RowBox[{"Inverse", "[", "S1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dP", " ", "=", " ", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"dP21", "\[Transpose]"}]},
        {"dP21", "0"}
       }], "\[NoBreak]", ")"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Compute", " ", "norm", " ", "of", " ", "difference"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{"dP", "-", "FD"}], "]"}]}], "Input",
 CellChangeTimes->{{3.854442169749197*^9, 3.854442216289193*^9}, {
   3.8544438852520514`*^9, 3.854443988814521*^9}, {3.8544441470401173`*^9, 
   3.8544441568385*^9}, {3.8544442726540685`*^9, 3.8544443068699684`*^9}, {
   3.8544461481893673`*^9, 3.8544465470816135`*^9}, {3.854446584089314*^9, 
   3.8544466416964746`*^9}, {3.854446714277571*^9, 3.854446773594454*^9}, {
   3.854446806038493*^9, 3.8544468092414246`*^9}, {3.8544468516523113`*^9, 
   3.8544470602588434`*^9}, {3.8544471009175453`*^9, 
   3.8544471179718113`*^9}, {3.8544472157815723`*^9, 
   3.8544473321778708`*^9}, {3.854447618141878*^9, 3.854447665761715*^9}, {
   3.854447800071644*^9, 3.854448027574317*^9}, {3.8544489069012623`*^9, 
   3.854448907192162*^9}, 3.8544490048377047`*^9, {3.8544490939843407`*^9, 
   3.854449164482218*^9}, {3.8544492076351614`*^9, 3.854449276359883*^9}, {
   3.8544493089598036`*^9, 3.8544493440887966`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a11db60e-96a4-4450-9e33-ac23f98f5ebb"],

Cell[BoxData["5.1362799654617315`*^-9"], "Output",
 CellChangeTimes->{
  3.8544488563201756`*^9, {3.8544488876645308`*^9, 3.854448893123371*^9}, 
   3.854448927121502*^9, 3.8544490243702984`*^9, {3.854449059489893*^9, 
   3.854449074063678*^9}, {3.8544491436738787`*^9, 3.854449166232003*^9}, {
   3.8544492143497334`*^9, 3.854449277902463*^9}, {3.854449340073425*^9, 
   3.8544493449406037`*^9}, 3.8544547632405977`*^9, 3.8545361595859947`*^9, {
   3.8546336342998843`*^9, 3.854633649759512*^9}, 3.8546408025862103`*^9, 
   3.8546408353508415`*^9, 3.885917664054877*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"bc1e9f9c-e0e2-4a4b-8a84-249ced5ff6d4"]
}, Open  ]],

Cell[TextData[{
 "This all checks out.  We are going to use this formula to work out the \
derivative of the pseudoinverse ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"A", "(", "t", ")"}], ")"}], "+"], TraditionalForm]],
  ExpressionUUID->"c66d048e-175a-4b37-a65c-972aaf9c5872"],
 "."
}], "Text",
 CellChangeTimes->{{3.8544502854224854`*^9, 
  3.8544503465982375`*^9}},ExpressionUUID->"51da2c5b-b93d-4e3d-ae8e-\
63b899239077"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"F", "'"}], 
     RowBox[{"(", "0", ")"}], " ", "where", " ", 
     RowBox[{"F", "(", "t", ")"}]}], " ", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"A", "(", "t", ")"}], ")"}], "+"]}], TraditionalForm]],
  ExpressionUUID->"fa300518-4dba-4a1a-83a3-5c490785c7b6"],
 " "
}], "Subsubsection",
 CellChangeTimes->{{3.854443383619609*^9, 3.8544433912403584`*^9}, {
  3.8544434955314393`*^9, 3.8544435505865135`*^9}, {3.85444411729049*^9, 
  3.8544441305655527`*^9}},ExpressionUUID->"dc037819-16de-4f07-8471-\
233a2fcedfe4"],

Cell[TextData[{
 "We write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"F", "'"}], 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["dF", "1"], "|", 
        SubscriptBox["dF", "2"]}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "11f9f253-b124-4cba-82a6-c4890f2cf71f"],
 " and remember that\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"F", "(", "t", ")"}], ".", 
     RowBox[{"A", "(", "t", ")"}]}], "=", 
    SubscriptBox["I", "n"]}], TraditionalForm]],ExpressionUUID->
  "e8f0df36-5409-4e19-924e-dfc4c2eed635"],
 "\nDifferentiating and evaluating at zero gives\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["dF", "1"], "|", 
          SubscriptBox["dF", "2"]}
        }], ")"}], ".", 
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["S", "1"]},
         {"0"}
        }], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "1"}]], "|", "0"}
        }], ")"}], ".", 
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["dA", "1"]},
         {
          SubscriptBox["dA", "2"]}
        }], ")"}]}]}], "=", 
    RowBox[{"(", "0", ")"}]}], TraditionalForm]],ExpressionUUID->
  "a0802e8c-2d77-4c44-86ac-b4afe99cd600"],
 "\nor in other words ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["dF", "1"], ".", 
     SubscriptBox["S", "1"]}], "=", 
    RowBox[{"-", 
     RowBox[{
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]], ".", 
      SubscriptBox["dA", "1"]}]}]}], TraditionalForm]],ExpressionUUID->
  "6408808d-b834-4678-a9bf-09ad93ecb61e"],
 "so \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dF", "1"], "=", 
    RowBox[{"-", 
     RowBox[{
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]], ".", 
      SubscriptBox["dA", "1"], ".", 
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "a9635cda-65dc-4884-98f3-73e7b0eb37fd"],
 "\nWe still need to find the last piece ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dF", "2"], TraditionalForm]],ExpressionUUID->
  "ae625d9b-9f60-4d73-b82d-398ea7d73134"],
 "."
}], "Text",
 CellChangeTimes->{{3.8544422260413733`*^9, 3.8544422381132097`*^9}, {
   3.85444226892091*^9, 3.854442714802475*^9}, {3.8544427693672667`*^9, 
   3.854442861476266*^9}, {3.8544435749690065`*^9, 3.85444378846772*^9}, {
   3.854443819511695*^9, 3.854443867651194*^9}, 3.8544440436732807`*^9, {
   3.8544442124544654`*^9, 3.8544442124544654`*^9}, {3.854444329648999*^9, 
   3.8544443492887583`*^9}, {3.8544444891046944`*^9, 3.854444511940527*^9}, {
   3.854444622389892*^9, 3.8544446727206683`*^9}, {3.8544452452477446`*^9, 
   3.8544457197971535`*^9}, {3.854445915615405*^9, 3.8544461279701633`*^9}, {
   3.854449362952196*^9, 3.854449396168912*^9}, {3.8544496713961477`*^9, 
   3.8544497472839656`*^9}, {3.854449848100422*^9, 3.854449862671852*^9}, {
   3.8544498934999084`*^9, 3.854449899105328*^9}, {3.854449969473421*^9, 
   3.8544499759869204`*^9}, {3.8544500246611814`*^9, 
   3.8544501245310855`*^9}, {3.8544501783451977`*^9, 
   3.8544501838738775`*^9}, {3.854450724608451*^9, 3.8544509690484076`*^9}, {
   3.8544510006514993`*^9, 3.8544512143372955`*^9}, {3.8544514462703247`*^9, 
   3.8544514547956076`*^9}, {3.854451898202016*^9, 3.854451999757769*^9}, {
   3.854452035552532*^9, 3.8544520377905245`*^9}, {3.854452487311494*^9, 
   3.8544529443445845`*^9}, {3.8544532177687664`*^9, 
   3.854453236223407*^9}},ExpressionUUID->"12ba524e-cd49-44fc-8b52-\
fd3d9974becc"],

Cell[TextData[{
 "We can find the last piece from the identity \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "(", "t", ")"}], ".", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"A", "(", "t", ")"}], ")"}], "+"]}], "=", 
     RowBox[{
      RowBox[{"A", "(", "t", ")"}], ".", 
      RowBox[{"F", "(", "t", ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "cc83e0f8-d6ca-440d-8dd6-9e4175627227"],
 "\nAs always differentiate and plug in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0", " "}], TraditionalForm]],ExpressionUUID->
  "ab6d859a-5038-4f30-98d5-db0ec0c4cb36"],
 "to get\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "'"}], 
      RowBox[{
       RowBox[{"(", "0", ")"}], ".", 
       RowBox[{"F", "(", "0", ")"}]}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"A", "(", "0", ")"}], ".", 
       RowBox[{"F", "'"}]}], 
      RowBox[{"(", "0", ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "9d771506-92d6-4f69-99d2-901dcba35332"],
 "\nWe have expressions for almost everything in here.\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["dA", "2"], ".", 
           SubsuperscriptBox["S", "1", 
            RowBox[{"-", "1"}]]}], ")"}], "\[Transpose]"}]},
       {
        RowBox[{
         SubscriptBox["dA", "2"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]]}], "0"}
      }], "\[NoBreak]", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["dA", "1"]},
         {
          SubscriptBox["dA", "2"]}
        }], ")"}], 
      RowBox[{"(", GridBox[{
         {
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "1"}]], "|", "0"}
        }], ")"}]}], " ", "+", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["S", "1"]},
         {"0"}
        }], ")"}], ".", 
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["dF", "1"], "|", 
          SubscriptBox["dF", "2"]}
        }], ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "8bc894b7-89ce-4d7e-8736-89c24cceae08"],
 "\nMultiply stuff out to get\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["dA", "2"], ".", 
           SubsuperscriptBox["S", "1", 
            RowBox[{"-", "1"}]]}], ")"}], "\[Transpose]"}]},
       {
        RowBox[{
         SubscriptBox["dA", "2"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]]}], "0"}
      }], "\[NoBreak]", ")"}], "=", 
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          SubscriptBox["dA", "1"], ".", 
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "1"}]]}], "0"},
        {
         RowBox[{
          SubscriptBox["dA", "2"], ".", 
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "1"}]]}], "0"}
       }], "\[NoBreak]", ")"}], "+", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          SubscriptBox["S", "1"], ".", 
          SubscriptBox["dF", "1"]}], 
         RowBox[{
          SubscriptBox["S", "1"], ".", 
          SubscriptBox["dF", "2"]}]},
        {"0", "0"}
       }], "\[NoBreak]", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "16611854-e4a4-4153-b015-55b6d9809642"],
 "\nThe 1-1 block is just what we had before ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dF", "1"], "=", 
    RowBox[{"-", 
     RowBox[{
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]], ".", 
      SubscriptBox["dA", "1"], ".", 
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "84be58ea-26a7-42ce-bbb7-24cd20a0c5d2"],
 ". The 1-2 block is new and gives\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dF", "2"], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "1"}]], ".", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["dA", "2"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]]}], ")"}], "\[Transpose]"}]}], "=", 
     RowBox[{
      SubsuperscriptBox["S", "1", 
       RowBox[{"-", "2"}]], ".", 
      RowBox[{
       RowBox[{"(", 
        SubscriptBox["dA", "2"], ")"}], "\[Transpose]"}]}]}]}], 
   TraditionalForm]],ExpressionUUID->"2d3521f8-3b4e-413b-9687-a545f3af9797"],
 "\nAgain we should check this! "
}], "Text",
 CellChangeTimes->{{3.854453348310524*^9, 3.854453674272769*^9}, {
  3.854453997386505*^9, 3.854454293858288*^9}, {3.8544543431443357`*^9, 
  3.8544543431443357`*^9}, {3.854454394508379*^9, 
  3.8544546023122*^9}},ExpressionUUID->"44f26a55-78ea-4bc0-9292-cead15dc2d3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"M", ",", "P"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"12", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "a", " ", "test", " ", 
    RowBox[{"problem", ".", "  ", "First"}], " ", "the", " ", "perturbed", 
    " ", "matrix"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]s", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"Sort", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "10"}], "}"}], ",", "n"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1", "=", 
    RowBox[{"DiagonalMatrix", "[", "\[Sigma]s", "]"}]}], ";", 
   RowBox[{
    RowBox[{"A", "\[LeftDoubleBracket]", 
     RowBox[{
      RowBox[{"1", ";;", "n"}], ",", 
      RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}], "=", "S1"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", "the", " ", "derivative"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"dA1", "=", 
    RowBox[{"dA", "\[LeftDoubleBracket]", 
     RowBox[{
      RowBox[{"1", ";;", "n"}], ",", 
      RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}]}], ";", 
   RowBox[{"dA2", "=", 
    RowBox[{"dA", "\[LeftDoubleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "+", "1"}], ";;", "m"}], ",", 
      RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Building", " ", "the", " ", "functions"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "[", "t_", "]"}], ":=", 
  RowBox[{"A", " ", "+", " ", 
   RowBox[{"dA", " ", "t"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "t_", "]"}], ":=", 
   RowBox[{"PseudoInverse", "[", 
    RowBox[{"M", "[", "t", "]"}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Computing", " ", "a", " ", "FD", " ", "approximation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{"1.0", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], ";", 
   RowBox[{"FD", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"F", "[", "\[Epsilon]", "]"}], "-", 
      RowBox[{"F", "[", 
       RowBox[{"-", "\[Epsilon]"}], "]"}]}], 
     RowBox[{"2", "\[Epsilon]"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Constructing", " ", "our", " ", "analytic", " ", "form", " ", "and", " ", 
    "checking", " ", "the", " ", "difference"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dF", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Inverse", "[", "S1", "]"}], ".", "dA1", ".", 
         RowBox[{"Inverse", "[", "S1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Inverse", "[", "S1", "]"}], ".", 
        RowBox[{"Inverse", "[", "S1", "]"}], ".", 
        RowBox[{"dA2", "\[Transpose]"}]}]}], "}"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{"FD", "-", "dF"}], "]"}]}], "Input",
 CellChangeTimes->{{3.854442169749197*^9, 3.854442216289193*^9}, {
   3.8544438852520514`*^9, 3.854443988814521*^9}, {3.8544441470401173`*^9, 
   3.8544441568385*^9}, {3.8544442726540685`*^9, 3.8544443068699684`*^9}, {
   3.8544461481893673`*^9, 3.8544465470816135`*^9}, {3.854446584089314*^9, 
   3.8544466416964746`*^9}, {3.854446714277571*^9, 3.854446773594454*^9}, {
   3.854446806038493*^9, 3.8544468092414246`*^9}, {3.8544468516523113`*^9, 
   3.8544470602588434`*^9}, {3.8544471009175453`*^9, 
   3.8544471179718113`*^9}, {3.8544472157815723`*^9, 
   3.8544473321778708`*^9}, {3.854447618141878*^9, 3.854447665761715*^9}, {
   3.854447800071644*^9, 3.854448027574317*^9}, {3.8544489069012623`*^9, 
   3.854448907192162*^9}, 3.8544490048377047`*^9, {3.8544490939843407`*^9, 
   3.854449164482218*^9}, {3.8544492076351614`*^9, 3.854449276359883*^9}, {
   3.8544493089598036`*^9, 3.8544493440887966`*^9}, {3.8544494074874516`*^9, 
   3.85444961014489*^9}, {3.854449756583218*^9, 3.8544498323830647`*^9}, {
   3.8544498675353994`*^9, 3.8544498688889203`*^9}, {3.8544501380662303`*^9, 
   3.8544501452228036`*^9}, {3.854450393989678*^9, 3.854450582590308*^9}, {
   3.8544512284754944`*^9, 3.8544514210327463`*^9}, {3.8544515002432833`*^9, 
   3.854451544576789*^9}, {3.8544516392077184`*^9, 3.854451805094067*^9}, {
   3.8544529661973457`*^9, 3.854453122328354*^9}, {3.854453155625534*^9, 
   3.8544532023114405`*^9}, {3.8544546254723387`*^9, 
   3.8544547245761967`*^9}, {3.854641140592651*^9, 3.8546411458800898`*^9}, {
   3.8859177969502053`*^9, 3.885917832014645*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"298f8f84-2dde-418b-a1d8-2961595df2a6"],

Cell[BoxData["4.236801456208369`*^-11"], "Output",
 CellChangeTimes->{{3.8544530707866726`*^9, 3.854453122940751*^9}, {
   3.8544531661006265`*^9, 3.8544532034525414`*^9}, {3.8544546597329597`*^9, 
   3.8544546728181405`*^9}, 3.8545361819518566`*^9, 3.8546339592607956`*^9, 
   3.854641147169428*^9, 3.8859177898934636`*^9, {3.885917824972963*^9, 
   3.885917833146944*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"e90bbce6-e58f-44ed-8c76-1f17fa247536"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Four Different Conditioning Problems\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Rule]", "x"}], TraditionalForm]],ExpressionUUID->
  "1c2cb2e2-ba23-40d2-9da8-1e18644cdc7e"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Rule]", "y"}], TraditionalForm]],ExpressionUUID->
  "8d83d8e8-e1ff-4ace-84ab-2accb7ed9968"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Rule]", "x"}], TraditionalForm]],ExpressionUUID->
  "906d5506-404c-4d8c-9e1f-3223ed042920"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Rule]", "y"}], TraditionalForm]],ExpressionUUID->
  "686066c9-70ac-485a-9749-94a7dfa2efd6"]
}], "Section",
 CellChangeTimes->{{3.8543693530189342`*^9, 3.85436936784229*^9}, {
  3.8543704740493813`*^9, 3.8543704831920652`*^9}, {3.854370526153102*^9, 
  3.854370598507852*^9}},ExpressionUUID->"53979afa-5466-4761-90dd-\
12f56e078b09"],

Cell["The easiest ones are the first two", "Text",
 CellChangeTimes->{{3.8543762530764837`*^9, 3.8543763032999363`*^9}, {
  3.854377020666017*^9, 3.85437703018711*^9}, {3.8543775841251183`*^9, 
  3.854377586846506*^9}, {3.8543785459052*^9, 
  3.854378551222643*^9}},ExpressionUUID->"a3d3d155-d81f-44bb-942a-\
c4f9dfd0f40d"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"b", "\[Rule]", "y"}], 
  TraditionalForm]],ExpressionUUID->"87f87a30-765f-43b0-8aef-5424f3d91fb7"]], \
"Subsubsection",
 CellChangeTimes->{{3.8543763111752243`*^9, 
  3.854376321856406*^9}},ExpressionUUID->"e917f57e-a40c-4d02-898b-\
9e8893fd58dc"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"P", ".", "b"}]}], TraditionalForm]],ExpressionUUID->
  "b25a6129-8803-45bf-896d-9ca8848b8275"],
 " the derivative of y with respect to b is just P.  So \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Kappa]", 
     RowBox[{"b", "\[Rule]", "y"}]], "=", 
    RowBox[{
     RowBox[{"||", "P", "||", 
      RowBox[{"/", 
       FractionBox[
        RowBox[{"||", "y", "||"}], 
        RowBox[{"||", "b", "||"}]]}]}], "=", 
     RowBox[{
      RowBox[{"||", "b", "||", 
       RowBox[{"/", 
        RowBox[{"||", "y", "||"}]}]}], "=", 
      RowBox[{"1", "/", 
       RowBox[{"cos", "(", "\[Theta]", ")"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"f5c36df6-2a61-444f-ae0e-1f3088559435"],
 "\nsince the induced 2 norm of the projection P equals 1.  Form our \
definitions this is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    RowBox[{"cos", "(", "\[Theta]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "33902338-d3c0-49bc-bff4-1b996e71d659"],
 "."
}], "Text",
 CellChangeTimes->{{3.85437633531039*^9, 3.854376593692944*^9}, {
  3.854377166103691*^9, 
  3.854377171662448*^9}},ExpressionUUID->"70e757c8-3ccd-479a-a715-\
6c49eb0cf11b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"b", "\[Rule]", "x"}], 
  TraditionalForm]],ExpressionUUID->"5ea4a13a-960e-4335-adb4-530a0ad753a3"]], \
"Subsubsection",
 CellChangeTimes->{{3.8543763111752243`*^9, 3.854376321856406*^9}, {
  3.8543766608388157`*^9, 3.8543766623881493`*^9}, {3.854377047421286*^9, 
  3.854377051102354*^9}},ExpressionUUID->"ed7e00b2-660d-4df5-a6c3-\
626dbfdfd3e8"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SuperscriptBox["A", "+"], ".", "b"}]}], TraditionalForm]],ExpressionUUID->
  "5e04fe26-2a00-499f-99b0-a4ab5b6f12af"],
 " the derivative of x with respect to b is just ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", "+"], TraditionalForm]],ExpressionUUID->
  "6e729c40-8aae-4407-8edd-1aac83c640b1"],
 ".  So \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Kappa]", 
     RowBox[{"b", "\[Rule]", "x"}]], "=", 
    RowBox[{
     RowBox[{"||", 
      SuperscriptBox["A", "+"], "||", 
      RowBox[{"/", 
       FractionBox[
        RowBox[{"||", "x", "||"}], 
        RowBox[{"||", "b", "||"}]]}]}], "=", 
     RowBox[{
      RowBox[{"||", 
       SuperscriptBox["A", "+"], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"||", "b", "||"}], 
         RowBox[{"||", "y", "||"}]], 
        FractionBox[
         RowBox[{"||", "y", "||"}], 
         RowBox[{"||", "x", "||"}]]}]}], "=", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SubscriptBox["\[Sigma]", "n"]], " ", 
        FractionBox["1", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]], 
        FractionBox[
         RowBox[{"||", "A", "||"}], "\[Eta]"]}], "=", 
       FractionBox[
        RowBox[{"\[Kappa]", "(", "A", ")"}], 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}]]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"a8fc269e-9a10-4a3a-9463-5bf13500c720"]
}], "Text",
 CellChangeTimes->{{3.85437633531039*^9, 3.854376593692944*^9}, {
  3.854376836926375*^9, 3.854376862508737*^9}, {3.854377070986332*^9, 
  3.8543771557334948`*^9}, {3.8543772047666597`*^9, 3.854377417359439*^9}, {
  3.854377464148052*^9, 3.8543775014217157`*^9}, {3.8543775392551394`*^9, 
  3.854377542096599*^9}, {3.854454836841556*^9, 
  3.8544548413282185`*^9}},ExpressionUUID->"1712415f-c30b-4a8c-9643-\
aee9b6cfc442"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"A", "\[Rule]", "x"}], 
  TraditionalForm]],ExpressionUUID->"769d9473-8e71-4bde-b94b-c6651b965118"]], \
"Subsubsection",
 CellChangeTimes->{{3.8543763111752243`*^9, 3.854376321856406*^9}, {
  3.8543766608388157`*^9, 3.8543766623881493`*^9}, {3.854377047421286*^9, 
  3.854377051102354*^9}, {3.8544548068974347`*^9, 
  3.8544548068974347`*^9}},ExpressionUUID->"dc3ea0bf-3517-4fea-a3f2-\
ac216af1a63c"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SuperscriptBox["A", "+"], ".", "b"}]}], TraditionalForm]],ExpressionUUID->
  "39c2d4c5-d00d-4313-b968-f1707bf18151"],
 " the derivative of x with respect to A is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]], ".", 
         SubscriptBox["dA", "1"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]]}], "|", 
        RowBox[{
         SubsuperscriptBox["dA", "2", "\[Transpose]"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "2"}]]}]}
      }], ")"}], ".", "b"}], TraditionalForm]],ExpressionUUID->
  "f0517151-52b5-4366-a0a6-83b2f0544aa9"],
 " Each piece of this contributes to the sensitivity. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "1"}]], ".", 
          SubscriptBox["dA", "1"], ".", 
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "1"}]]}], "|", 
         RowBox[{
          SubsuperscriptBox["dA", "2", "\[Transpose]"], ".", 
          SubsuperscriptBox["S", "1", 
           RowBox[{"-", "2"}]]}]}
       }], ")"}], ".", "b"}], "||", 
    RowBox[{"\[LessEqual]", 
     RowBox[{"||", 
      RowBox[{GridBox[{
         {
          RowBox[{
           RowBox[{
            SubsuperscriptBox["S", "1", 
             RowBox[{"-", "1"}]], ".", 
            SubscriptBox["dA", "1"], ".", 
            SubsuperscriptBox["S", "1", 
             RowBox[{"-", "1"}]], ".", "b"}], "||", "+"}], "||", 
          RowBox[{
           SubsuperscriptBox["dA", "2", "\[Transpose]"], ".", 
           SubsuperscriptBox["S", "1", 
            RowBox[{"-", "2"}]]}]}
        }], ".", "b"}], "||"}]}]}], TraditionalForm]],ExpressionUUID->
  "ad23cc01-c8f8-42ed-a3c5-6bca4537bdaa"],
 ".  Once you tidy all this up and use the definitions above you get the \
entry in the table."
}], "Text",
 CellChangeTimes->{{3.85437633531039*^9, 3.854376593692944*^9}, {
  3.854376836926375*^9, 3.854376862508737*^9}, {3.854377070986332*^9, 
  3.8543771557334948`*^9}, {3.8543772047666597`*^9, 3.854377417359439*^9}, {
  3.854377464148052*^9, 3.8543775014217157`*^9}, {3.8543775392551394`*^9, 
  3.854377542096599*^9}, {3.854454822487587*^9, 3.8544548522589355`*^9}, {
  3.8544548957852173`*^9, 3.8544550485854945`*^9}, {3.8544550908230247`*^9, 
  3.8544552045594096`*^9}, {3.8544555164257812`*^9, 3.854455525312289*^9}, {
  3.8545361956533537`*^9, 
  3.8545362394178605`*^9}},ExpressionUUID->"3ed6a1a3-5437-479f-b206-\
c5e82ce078f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"A", "\[Rule]", "y"}], 
  TraditionalForm]],ExpressionUUID->"c3a487e3-9428-4c85-80e6-36c2137b063f"]], \
"Subsubsection",
 CellChangeTimes->{{3.8543763111752243`*^9, 3.854376321856406*^9}, {
  3.8543766608388157`*^9, 3.8543766623881493`*^9}, {3.854377047421286*^9, 
  3.854377051102354*^9}, {3.8544548068974347`*^9, 3.8544548068974347`*^9}, {
  3.8544552234255447`*^9, 3.8544552234255447`*^9}, {3.854455273449235*^9, 
  3.854455273449235*^9}},ExpressionUUID->"53d094c2-3071-48f2-af38-\
ba6b6ae130f9"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"P", ".", "b"}]}], TraditionalForm]],ExpressionUUID->
  "d41abb7b-8fa4-42a2-8f55-71cdaa353a77"],
 " the derivative of y with respect to A is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["dA", "2"], ".", 
           SubsuperscriptBox["S", "1", 
            RowBox[{"-", "1"}]]}], ")"}], "\[Transpose]"}]},
       {
        RowBox[{
         SubscriptBox["dA", "2"], ".", 
         SubsuperscriptBox["S", "1", 
          RowBox[{"-", "1"}]]}], "0"}
      }], "\[NoBreak]", ")"}], ".", "b"}], TraditionalForm]],ExpressionUUID->
  "750c67c6-5ff8-4679-9423-fa02b9724a37"],
 ". The two pieces of this are similar. Once you tidy all this up you get the \
definitions above you get the entry in the table."
}], "Text",
 CellChangeTimes->{{3.85437633531039*^9, 3.854376593692944*^9}, {
   3.854376836926375*^9, 3.854376862508737*^9}, {3.854377070986332*^9, 
   3.8543771557334948`*^9}, {3.8543772047666597`*^9, 3.854377417359439*^9}, {
   3.854377464148052*^9, 3.8543775014217157`*^9}, {3.8543775392551394`*^9, 
   3.854377542096599*^9}, {3.854454822487587*^9, 3.8544548522589355`*^9}, {
   3.8544548957852173`*^9, 3.8544550485854945`*^9}, {3.8544550908230247`*^9, 
   3.85445522737313*^9}, {3.85445528050706*^9, 3.8544553009518337`*^9}, {
   3.8544553363561964`*^9, 3.854455472434724*^9}, {3.8544555362629895`*^9, 
   3.8544555600957117`*^9}, 3.8545362535578833`*^9, {3.8546415040839376`*^9, 
   3.8546415121019897`*^9}},ExpressionUUID->"da82b068-11cd-47cf-b4b7-\
235a4b7fa11f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take Away", "Section",
 CellChangeTimes->{{3.854455573041543*^9, 
  3.8544555766128216`*^9}},ExpressionUUID->"cc17ae6b-0720-409d-89e1-\
c5db42f8a080"],

Cell[CellGroupData[{

Cell["\<\
Different problems (even including the same data) can and do have different \
condition numbers. \
\>", "Item",
 CellChangeTimes->{{3.8544555807119813`*^9, 3.8544556216316166`*^9}, {
  3.8544557120993204`*^9, 
  3.854455712101315*^9}},ExpressionUUID->"bb3e2fa1-8d12-4359-89bd-\
c4756bd60008"],

Cell["\<\
We know the condition number of the four flavors of least squares problems.\
\>", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15000.},
 CellChangeTimes->{{3.8544555807119813`*^9, 3.8544556216316166`*^9}, {
  3.854455713632306*^9, 
  3.8544557419114714`*^9}},ExpressionUUID->"0a1c870a-a5f7-4f0b-a4d4-\
6cb692c70ace"],

Cell["\<\
Differentiation is a very useful tool and you can differentiate all sorts of \
things! \
\>", "Item",
 CellChangeTimes->{{3.8544555807119813`*^9, 3.854455637175089*^9}, {
  3.8544556689986134`*^9, 3.8544557044300613`*^9}, {3.8545364562698603`*^9, 
  3.8545364562698603`*^9}},ExpressionUUID->"ab785c6b-1a24-4b3c-a1a4-\
af1fa60eb0b4"],

Cell["\<\
The details of the various sensitivities is less important than the thought \
process and techniques.\
\>", "Item",
 CellChangeTimes->{{3.8544555807119813`*^9, 3.854455637175089*^9}, {
  3.8544556689986134`*^9, 3.8544557044300613`*^9}, {3.854536457881154*^9, 
  3.854536501595626*^9}, {3.8545365456235766`*^9, 
  3.8545365660345783`*^9}},ExpressionUUID->"34ec08e1-ec68-4c51-b55d-\
e93a70829935"],

Cell["The most important thing is that they are not the same!", "Item",
 CellChangeTimes->{{3.8544555807119813`*^9, 3.854455637175089*^9}, {
  3.8544556689986134`*^9, 3.8544557044300613`*^9}, {3.854536457881154*^9, 
  3.854536501595626*^9}, {3.8545365456235766`*^9, 3.8545365887162066`*^9}, {
  3.8546343494798346`*^9, 
  3.8546343501515985`*^9}},ExpressionUUID->"015fbd8a-70a8-4ac7-8fee-\
45f553a24d7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association[
 "PresenterSettings" -> Association["Dialogs" -> {}], "TryRealOnly" -> False],
Magnification->1.25,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"38c725bd-ebf4-46f5-8e53-884f411c6377"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1099, 16, 153, "Title",ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],
Cell[CellGroupData[{
Cell[1704, 42, 459, 12, 80, "Section",ExpressionUUID->"719f27e9-c266-4ace-9b9f-026af5442dae"],
Cell[2166, 56, 454, 14, 41, "Text",ExpressionUUID->"d2bb9855-a211-4ab2-8ed6-a309051590d9"],
Cell[2623, 72, 666, 21, 41, "Text",ExpressionUUID->"d15f4658-2f42-408e-9f9f-643732a72290"],
Cell[3292, 95, 215, 5, 41, "Text",ExpressionUUID->"46993a41-4d51-4538-b7c2-003b4ebda5cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3544, 105, 167, 3, 80, "Section",ExpressionUUID->"de37e882-2bc7-4467-a993-0e0cb834281c"],
Cell[3714, 110, 2115, 51, 124, "Text",ExpressionUUID->"19c34891-b4a5-4bb2-9167-f8ac0b4049d9"],
Cell[5832, 163, 2237, 69, 124, "Text",ExpressionUUID->"faabc7dc-dc02-46ce-bad3-29283234925f"],
Cell[CellGroupData[{
Cell[8094, 236, 3088, 90, 274, "Input",ExpressionUUID->"49aa87d4-3ff3-4900-8b18-21869d76cfa2"],
Cell[11185, 328, 253440, 4350, 526, "Output",ExpressionUUID->"8f5cda32-a1b7-4484-8d82-04d07fd8bf46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264662, 4683, 178, 3, 48, "Subsubsection",ExpressionUUID->"93528570-34ba-4363-8047-3d9aba15a1a9"],
Cell[CellGroupData[{
Cell[264865, 4690, 676, 19, 39, "Item",ExpressionUUID->"84ce7526-395e-4ba4-b770-eac8c1a890e7"],
Cell[265544, 4711, 704, 20, 39, "Item",ExpressionUUID->"d083aeab-80f3-41a5-83eb-e31e0467fb76"],
Cell[266251, 4733, 758, 20, 39, "Item",ExpressionUUID->"fc963c02-9957-466c-b2f5-81f905a216db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267070, 4760, 367, 6, 80, "Section",ExpressionUUID->"72702d60-c0c4-4ef8-91b4-c09ac88e2054"],
Cell[267440, 4768, 528, 14, 97, "Text",ExpressionUUID->"222281d8-de4b-4ebc-9d55-69d933dde4e3"],
Cell[267971, 4784, 2732, 85, 152, "Text",ExpressionUUID->"cc94bc71-cb25-4980-87d8-eacfc02fc0a5"],
Cell[270706, 4871, 3490, 109, 246, "Text",ExpressionUUID->"9aa64830-0084-4a8d-852e-537473292d89"],
Cell[274199, 4982, 239, 6, 41, "Text",ExpressionUUID->"7f211f92-6d5e-4e14-ad05-0928b242ee3e"],
Cell[274441, 4990, 197, 3, 41, "Text",ExpressionUUID->"c5adca53-ff2f-435e-b48f-0c17760bdf1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274675, 4998, 579, 15, 80, "Section",ExpressionUUID->"3c5f1ccf-8a62-4ca2-87eb-e80c6396a475"],
Cell[275257, 5015, 2480, 79, 143, "Text",ExpressionUUID->"83e35697-b4ce-4165-879f-edad4ef70354"],
Cell[CellGroupData[{
Cell[277762, 5098, 328, 9, 47, "Subsubsection",ExpressionUUID->"ebed9122-8ddb-4ea0-971b-4754e07ab53d"],
Cell[278093, 5109, 2332, 76, 143, "Text",ExpressionUUID->"92d4d147-a4d9-41a2-96a3-9aea492dc882"],
Cell[280428, 5187, 1089, 35, 41, "Text",ExpressionUUID->"014fec25-60a0-48ab-b4bf-d692b08ec68b"],
Cell[281520, 5224, 3145, 106, 190, "Text",ExpressionUUID->"43f6269b-7955-4e09-8327-3bb01b370908"],
Cell[284668, 5332, 3638, 126, 246, "Text",ExpressionUUID->"520ca901-b3cd-4976-8572-ddcf9f0cc14f"],
Cell[288309, 5460, 408, 7, 41, "Text",ExpressionUUID->"d9601690-b2e8-47c8-b9a2-f4f3c3d65532"],
Cell[CellGroupData[{
Cell[288742, 5471, 4814, 129, 489, "Input",ExpressionUUID->"a11db60e-96a4-4450-9e33-ac23f98f5ebb"],
Cell[293559, 5602, 650, 9, 41, "Output",ExpressionUUID->"bc1e9f9c-e0e2-4a4b-8a84-249ced5ff6d4"]
}, Open  ]],
Cell[294224, 5614, 461, 13, 41, "Text",ExpressionUUID->"51da2c5b-b93d-4e3d-ae8e-63b899239077"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294722, 5632, 612, 17, 48, "Subsubsection",ExpressionUUID->"dc037819-16de-4f07-8471-233a2fcedfe4"],
Cell[295337, 5651, 3722, 105, 228, "Text",ExpressionUUID->"12ba524e-cd49-44fc-8b52-fd3d9974becc"],
Cell[299062, 5758, 5046, 165, 376, "Text",ExpressionUUID->"44f26a55-78ea-4bc0-9292-cead15dc2d3f"],
Cell[CellGroupData[{
Cell[304133, 5927, 5437, 136, 417, "Input",ExpressionUUID->"298f8f84-2dde-418b-a1d8-2961595df2a6"],
Cell[309573, 6065, 453, 6, 41, "Output",ExpressionUUID->"e90bbce6-e58f-44ed-8c76-1f17fa247536"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310087, 6078, 871, 25, 181, "Section",ExpressionUUID->"53979afa-5466-4761-90dd-12f56e078b09"],
Cell[310961, 6105, 323, 5, 41, "Text",ExpressionUUID->"a3d3d155-d81f-44bb-942a-c4f9dfd0f40d"],
Cell[CellGroupData[{
Cell[311309, 6114, 296, 7, 47, "Subsubsection",ExpressionUUID->"e917f57e-a40c-4d02-898b-9e8893fd58dc"],
Cell[311608, 6123, 1248, 38, 105, "Text",ExpressionUUID->"70e757c8-3ccd-479a-a715-6c49eb0cf11b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312893, 6166, 395, 8, 47, "Subsubsection",ExpressionUUID->"ed7e00b2-660d-4df5-a6c3-626dbfdfd3e8"],
Cell[313291, 6176, 1932, 56, 77, "Text",ExpressionUUID->"1712415f-c30b-4a8c-9643-aee9b6cfc442"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315260, 6237, 448, 9, 47, "Subsubsection",ExpressionUUID->"dc3ea0bf-3517-4fea-a3f2-ac216af1a63c"],
Cell[315711, 6248, 2716, 73, 103, "Text",ExpressionUUID->"3ed6a1a3-5437-479f-b206-c5e82ce078f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318464, 6326, 547, 10, 47, "Subsubsection",ExpressionUUID->"53d094c2-3071-48f2-af38-ba6b6ae130f9"],
Cell[319014, 6338, 1691, 39, 97, "Text",ExpressionUUID->"da82b068-11cd-47cf-b4b7-235a4b7fa11f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320754, 6383, 156, 3, 80, "Section",ExpressionUUID->"cc17ae6b-0720-409d-89e1-c5db42f8a080"],
Cell[CellGroupData[{
Cell[320935, 6390, 302, 7, 39, "Item",ExpressionUUID->"bb3e2fa1-8d12-4359-89bd-c4756bd60008"],
Cell[321240, 6399, 344, 7, 34, "Subitem",ExpressionUUID->"0a1c870a-a5f7-4f0b-a4d4-6cb692c70ace",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15000.}],
Cell[321587, 6408, 342, 7, 39, "Item",ExpressionUUID->"ab785c6b-1a24-4b3c-a1a4-af1fa60eb0b4"],
Cell[321932, 6417, 405, 8, 39, "Item",ExpressionUUID->"34ec08e1-ec68-4c51-b55d-e93a70829935"],
Cell[322340, 6427, 404, 6, 39, "Item",ExpressionUUID->"015fbd8a-70a8-4ac7-8fee-45f553a24d7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

