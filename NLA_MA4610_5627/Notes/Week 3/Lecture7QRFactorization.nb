(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    123082,       2499]
NotebookOptionsPosition[    117577,       2403]
NotebookOutlinePosition[    118209,       2424]
CellTagsIndexPosition[    118166,       2421]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["7.  QRDecomposition", "Title",
 CellChangeTimes->{{3.8465884180627756`*^9, 3.846588429089326*^9}, {
   3.84666883912605*^9, 3.846668864267633*^9}, {3.846670417593573*^9, 
   3.846670436952243*^9}, {3.846672726384389*^9, 3.8466727270705147`*^9}, {
   3.8466757090828*^9, 3.846675717466256*^9}, {3.846758673014533*^9, 
   3.8467586795609393`*^9}, {3.846761881784243*^9, 3.8467618862742233`*^9}, 
   3.8522131953890104`*^9},ExpressionUUID->"bb443c9e-1a1c-437e-b10c-\
400e63a30bb8"],

Cell[CellGroupData[{

Cell["Matrices with orthogonal columns are useful!", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.8467618957670603`*^9, 
  3.8467619360896053`*^9}},ExpressionUUID->"6f59c9c1-2c99-4067-b65e-\
c7ca24cfe2cc"],

Cell[TextData[{
 "Our target is to construct an orthogonal basis for the column space of a \
Tall-Skinny ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "d3a589c5-d02c-466d-9b6a-a356517b0540"],
 " matrix\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "1"], "|", 
      SubscriptBox["a", "2"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["a", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "64b132cf-9919-4b1c-815f-f83faca76567"],
 ".\nThis basis is naturally represented by a Tall-Skinny ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "526c8230-3b07-4dcc-b6fa-617c7284d811"],
 " matrix\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["q", "1"], "|", 
      SubscriptBox["q", "2"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["q", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "adc3c740-7546-4227-8303-39653c647712"],
 ".\nWe will learn how to compute a QR decomposition ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"Q", ".", "R"}]}], TraditionalForm]],ExpressionUUID->
  "e5821a55-cd15-4c68-b0b2-349d59117197"],
 " where the new matrix ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "0ab46d74-85b3-4c09-ae22-35de17bdb676"],
 " (which tells us how to combine the columns of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "f9fb4431-64e2-4c86-9e2e-54de67601608"],
 " to compute ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "88b03b42-9683-4598-8d50-3cfd21551840"],
 ") is upper triangular! "
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.846758706375594*^9, 3.8467587538151207`*^9}, {
   3.8467588236395116`*^9, 3.846758971339628*^9}, {3.846759020212946*^9, 
   3.846759262113787*^9}, {3.846761943116433*^9, 3.84676210883329*^9}, {
   3.8467621424073515`*^9, 3.8467622702690773`*^9}, 3.8467623406216908`*^9, 
   3.8834985491067963`*^9},ExpressionUUID->"b2518617-d166-4117-baa8-\
b3f8cc958972"],

Cell["\<\
Every software package has a QR decomposition.  Different packages return the \
bits in different ways! Always read the documentation and check! Mathematica \
returns Q on its side!\
\>", "Text",
 CellChangeTimes->{{3.8467623471859765`*^9, 3.846762426452746*^9}, {
  3.85187563331427*^9, 
  3.851875655028302*^9}},ExpressionUUID->"d4a51ecb-739a-439e-b784-\
58ec389e1405"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"123", ",", "7"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Mathematica", " ", "#$", 
    RowBox[{"#", "@", "$"}], " ", "returns", " ", "Q", " ", "on", " ", "it", 
    " ", "side"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "=", 
   RowBox[{"Q", "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{"Q", ".", "R"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"MatrixPlot", ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "Q", ",", "R"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.846762275345456*^9, 3.8467623298969088`*^9}, {
  3.846762429679415*^9, 3.8467624862192984`*^9}, {3.851875466544389*^9, 
  3.851875489388875*^9}, {3.8522204699374695`*^9, 3.8522204723809977`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"29ba1cad-ef11-4467-882f-245e1d669d32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6743085006774083`*^-15", ",", "6.859106298922317`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8467623050484343`*^9, 3.846762330472226*^9}, {
   3.846762433556241*^9, 3.8467624868580556`*^9}, 3.8522134661241884`*^9, 
   3.8522204414879856`*^9, 3.8522204731296024`*^9, 3.8834987922490172`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"480e6dfc-ee41-43be-a861-20f00f2aae26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1: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
d2kkIojIpKtUDi6j+0YH1TDxPzjI45g=
     "], {{0, 0}, {7, 62}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}, {{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1: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
dpJP0HMW/gfYlBEq
     "], {{0, 0}, {7, 62}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}, {{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzNznlIkwEYBvDlLHNsQllJYMMyC9LogDKc89HMDK9clEdlupZgh7lS5xil
ldaQVZrTRi21YqKlJtEtCDOzMnRNKsmcustd3/fNaGJ2jYj8P4KiXnh4n+e/
3+K9eduy6TQazWs6P/rPe4//5QephKwmlRPt9A8RGfJhJCuZib7x/H/mUdcN
FSsq+hCgTc3ndo9CeflO9aKVBL7a+9bKd45hRZOou5zlwBmruTdVQv51z+mR
QEW8W4PSBN3z3Ew9hDN76wZnEiibuseXfiLhO6sy8PU6G3xqjs0P3TEIjjW9
UJzhhNhY/+XZFQpHg6+9vTHL8cc8jNItdpOrD2/a4pcYB0Zwf/topBePQC57
fUJ/iRP+eqHuAtuJOe2cDVFpBBLtXQGmNiNcl6SuBpkNl/LVYZ41BNYFsKSh
q0loxsYFRd1mpLgefdtc++y3PZyQzKzAEg3OLsw1TsqGYbpWtMx0ioBzQuOv
DHOiR1Gc7b2QgoTGX/C1zYYqVVkK8zqJNZMCTfQDC1SSlrmygle4o0z2a+yi
cPPtUoYslcDGDYJgLduMp+H6zu29JHjD3PQQoRXmDs3tl/EDv3QZJPNuxRre
TW8aLTwoseIJ2wpGpKc7kEXAsSqOHjGXgiid6chLolB/0nC99oodJ+pN/ke4
o0jQW5hmjh3NT5a/8AAJT1lxJ/05hZzqKd09MQmuLY133MMCRnmGXdqqhYvH
ydm1nMJVS0sn121DXZSpWrRfh489e4ZW7BtHUn4Hz7BAh0iVY0bL7K1IbrDu
eFxAoSR88vahlQ7ENFfI+X4G+H4uj1UrKURm9Zq71A7cPdAsunrRiN2HG+nN
TCeMDWUe+QdJlO/dSheTFmxaXeuR502gkiN3j0VTaHJrPX0ETpTFzFMXivV4
aE/pt8VZ4Vp2rjBnwIEq+UQNy04h3daqGDETmC1dlXTg/Bi+A7jsnjE=
     "], {{0, 0}, {7, 7}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{6.5, 
         FormBox["1", TraditionalForm]}, {5.5, 
         FormBox["2", TraditionalForm]}, {4.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {2.5, 
         FormBox["5", TraditionalForm]}, {1.5, 
         FormBox["6", TraditionalForm]}, {0.5, 
         FormBox["7", TraditionalForm]}}, {{6.5, 
         FormBox["1", TraditionalForm]}, {5.5, 
         FormBox["2", TraditionalForm]}, {4.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {2.5, 
         FormBox["5", TraditionalForm]}, {1.5, 
         FormBox["6", TraditionalForm]}, {0.5, 
         FormBox["7", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8467623050484343`*^9, 3.846762330472226*^9}, {
   3.846762433556241*^9, 3.8467624868580556`*^9}, 3.8522134661241884`*^9, 
   3.8522204414879856`*^9, 3.8522204731296024`*^9, 3.8834987923607097`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"217e565b-3403-4025-accb-938c83b2f233"]
}, Open  ]],

Cell["\<\
We are going to learn one way the computer could do this.  Well actually we \
are going to learn a bunch but the first one is called the Gram-Schmidt \
process.\
\>", "Text",
 CellChangeTimes->{{3.846762132697706*^9, 3.846762135951541*^9}, {
  3.8467624988452873`*^9, 
  3.8467625839778557`*^9}},ExpressionUUID->"659d0d6a-ce8e-4915-98ab-\
447830e76fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Idea", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.8467638918783283`*^9}},ExpressionUUID->"707d98fb-f9fc-4dd4-90a2-\
9b9b839c9c63"],

Cell[TextData[{
 "The motto here is start at the very beginning of\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "1"], "|", 
      SubscriptBox["a", "2"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["a", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "b18ef860-29b6-4fc5-9309-98be18b6402d"],
 "\nand work through the columns!   "
}], "Text",
 CellChangeTimes->{{3.84676264392801*^9, 3.846762717783315*^9}, {
  3.883476565359091*^9, 
  3.8834765729483013`*^9}},ExpressionUUID->"25f51143-6a37-4aab-a6f5-\
351979b1404e"],

Cell[TextData[{
 "First, normalize the first column by dividing by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    SubscriptBox["a", "1"], "||"}], TraditionalForm]],ExpressionUUID->
  "e7d2f5ad-a205-4155-a8e5-e79efaf1170e"],
 " and define\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "1"], "=", 
    FractionBox[
     SubscriptBox["a", "1"], 
     RowBox[{"||", 
      SubscriptBox["a", "1"], "||"}]]}], TraditionalForm]],ExpressionUUID->
  "2bd701a0-52fa-450b-87af-9e3e0e3020b6"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 
  3.846763093139288*^9}},ExpressionUUID->"0b759e75-9839-43af-bdb6-\
c16c9f489f02"],

Cell[TextData[{
 "Next, project out the component of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "2"], TraditionalForm]],ExpressionUUID->
  "1da5752e-efc9-48cb-b121-80ec8709b314"],
 " in the direction of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "1"], TraditionalForm]],ExpressionUUID->
  "b4a4f6cd-47d9-48a3-9d44-273c1499c9f8"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "2"], "=", 
    RowBox[{
     SubscriptBox["a", "2"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["a", "2"], ".", 
        SubscriptBox["q", "1"]}], ")"}], 
      SubscriptBox["q", "1"]}]}]}], TraditionalForm]],ExpressionUUID->
  "bea359dc-ac40-46db-99ed-3e5986566eca"],
 "\nand normalize\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "2"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["q", "2"], "/"}], "||", 
     SubscriptBox["q", "2"], "||"}]}], TraditionalForm]],ExpressionUUID->
  "a6d77dfc-4aa7-4dec-800e-9af15bb21b0d"],
 ".\nNote we have recycled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "2"], TraditionalForm]],ExpressionUUID->
  "92046aae-af63-4324-a00a-9380074017e5"],
 " repeatedly to accumulate the correct expression."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 
  3.8467631884436274`*^9}},ExpressionUUID->"d3e8d955-6210-49f9-a7f7-\
44d9b387e88b"],

Cell[TextData[{
 "The next step is more of the same but we need to get a bit more organized!  \
Pick the next column\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    SubscriptBox["a", "3"]}], TraditionalForm]],ExpressionUUID->
  "09512022-a2ac-4709-829c-45301f4f17f9"],
 "\nproject out the components in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "1"], TraditionalForm]],ExpressionUUID->
  "ff83f966-ca4d-4e0d-bcf2-33b103934cff"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "2"], TraditionalForm]],ExpressionUUID->
  "28151d39-af92-440e-bdca-347cf8e112ec"],
 "\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "1"]}], ")"}], 
        SubscriptBox["q", "1"]}]}]},
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "2"]}], ")"}], 
        SubscriptBox["q", "2"]}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "75dbdda0-93a9-452c-8434-00579b4f3173"],
 "\nand normalize\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "3"], "=", 
    RowBox[{
     RowBox[{"w", "/"}], "||", "w", "||"}]}], TraditionalForm]],
  ExpressionUUID->"82790581-228c-4947-a518-13a75fd7f409"],
 ".\nI am using ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "1c9cbcc6-ab96-45f6-8646-9a9bc7b12c8f"],
 " as mnemonic for work vector!"
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 3.846763121000487*^9}, {
  3.8467632271707373`*^9, 3.8467634584743867`*^9}, {3.8467634993268323`*^9, 
  3.846763560738367*^9}, {3.8467636285392714`*^9, 
  3.846763643750461*^9}},ExpressionUUID->"8b557066-15ef-4319-b8d4-\
806ffeb47444"],

Cell[TextData[{
 "The next step is more of the same but we need to get a bit more organized!  \
Pick the next column\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    SubscriptBox["a", "4"]}], TraditionalForm]],ExpressionUUID->
  "37c0fcb2-fc83-4205-9f19-9d9424edb44f"],
 "\nproject out the components in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "1"], TraditionalForm]],ExpressionUUID->
  "de68e701-f4f4-4b7e-a96b-9331e5dfd48f"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "2"], TraditionalForm]],ExpressionUUID->
  "b856034b-2787-4ba1-8658-102490422656"],
 "\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "1"]}], ")"}], 
        SubscriptBox["q", "1"]}]}]},
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "2"]}], ")"}], 
        SubscriptBox["q", "2"]}]}]},
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "3"]}], ")"}], 
        SubscriptBox["q", "3"]}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "ece100bd-694c-4568-b6d5-bffef7eb873a"],
 "\nand normalize\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "4"], "=", 
    RowBox[{
     RowBox[{"w", "/"}], "||", "w", "||"}]}], TraditionalForm]],
  ExpressionUUID->"4f88dc43-8825-43c8-8fe8-25656eb80ed2"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 3.846763121000487*^9}, {
  3.8467632271707373`*^9, 3.8467634584743867`*^9}, {3.8467634993268323`*^9, 
  3.846763560738367*^9}, {3.8467636285392714`*^9, 
  3.8467636941046095`*^9}},ExpressionUUID->"6bad318d-8c87-4b33-97cf-\
42dd6c713426"],

Cell["\<\
All we have to do is keep going until we run out of columns!  We are left \
with the tall-skinny matrix Q.  The only problem is we do not have the recipe \
for how we combined the columns: it is all stored in the inner products and \
scalings of the vectors. \
\>", "Text",
 CellChangeTimes->{{3.846763697145377*^9, 3.846763882258984*^9}, {
  3.8834766208318553`*^9, 
  3.88347664995932*^9}},ExpressionUUID->"4462b666-11b7-4554-9a67-\
511947880da0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Manual", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 
  3.84676421442906*^9}},ExpressionUUID->"3317aaa7-53a8-4c02-b380-\
ed63fca5e640"],

Cell["\<\
Here is a hand walk through of for a three column matrix! I am saving the \
coefficients so that we can see where they go!\
\>", "Text",
 CellChangeTimes->{{3.8467641826220155`*^9, 3.8467642079006968`*^9}, {
  3.8467643746400757`*^9, 
  3.8467644017947073`*^9}},ExpressionUUID->"787114e1-4094-4160-a7c7-\
506dae64d008"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"First", " ", "column"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{"A", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{"Norm", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q1", " ", "=", 
    RowBox[{"v", "/", "c1"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"second", " ", "column"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"A", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c21", " ", "=", 
   RowBox[{"v", ".", "q1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{"c21", " ", "q1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   RowBox[{"Norm", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q2", " ", "=", 
    RowBox[{"v", "/", "c2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Third", " ", "column"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"A", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c31", " ", "=", 
   RowBox[{"v", ".", "q1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{"c31", " ", "q1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c32", " ", "=", 
   RowBox[{"v", ".", "q2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{"c32", " ", "q2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", "=", 
   RowBox[{"Norm", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q3", " ", "=", 
   RowBox[{"v", "/", "c3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyQ", "=", 
   RowBox[{"{", 
    RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"c1", ",", 
   RowBox[{"{", 
    RowBox[{"c21", ",", "c2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c31", ",", "c32", ",", "c3"}], "}"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846932627457077*^9, 3.8469327077779217`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"61cb48ec-bd40-4be1-a482-718dcebfde78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.1740622769820523`", ",", 
   RowBox[{"{", 
    RowBox[{"0.49414951500450177`", ",", "1.500242161359208`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.030338995151026567`", ",", 
     RowBox[{"-", "0.5491531214654278`"}], ",", "0.5307738350809634`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.846764444680108*^9, 3.8467644546819253`*^9}, 
   3.8467645530576353`*^9, {3.8469326731806126`*^9, 3.846932708979599*^9}, 
   3.8522138909691424`*^9, 3.852214000399694*^9, 3.852220703723531*^9, 
   3.883476658194118*^9, 3.88349923875744*^9, 3.8834992761619368`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"a641ae7f-9eae-45cc-99fd-d6147325eb10"]
}, Open  ]],

Cell["Lets compare to the built-in QR", "Text",
 CellChangeTimes->{{3.84676449268285*^9, 
  3.84676450647991*^9}},ExpressionUUID->"598dcc99-413e-4416-a793-\
2879e6e1ad71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"BuiltInQ", ",", "BuiltInR"}], "}"}], "=", 
   RowBox[{"QRDecomposition", "[", "A", "]"}]}], 
  ";"}], "\[IndentingNewLine]", "BuiltInR"}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, 
   3.846764438391307*^9, {3.8467644713780966`*^9, 3.8467644812610636`*^9}, {
   3.846764515232586*^9, 3.846764515711051*^9}, {3.846765244965356*^9, 
   3.8467652610129747`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"1d0fa244-a4c7-4c58-954b-b5d8b5afe700"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1740622769820523`"}], ",", 
     RowBox[{"-", "0.4941495150045019`"}], ",", 
     RowBox[{"-", "0.030338995151026504`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.500242161359208`", ",", 
     RowBox[{"-", "0.5491531214654279`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     RowBox[{"-", "0.5307738350809635`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.846764329841936*^9, 3.8467643543923936`*^9}, {
   3.8467644082091722`*^9, 3.8467644828839874`*^9}, 3.8467645165461707`*^9, 
   3.8467645572640905`*^9, {3.8467652523496046`*^9, 3.8467652625807514`*^9}, 
   3.84693269584309*^9, 3.852213942168642*^9, 3.8522140057572365`*^9, 
   3.852220753870897*^9, 3.8834766736948147`*^9, {3.8834992587383757`*^9, 
   3.8834992803629856`*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"7ea7132a-d567-4051-a648-ab470e6dd656"]
}, Open  ]],

Cell["\<\
Our numbers match (except for the signs) and I think we can work out how to \
construct R \
\>", "Text",
 CellChangeTimes->{{3.84676264392801*^9, 3.846762717783315*^9}, {
  3.8467645709387155`*^9, 3.846764584461121*^9}, {3.8467647454544935`*^9, 
  3.846764799170443*^9}, {3.8834766805978403`*^9, 
  3.883476697058469*^9}},ExpressionUUID->"36742268-8021-4438-9156-\
ae9c0cb167a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Script", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 3.84676421442906*^9}, {
  3.846764813698187*^9, 
  3.846764823045749*^9}},ExpressionUUID->"5c8e3216-1b69-4fd9-87de-\
4d2dd1bc6f73"],

Cell["Here is a preliminary script!", "Text",
 CellChangeTimes->{{3.8467641826220155`*^9, 3.8467642079006968`*^9}, {
  3.8467643746400757`*^9, 3.8467644017947073`*^9}, {3.846764830963998*^9, 
  3.846764844313582*^9}},ExpressionUUID->"ced6fa7f-1e8c-4c1b-9406-\
017690380918"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"123", ",", "52"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "Storage"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Q", "=", 
    RowBox[{"0", "*", "A"}]}], ";", " ", 
   RowBox[{"R", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Loop", " ", "through", " ", "columns"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Grab", " ", "next", " ", "column"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "=", 
      RowBox[{"A", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"project", " ", "out", " ", "previous", " ", "columns"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"R", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"v", ".", 
          RowBox[{"Q", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v", "=", 
         RowBox[{"v", "-", 
          RowBox[{
           RowBox[{"R", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}]}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Scale", " ", "and", " ", "save", " ", "orthogonalized", " ", 
       "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "\[LeftDoubleBracket]", 
       RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Norm", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Q", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"v", "/", 
       RowBox[{"R", "\[LeftDoubleBracket]", 
        RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "we", " ", "computed", " ", "a", " ", "QR", " ",
     "Decomposition"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{"Q", ".", "R"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"OrthogonalMatrixQ", "[", "Q", "]"}], ",", 
   RowBox[{"UpperTriangularMatrixQ", "[", "R", "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "R", "]"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846764850477963*^9, 3.846765222381673*^9}, {
   3.846765289526026*^9, 3.846765348035287*^9}, {3.8467654543593063`*^9, 
   3.846765601160556*^9}, {3.846836389385992*^9, 3.846836406948695*^9}, {
   3.85221444735531*^9, 3.8522144494643764`*^9}, {3.8522209161196156`*^9, 
   3.85222092102075*^9}, {3.8522210678366776`*^9, 3.8522210689464054`*^9}, {
   3.852221272911091*^9, 3.8522212748827333`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"a49fa4d3-efd2-486c-bf51-0ed773642246"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.7670225747910888`*^-15", ",", "8.58419958987875`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, 3.84683642173706*^9, 
   3.852214258937074*^9, {3.852214436434308*^9, 3.852214449785695*^9}, 
   3.852221220321108*^9, 3.8522212756194887`*^9, 3.8834994593884225`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"04c2fbce-5f07-4e1d-ae6d-08903d710938"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, 3.84683642173706*^9, 
   3.852214258937074*^9, {3.852214436434308*^9, 3.852214449785695*^9}, 
   3.852221220321108*^9, 3.8522212756194887`*^9, 3.8834994593950443`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"0c2cd7ce-305b-4cb1-bde2-1f9ca2425546"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
+xLf39Uw34tw8PRO7v1vp8Qo8vqRsWIfF+PuTTBksoXYKFK4YddCQerwWAeZ
MwyOTipgLzdmsHgo6ufec6L/wzk2ID+zxWuKGLSM89eo7E7oHv1pyelyx7kz
ew/HEy6ttT64RY5mYO2alfl4ixhzFMsKPTezQVfrfvp+XIBldEpNGuHK9dP3
hTzQb8L2hzN+HZjNQmh06IrVOkKcMaJqxlRSOFiYMY69mgcNyda7U0uaMMZf
QeZZOg1jhxbP0s9CuKWmmyaV9ONUslgyKJTw1Z1mCa3fNH44rlmvOCKE6umE
H24d/ejbG3RlUQYfX3YOL0+9Q3r+rfSFM/19+J3/Mf/iJD62Va7tkV0rQohN
eJ6pF43lhq9DZpA+iK6MUz41sRd/zxmGuhXTyNKTXRprRPh4woCxVzELV9u+
jVN71YfUopujYkfxUawYcU3LRoQs5WZDjaD/PsfH29MxVYg4286PeYJenPXZ
+EFqF42lNawvspJCGIX+6ebf6cVTmUlCQ+Jp71b4OPvc5cJ7df8MbeMGHLmw
UsZsYSMEQfv2Nef0g5v9LUjBgeRoblzGU38GNmplXOt3NE7zF4/VJzlx7v0v
tbqFIhxX1BvVsZHGt6vVpQ7BDPx55UYfVXsxpt5gSEeZh0jum1E2T4TQ2dJy
zbuZQpbMyza5VB7ytlS+cv/RjAiJF9kswoXH3O6/S7IRQs9u2OK2ax82ix0W
/b7AQHxCYzCT9M/nOFUZre8i5M/a4bGHzPXvcYG5/fcoHF0l5rnLMJC5UGhq
Hd8HC922MV94PCyXkJV9Th5f75FO+efbGDj5//0W8JiG4qGD5+eQ+0lNuHO3
IYlBPy/vz+kQBmZSlTH+ZhQ+BbgULkxhYcNqlr36BAGMBm4oPWeR3F0k6fvP
hEGi+5jOHQo0dB03cyPj+HCOthSELGnF592P9mdlsLH659PiU9kCLNm1xe/H
JeKN69Xl5pL71w5e+SqH+Ix54IWo7AoaCe5myxI3iODyU28yfzobGa7WzGQd
Gg8mUO63RMT3WeeirLU6MX69Y3plHYXIg79nfY3mYb9LRJtrdjNmjN6+4dUm
Ab65fP89y4XC20R1bGugwYSNZ4rJPOTH0CcMpwvREzDRvFTciw7PuJNz59K4
ddb1UJQ84VKNI5rvrnUiWTZj/7Y7LJh1PU2zVyW3p39JsZZL5nZw/+t2+36Y
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
EY4NmpyRMa8L/xOldO3+
   "], {{0, 0}, {52, 52}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{51.5, 
       FormBox["1", TraditionalForm]}, {32.5, 
       FormBox["20", TraditionalForm]}, {12.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["52", TraditionalForm]}}, {{51.5, 
       FormBox["1", TraditionalForm]}, {32.5, 
       FormBox["20", TraditionalForm]}, {12.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["52", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {51.5, 
       FormBox["52", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {51.5, 
       FormBox["52", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, 3.84683642173706*^9, 
   3.852214258937074*^9, {3.852214436434308*^9, 3.852214449785695*^9}, 
   3.852221220321108*^9, 3.8522212756194887`*^9, 3.883499459491596*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"bd1fd92e-084f-42df-8428-a8985d213762"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Function", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 3.84676421442906*^9}, {
  3.846764813698187*^9, 3.846764823045749*^9}, {3.8467656434229403`*^9, 
  3.8467656445521955`*^9}},ExpressionUUID->"a4a801ee-65a6-415f-bc9e-\
4fa43611df87"],

Cell["Here is a function to hide all the crud!", "Text",
 CellChangeTimes->{{3.846765720774468*^9, 3.84676572900263*^9}, {
  3.846833840474065*^9, 
  3.8468338433970947`*^9}},ExpressionUUID->"75df1b0f-7d69-450b-9a83-\
d09ebc002ca1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyGramSchmidt", "[", "A_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", "Q", ",", "R", ",", "v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Set", " ", "up", " ", "Storage"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "=", 
      RowBox[{"0", "*", "A"}]}], ";", " ", 
     RowBox[{"R", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Loop", " ", "through", " ", "columns"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Grab", " ", "next", " ", "column"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"A", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"project", " ", "out", " ", "previous", " ", "columns"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"R", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"v", ".", 
             RowBox[{"Q", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"v", "=", 
            RowBox[{"v", "-", 
             RowBox[{
              RowBox[{"R", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
              RowBox[{"Q", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}]}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Scale", " ", "and", " ", "save", " ", "orthogonalized", " ", 
          "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"R", "\[LeftDoubleBracket]", 
          RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Norm", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Q", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"v", "/", 
          RowBox[{"R", "\[LeftDoubleBracket]", 
           RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "R"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8467656515499015`*^9, 3.846765707864214*^9}, {
   3.84683375127451*^9, 3.8468337517627373`*^9}, {3.8468364571277122`*^9, 
   3.846836476148757*^9}, 3.8522225424731083`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"832b65a1-ff46-4339-a7ac-70d6a7973f97"],

Cell["Here is a test", "Text",
 CellChangeTimes->{{3.8467641826220155`*^9, 3.8467642079006968`*^9}, {
  3.8467643746400757`*^9, 3.8467644017947073`*^9}, {3.846764830963998*^9, 
  3.846764844313582*^9}, {3.8467657394475007`*^9, 
  3.846765739886342*^9}},ExpressionUUID->"ffc0af5f-bef3-436b-83ed-\
70406ca82027"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "*", "154"}], ",", "111"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"MyGramSchmidt", "[", "A", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q2", ",", "R2"}], "}"}], "=", 
    RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"Z", "=", 
     RowBox[{"Q2", "\[Transpose]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "we", " ", "computed", " ", "a", " ", "QR", " ",
     "Decomposition"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{"Q", ".", "R"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UpperTriangularMatrixQ", "[", "R", "]"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846764850477963*^9, 3.846765222381673*^9}, {
   3.846765289526026*^9, 3.846765348035287*^9}, {3.8467654543593063`*^9, 
   3.846765601160556*^9}, {3.8467657495456624`*^9, 3.8467657966108394`*^9}, {
   3.8522217047735033`*^9, 3.8522218008823423`*^9}, {3.852221928510585*^9, 
   3.852221933282794*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"cbee060c-001b-4a9c-9fc5-0681a85e646f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0892075`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.852221954912343*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"97c498fd-67cf-41c7-94d0-5f3645cf17d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0011403`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.852221954921316*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"6a86b0ba-ea2e-4e02-996e-38398fe03fed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0000278`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.852221954925306*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a00b2e58-1410-4d7e-b5a6-8a9f37cbaec4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.352037369400847`*^-15", ",", "8.811931347293697`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.852221954930292*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"97a3bc2a-81de-452e-b857-924a713995bd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8522219549353113`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"4d76e0dc-3b90-4917-8c8b-f5334da4f38b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency: Math Libraries", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 3.84676421442906*^9}, {
  3.846764813698187*^9, 3.846764823045749*^9}, {3.8467656434229403`*^9, 
  3.8467656445521955`*^9}, {3.846833864197178*^9, 3.8468338671411343`*^9}, {
  3.846833905140592*^9, 
  3.846833910892561*^9}},ExpressionUUID->"483adc74-08d1-4d04-9325-\
d003cd1578f9"],

Cell["\<\
The built in QR decomposition is going to be MUCH faster than any code we \
write. The reason is that the basic QR computation is the foundation for a \
lot of other fancier computations.  As a result, a substantial effort has \
been made to make it as efficient as possible.  This includes economizing \
storage and computation and communication.\
\>", "Text",
 CellChangeTimes->{{3.846765720774468*^9, 3.84676572900263*^9}, {
  3.846833840474065*^9, 3.8468338433970947`*^9}, {3.846833873644988*^9, 
  3.8468340724936237`*^9}, {3.8518757104023438`*^9, 
  3.851875717044406*^9}},ExpressionUUID->"5138b069-f9c0-4247-a2cc-\
9158726300b2"],

Cell["\<\
All the higher level tools rely on libraries of math functions.  The lowest \
level is called BLAS for Basic Linear Algebra Subprograms which are designed \
to squeeze every possible bit of performance out of all sorts of hardware.  \
\>", "Text",
 CellChangeTimes->{{3.84683407517903*^9, 
  3.84683419605682*^9}},ExpressionUUID->"6a9180e4-2b0f-48bb-a18e-\
4d5680ae0465"],

Cell[TextData[{
 "One of the reasons Julia is fast (the Julia folks use the word performant) \
and one of the reasons we are going to look at Julia is that it makes it easy \
to access these libraries. ",
 StyleBox["Good code uses these libraries!",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.846834221165494*^9, 3.846834293799685*^9}, 
   3.846834362331464*^9, {3.8834767869800587`*^9, 
   3.883476804141344*^9}},ExpressionUUID->"68a4d4e3-e1ef-4930-a7a0-\
1c6e91f798e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1500", ",", "111"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"MyGramSchmidt", "[", "A", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846764850477963*^9, 3.846765222381673*^9}, {
   3.846765289526026*^9, 3.846765348035287*^9}, {3.8467654543593063`*^9, 
   3.846765601160556*^9}, {3.8467657495456624`*^9, 3.8467657966108394`*^9}, {
   3.8522149041114936`*^9, 3.8522149648661137`*^9}, 3.8834767518316383`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"99e093d8-851f-42d2-8c9c-b4a0ed2ce852"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.359375`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.852214916774312*^9, 3.8522149625022097`*^9}, 
   3.8522150046815577`*^9, {3.883476737599891*^9, 3.8834767528557115`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"44b6fff5-d058-49cd-8634-248e5c570341"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.852214916774312*^9, 3.8522149625022097`*^9}, 
   3.8522150046815577`*^9, {3.883476737599891*^9, 3.8834767528869457`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"3a25adf0-d578-49bf-b59b-5c540b2ba062"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association[
 "PresenterSettings" -> Association["Dialogs" -> {}], "TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"4562b249-0b2c-4719-a3b6-f543ee714c6e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 484, 7, 184, "Title",ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],
Cell[CellGroupData[{
Cell[1089, 33, 338, 5, 97, "Section",ExpressionUUID->"6f59c9c1-2c99-4067-b65e-c7ca24cfe2cc"],
Cell[1430, 40, 2137, 58, 219, "Text",ExpressionUUID->"b2518617-d166-4117-baa8-b3f8cc958972",
 InitializationCell->True],
Cell[3570, 100, 381, 8, 83, "Text",ExpressionUUID->"d4a51ecb-739a-439e-b784-58ec389e1405"],
Cell[CellGroupData[{
Cell[3976, 112, 1695, 50, 214, "Input",ExpressionUUID->"29ba1cad-ef11-4467-882f-245e1d669d32"],
Cell[5674, 164, 420, 7, 52, "Output",ExpressionUUID->"480e6dfc-ee41-43be-a861-20f00f2aae26"],
Cell[6097, 173, 33713, 582, 351, "Output",ExpressionUUID->"217e565b-3403-4025-accb-938c83b2f233"]
}, Open  ]],
Cell[39825, 758, 363, 8, 83, "Text",ExpressionUUID->"659d0d6a-ce8e-4915-98ab-447830e76fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40225, 771, 411, 6, 97, "Section",ExpressionUUID->"707d98fb-f9fc-4dd4-90a2-9b9b839c9c63"],
Cell[40639, 779, 589, 16, 118, "Text",ExpressionUUID->"25f51143-6a37-4aab-a6f5-351979b1404e"],
Cell[41231, 797, 677, 22, 93, "Text",ExpressionUUID->"0b759e75-9839-43af-bdb6-c16c9f489f02",
 InitializationCell->True],
Cell[41911, 821, 1383, 45, 184, "Text",ExpressionUUID->"d3e8d955-6210-49f9-a7f7-44d9b387e88b",
 InitializationCell->True],
Cell[43297, 868, 1806, 56, 272, "Text",ExpressionUUID->"8b557066-15ef-4319-b8d4-806ffeb47444",
 InitializationCell->True],
Cell[45106, 926, 1842, 59, 268, "Text",ExpressionUUID->"6bad318d-8c87-4b33-97cf-42dd6c713426",
 InitializationCell->True],
Cell[46951, 987, 459, 9, 117, "Text",ExpressionUUID->"4462b666-11b7-4554-9a67-511947880da0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47447, 1001, 461, 7, 97, "Section",ExpressionUUID->"3317aaa7-53a8-4c02-b380-ed63fca5e640"],
Cell[47911, 1010, 329, 7, 83, "Text",ExpressionUUID->"787114e1-4094-4160-a7c7-506dae64d008"],
Cell[CellGroupData[{
Cell[48265, 1021, 3264, 96, 642, "Input",ExpressionUUID->"61cb48ec-bd40-4be1-a482-718dcebfde78"],
Cell[51532, 1119, 693, 13, 48, "Output",ExpressionUUID->"a641ae7f-9eae-45cc-99fd-d6147325eb10"]
}, Open  ]],
Cell[52240, 1135, 171, 3, 50, "Text",ExpressionUUID->"598dcc99-413e-4416-a793-2879e6e1ad71"],
Cell[CellGroupData[{
Cell[52436, 1142, 616, 12, 71, "Input",ExpressionUUID->"1d0fa244-a4c7-4c58-954b-b5d8b5afe700"],
Cell[53055, 1156, 958, 20, 48, "Output",ExpressionUUID->"7ea7132a-d567-4051-a648-ab470e6dd656"]
}, Open  ]],
Cell[54028, 1179, 389, 8, 50, "Text",ExpressionUUID->"36742268-8021-4438-9156-ae9c0cb167a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54454, 1192, 510, 8, 97, "Section",ExpressionUUID->"5c8e3216-1b69-4fd9-87de-4d2dd1bc6f73"],
Cell[54967, 1202, 274, 4, 50, "Text",ExpressionUUID->"ced6fa7f-1e8c-4c1b-9406-017690380918"],
Cell[CellGroupData[{
Cell[55266, 1210, 4562, 117, 614, "Input",ExpressionUUID->"a49fa4d3-efd2-486c-bf51-0ed773642246"],
Cell[59831, 1329, 486, 8, 52, "Output",ExpressionUUID->"04c2fbce-5f07-4e1d-ae6d-08903d710938"],
Cell[60320, 1339, 445, 7, 48, "Output",ExpressionUUID->"0c2cd7ce-305b-4cb1-bde2-1f9ca2425546"],
Cell[60768, 1348, 44405, 737, 564, "Output",ExpressionUUID->"bd1fd92e-084f-42df-8428-a8985d213762"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105222, 2091, 562, 8, 97, "Section",ExpressionUUID->"a4a801ee-65a6-415f-bc9e-4fa43611df87"],
Cell[105787, 2101, 232, 4, 50, "Text",ExpressionUUID->"75df1b0f-7d69-450b-9a83-d09ebc002ca1"],
Cell[106022, 2107, 3594, 86, 552, "Input",ExpressionUUID->"832b65a1-ff46-4339-a7ac-70d6a7973f97",
 InitializationCell->True],
Cell[109619, 2195, 310, 5, 50, "Text",ExpressionUUID->"ffc0af5f-bef3-436b-83ed-70406ca82027"],
Cell[CellGroupData[{
Cell[109954, 2204, 2237, 61, 243, "Input",ExpressionUUID->"cbee060c-001b-4a9c-9fc5-0681a85e646f"],
Cell[112194, 2267, 206, 4, 48, "Output",ExpressionUUID->"97c498fd-67cf-41c7-94d0-5f3645cf17d3"],
Cell[112403, 2273, 206, 4, 48, "Output",ExpressionUUID->"6a86b0ba-ea2e-4e02-996e-38398fe03fed"],
Cell[112612, 2279, 206, 4, 48, "Output",ExpressionUUID->"a00b2e58-1410-4d7e-b5a6-8a9f37cbaec4"],
Cell[112821, 2285, 241, 5, 52, "Output",ExpressionUUID->"97a3bc2a-81de-452e-b857-924a713995bd"],
Cell[113065, 2292, 154, 2, 48, "Output",ExpressionUUID->"4d76e0dc-3b90-4917-8c8b-f5334da4f38b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113268, 2300, 666, 10, 97, "Section",ExpressionUUID->"483adc74-08d1-4d04-9325-d003cd1578f9"],
Cell[113937, 2312, 646, 11, 150, "Text",ExpressionUUID->"5138b069-f9c0-4247-a2cc-9158726300b2"],
Cell[114586, 2325, 381, 7, 117, "Text",ExpressionUUID->"6a9180e4-2b0f-48bb-a18e-4d5680ae0465"],
Cell[114970, 2334, 494, 10, 83, "Text",ExpressionUUID->"68a4d4e3-e1ef-4930-a7a0-1c6e91f798e6"],
Cell[CellGroupData[{
Cell[115489, 2348, 1434, 36, 128, "Input",ExpressionUUID->"99e093d8-851f-42d2-8c9c-b4a0ed2ce852"],
Cell[116926, 2386, 307, 5, 48, "Output",ExpressionUUID->"44b6fff5-d058-49cd-8634-248e5c570341"],
Cell[117236, 2393, 301, 5, 48, "Output",ExpressionUUID->"3a25adf0-d578-49bf-b59b-5c540b2ba062"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

