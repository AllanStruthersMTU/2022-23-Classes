(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    126118,       2581]
NotebookOptionsPosition[    119998,       2477]
NotebookOutlinePosition[    120630,       2498]
CellTagsIndexPosition[    120587,       2495]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["7.  QRDecomposition", "Title",
 CellChangeTimes->{{3.8465884180627756`*^9, 3.846588429089326*^9}, {
   3.84666883912605*^9, 3.846668864267633*^9}, {3.846670417593573*^9, 
   3.846670436952243*^9}, {3.846672726384389*^9, 3.8466727270705147`*^9}, {
   3.8466757090828*^9, 3.846675717466256*^9}, {3.846758673014533*^9, 
   3.8467586795609393`*^9}, {3.846761881784243*^9, 3.8467618862742233`*^9}, 
   3.8522131953890104`*^9},ExpressionUUID->"bb443c9e-1a1c-437e-b10c-\
400e63a30bb8"],

Cell[CellGroupData[{

Cell["Matrices with orthogonal columns are useful!", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.8467618957670603`*^9, 
  3.8467619360896053`*^9}},ExpressionUUID->"6f59c9c1-2c99-4067-b65e-\
c7ca24cfe2cc"],

Cell[TextData[{
 "Our target is to construct an orthogonal basis for the column space of a \
Tall-Skinny ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "d3a589c5-d02c-466d-9b6a-a356517b0540"],
 " matrix\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "1"], "|", 
      SubscriptBox["a", "2"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["a", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "64b132cf-9919-4b1c-815f-f83faca76567"],
 ".\nThis basis is naturally represented by a Tall-Skinny ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "526c8230-3b07-4dcc-b6fa-617c7284d811"],
 " matrix\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["q", "1"], "|", 
      SubscriptBox["q", "2"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["q", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "adc3c740-7546-4227-8303-39653c647712"],
 ".\nWe will learn how to compute the QR decomposition ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"Q", ".", "R"}]}], TraditionalForm]],ExpressionUUID->
  "e5821a55-cd15-4c68-b0b2-349d59117197"],
 " where the new matrix ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "0ab46d74-85b3-4c09-ae22-35de17bdb676"],
 " (which tells us how to combine the columns of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "f9fb4431-64e2-4c86-9e2e-54de67601608"],
 " to compute ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "88b03b42-9683-4598-8d50-3cfd21551840"],
 ") is upper triangular! "
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.846758706375594*^9, 3.8467587538151207`*^9}, {
   3.8467588236395116`*^9, 3.846758971339628*^9}, {3.846759020212946*^9, 
   3.846759262113787*^9}, {3.846761943116433*^9, 3.84676210883329*^9}, {
   3.8467621424073515`*^9, 3.8467622702690773`*^9}, 
   3.8467623406216908`*^9},ExpressionUUID->"b2518617-d166-4117-baa8-\
b3f8cc958972"],

Cell["\<\
Every software package has a QR decomposition.  Different packages return the \
bits in different ways! Always read the documentation and check! Mathematica \
returns Q on its side!\
\>", "Text",
 CellChangeTimes->{{3.8467623471859765`*^9, 3.846762426452746*^9}, {
  3.85187563331427*^9, 
  3.851875655028302*^9}},ExpressionUUID->"d4a51ecb-739a-439e-b784-\
58ec389e1405"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"123", ",", "7"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Mathematica", " ", "#$", 
    RowBox[{"#", "@", "$"}], " ", "returns", " ", "Q", " ", "on", " ", "it", 
    " ", "side"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "=", 
   RowBox[{"Q", "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{"Q", ".", "R"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"MatrixPlot", ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "Q", ",", "R"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.846762275345456*^9, 3.8467623298969088`*^9}, {
  3.846762429679415*^9, 3.8467624862192984`*^9}, {3.851875466544389*^9, 
  3.851875489388875*^9}, {3.8522204699374695`*^9, 3.8522204723809977`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"29ba1cad-ef11-4467-882f-245e1d669d32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.579097602612002`*^-15", ",", "4.851920830494265`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8467623050484343`*^9, 3.846762330472226*^9}, {
   3.846762433556241*^9, 3.8467624868580556`*^9}, 3.8522134661241884`*^9, 
   3.8522204414879856`*^9, 3.8522204731296024`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"ea7db475-0ba2-4a01-b39e-2794be183ab3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1: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
fo6JDN1fMYhG9uNb4QE8jEs6DH8a5WOqdz/bWYpE9hPmWOn4EKZlMvRZGxh4
Hv59bmwBBxEhm267KRB429Ne0LZCgCxnIzGlZhLzK1qTQ8c5kCzvPC6TxkRo
kdXxa/O4GJnv2X6QTYC153PQ6pYGOH8MMMCnXvSlzAmaSCVwSzpD7nMIHx+/
N0qsZwzgX+Lx61fmnKL6SIT58k+N6LxbEtN9k46cS8GJJ8Z4SD89J/yeGcXJ
uYZqHb6UhxpeW31pdz9i+IoPdt3iIjn5VGmxD4mPBll+riw+dt5kad2nfDz0
6PlsoyPDGAm4fz5JvhtH/xy/J+9J9S8z1svL7/jwmDHQc8KOh9yrjOcjx0ns
aNpowigfgtGWz4EtLo3YpBLrtj6GxJNrv8+UOrJxq+egWNtUE9xFA534vwhI
3cwJ7/VngDAY9mWXnsPjw4KJacpHFWtC/SKTGGgpFdEuqgiGmOzHtdUn+dgq
pmwlQ3H795m4xvpmOh60Pvt5ME6AV8pVZwbdBLh1UbOpjOqd3QU77fuKW3CW
eGZD+A0iYcrFp8mZB6MntwsVVGgQEko+fM+zC2aRjzR/LiWxf/fDlUszOtBK
1mgIu7Bw7J9SqshHLuY8ux28O5wPwjf3ksseHp4rONEswhkwe+ecsj1egMY9
JsMcah7PlPxKP075w5sE8nVH6QDINTOVVX6yEYqSkdY0Hgp+MV1dKB6k7txj
vy6SWgeRrqvPs5qRJ+fzh7uN2peki0+PhXKhoKptOnS3Hx7Lh2jpVI5vP3+g
/dtPPp6dY/tvrRMgTqRbd/03PiyCqFY9TVD5rLQsr3UI+1dbN6yf14y5laKy
s58wIC3hKShN4WE972CsmjwdOkWXF6bJcrBfMzDfJZ+H/GtTP2WuCvCUNhz+
zliA9BWi0ZYvCChf2bc/PK4DCfprrvHtWXh+Z19QbCU1L0Rv9ehBAX7thdAD
ikM519qmPSV44FSv6brmQKL3xKsEAZVHYm5LOh2d69Cw97/+OIUGfKA2Niiy
Hy6uQgqnDxKIVD19YoQkUeThsa/8HwdB0u/LH4R2YpdH+6OXS0jcWx6953gA
C8KhdV9zVD5Ds85a2lyUxJcjxH0vORYM4vlrWxZXoC5fVHDqHQfHdDj0OA8C
v/8lKumaU/4/k2LVN8ofB0LmL3xJea6k618HmTL0ix54y6aeU+t0j2oY5bUP
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
uVB1WfMm3E2A0mvSxwwp73nKuRp1kuKu/kSj/tM5QxC/W8itGeBC8eYKi5Wu
JM7Xzpe5XsdHtkX3DZVzBPgICFgZSK3r5FzndWkE/vtkq+3sNIiPjllK/5ak
4VWo2mZFDRqGy+bsN9nahfbp2N9/VlA8Nenb7TibgyNie/btmebBcbnP6Tni
VK5+jD+XPNKAyJhDwZkXevFUU32ZZhaBk2Zp4S72LPzoqpLROctF7OR/IQlq
JArp/yXU8/jIu1IcGkIQ+PLmeVbyoyEI5dL+k/YjsS2oeu9MxhASrbcv6tOk
gYu5SyUDaGhy1dy5q4OO77rLeM8GeIjU2HnyhC4JQqWSe7aFhaQEs0f+EtXY
yPQb05TpxJHgIFe/Wyx0rL6YM/qK4sYfZymbhEakTvzXu+JHN1r+qCqu5xDI
klxlbBvNx9HaYj/7igG8XJ9z5ZuVL8xWd3OScutxbOn8z4cDBkAk751rZUig
zlfK7W0rA2EH5/SWywxj73dZYY+dBMItHjqrcfgQO1/x4EEf5fGn/9pGhgwh
9fGOfBlLDh5LKnxMWk6g8Nxj0a+qfHxrsltmmkdC5ZV/TIQwB7+8/BlhSa0w
Ls6X2KPYCEeHencNpV4Y5CYUBhQTyCzcuUTSnYRN8NLoQ9R6VfS/nem/qwEP
ovL9wqpI7I9SWfl4LwclrH2GTpw2GI7XB8mc7kPYrbVt09ZsmIT4diqZ8EBs
zRzVYBO46/rc6/ZFJj7dqVMatH+PggUtM207SPzMStitk8rBMpfqkFyxDny7
6t+Z+LENomc+l+z3ZWKPLS1rriTFn212iWtrG3DqV80a445eXKgeI5akEMj+
/kSmfYiHC6LqrCqqd9lcGm1e6ChA9/Hfha2PKe7WR71d+JUOm/lJfM/AMxgc
c38m1DKEfkdhjSQ7HjYuWfGtNo2kvOnLSSu1Rhh3wjBRvJfymznmoyUEtv8C
bVWgACd5rtcUJ/gI/eVpdJTyaK22C1dMvzZj/z7lTc8mGeC1NRddiOBB8cS/
zZuoPPPN/tPQHEz9n/nNkQ3bSSzRt/fUofOhrzkWeJQ6Z9pyWUEu+kP4H3lp
+uM=
     "], {{0, 0}, {7, 62}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}, {{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1: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
ULqt42iTIIleccPvrUkU/gc9wPVk
     "], {{0, 0}, {7, 62}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}, {{61.74796747967479, 
         FormBox["1", TraditionalForm]}, {37.048780487804876`, 
         FormBox["50", TraditionalForm]}, {0.25203252032520324`, 
         FormBox["123", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzNzmlI0wEABfAxj4RVmJmWUiuvssvcpLSJbwlWCuVSo5V5NCwRjSBKa3Yu
8khILVOzEU7STa3MuWJOMdMwD/IqRddS57S1/Q/NGnQbUV/7EBT14PHex98K
0ZGIg1YMBmPOz37/PzKN/2W1HPHjfE4vuH7JfrN2w1gX3SQ2biD/mSd3+uHL
KgEJ97GoCfUSPSSWAV5ZehrulpHjPvmD4CvHXVIHDLDc+tyZSZj+uueTzsro
q+zBl37DFb5Si9jBYOr5NAFHTWGLIc0EIRWnJ+NJXDtrJ1yjo5DR12FfV0/B
yzKpon0JOLGkrM+Nhj/myVwgVMVVEKgvzecaWvTgXE3sG1Wn4155l5WePYF+
UQIhjzaB9g4vktmTiG6IEd8x6BA7YO3e4vkKkeb4Ft9VZtyeOR0kN1JoZFsk
BaMEmosPBCjOTf62pzslcOlhux7c/OjwsS5EB/kb70MsFYH2xthFiTvH8FZL
zbhxjXBwkTVvazejRrMsclMEDW1OCsE/SqE1452cVWxC3nOZ5kwSBf8PilAd
0wwd/5ljtWIM5ponGzscKTCzCnfUJ9OwpPoWvHCY+qVnNVtS1VfdC5G9MEDV
PogXCz0eNGSSqG3T9nusp5AzZ7eScDVh+SW/IM6IDjxb2djQsQHsEWev3Rpm
wMrS8V16ZzMa3oeVzPMYx3muNOZG4Gucs/XhsQ4RmH1aKrq+ncDlWYmgJJHC
6pORZMgJGlkBW+suLB5GkKSycrfDJKyD94vyMkxwoxXPNop6kSSW83K8huDk
csXKNpKEzVRBbfcGGiHu8zXMdySSNy/l3wl/DZuLJ/V2Z2kQUnG21JXGo+NN
+3IFBOKtvRNa59Jg+newe5JJzD/lL02kXuE9I+X+ItchqKPUvG2FE2hnz6tx
vmuCYMazVlZuxNfsLdFxewmEGtVFOaAw0pngb3o5iQpNV0XbHjPSluUzUytI
fANgjafZ
     "], {{0, 0}, {7, 7}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{6.5, 
         FormBox["1", TraditionalForm]}, {5.5, 
         FormBox["2", TraditionalForm]}, {4.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {2.5, 
         FormBox["5", TraditionalForm]}, {1.5, 
         FormBox["6", TraditionalForm]}, {0.5, 
         FormBox["7", TraditionalForm]}}, {{6.5, 
         FormBox["1", TraditionalForm]}, {5.5, 
         FormBox["2", TraditionalForm]}, {4.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {2.5, 
         FormBox["5", TraditionalForm]}, {1.5, 
         FormBox["6", TraditionalForm]}, {0.5, 
         FormBox["7", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {1.5, 
         FormBox["2", TraditionalForm]}, {2.5, 
         FormBox["3", TraditionalForm]}, {3.5, 
         FormBox["4", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {5.5, 
         FormBox["6", TraditionalForm]}, {6.5, 
         FormBox["7", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8467623050484343`*^9, 3.846762330472226*^9}, {
   3.846762433556241*^9, 3.8467624868580556`*^9}, 3.8522134661241884`*^9, 
   3.8522204414879856`*^9, 3.852220473211383*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"9c70b69a-b267-4a98-a1d9-3045f3610056"]
}, Open  ]],

Cell["\<\
We are going to learn one way the computer could do this.  Well actually we \
are going to learn a bunch but the first one is called the Gram-Schmidt \
process.\
\>", "Text",
 CellChangeTimes->{{3.846762132697706*^9, 3.846762135951541*^9}, {
  3.8467624988452873`*^9, 
  3.8467625839778557`*^9}},ExpressionUUID->"659d0d6a-ce8e-4915-98ab-\
447830e76fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Idea", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.8467638918783283`*^9}},ExpressionUUID->"707d98fb-f9fc-4dd4-90a2-\
9b9b839c9c63"],

Cell[TextData[{
 "The motto here is start at the very beginning of\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "1"], "|", 
      SubscriptBox["a", "2"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["a", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "b18ef860-29b6-4fc5-9309-98be18b6402d"],
 "\nand work through the columns!   "
}], "Text",
 CellChangeTimes->{{3.84676264392801*^9, 
  3.846762717783315*^9}},ExpressionUUID->"25f51143-6a37-4aab-a6f5-\
351979b1404e"],

Cell[TextData[{
 "First, normalize the first column by dividing by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    SubscriptBox["a", "1"], "||"}], TraditionalForm]],ExpressionUUID->
  "e7d2f5ad-a205-4155-a8e5-e79efaf1170e"],
 " and define\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "1"], "=", 
    FractionBox[
     SubscriptBox["a", "1"], 
     RowBox[{"||", 
      SubscriptBox["a", "1"], "||"}]]}], TraditionalForm]],ExpressionUUID->
  "2bd701a0-52fa-450b-87af-9e3e0e3020b6"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 
  3.846763093139288*^9}},ExpressionUUID->"0b759e75-9839-43af-bdb6-\
c16c9f489f02"],

Cell[TextData[{
 "Next, project out the component of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "2"], TraditionalForm]],ExpressionUUID->
  "1da5752e-efc9-48cb-b121-80ec8709b314"],
 " in the direction of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "1"], TraditionalForm]],ExpressionUUID->
  "b4a4f6cd-47d9-48a3-9d44-273c1499c9f8"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "2"], "=", 
    RowBox[{
     SubscriptBox["a", "2"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["a", "2"], ".", 
        SubscriptBox["q", "1"]}], ")"}], 
      SubscriptBox["q", "1"]}]}]}], TraditionalForm]],ExpressionUUID->
  "bea359dc-ac40-46db-99ed-3e5986566eca"],
 "\nand normalize\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "2"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["q", "2"], "/"}], "||", 
     SubscriptBox["q", "2"], "||"}]}], TraditionalForm]],ExpressionUUID->
  "a6d77dfc-4aa7-4dec-800e-9af15bb21b0d"],
 ".\nNote we have recycled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "2"], TraditionalForm]],ExpressionUUID->
  "92046aae-af63-4324-a00a-9380074017e5"],
 " repeatedly to accumulate the correct expression."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 
  3.8467631884436274`*^9}},ExpressionUUID->"d3e8d955-6210-49f9-a7f7-\
44d9b387e88b"],

Cell[TextData[{
 "The next step is more of the same but we need to get a bit more organized!  \
Pick the next column\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    SubscriptBox["a", "3"]}], TraditionalForm]],ExpressionUUID->
  "09512022-a2ac-4709-829c-45301f4f17f9"],
 "\nproject out the components in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "1"], TraditionalForm]],ExpressionUUID->
  "ff83f966-ca4d-4e0d-bcf2-33b103934cff"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "2"], TraditionalForm]],ExpressionUUID->
  "28151d39-af92-440e-bdca-347cf8e112ec"],
 "\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "1"]}], ")"}], 
        SubscriptBox["q", "1"]}]}]},
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "2"]}], ")"}], 
        SubscriptBox["q", "2"]}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "75dbdda0-93a9-452c-8434-00579b4f3173"],
 "\nand normalize\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "3"], "=", 
    RowBox[{
     RowBox[{"w", "/"}], "||", "w", "||"}]}], TraditionalForm]],
  ExpressionUUID->"82790581-228c-4947-a518-13a75fd7f409"],
 ".\nI am using ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "1c9cbcc6-ab96-45f6-8646-9a9bc7b12c8f"],
 " as mnemonic for work vector!"
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 3.846763121000487*^9}, {
  3.8467632271707373`*^9, 3.8467634584743867`*^9}, {3.8467634993268323`*^9, 
  3.846763560738367*^9}, {3.8467636285392714`*^9, 
  3.846763643750461*^9}},ExpressionUUID->"8b557066-15ef-4319-b8d4-\
806ffeb47444"],

Cell[TextData[{
 "The next step is more of the same but we need to get a bit more organized!  \
Pick the next column\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    SubscriptBox["a", "4"]}], TraditionalForm]],ExpressionUUID->
  "37c0fcb2-fc83-4205-9f19-9d9424edb44f"],
 "\nproject out the components in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "1"], TraditionalForm]],ExpressionUUID->
  "de68e701-f4f4-4b7e-a96b-9331e5dfd48f"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "2"], TraditionalForm]],ExpressionUUID->
  "b856034b-2787-4ba1-8658-102490422656"],
 "\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "1"]}], ")"}], 
        SubscriptBox["q", "1"]}]}]},
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "2"]}], ")"}], 
        SubscriptBox["q", "2"]}]}]},
     {"w", "=", 
      RowBox[{"w", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"w", ".", 
          SubscriptBox["q", "3"]}], ")"}], 
        SubscriptBox["q", "3"]}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "ece100bd-694c-4568-b6d5-bffef7eb873a"],
 "\nand normalize\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "4"], "=", 
    RowBox[{
     RowBox[{"w", "/"}], "||", "w", "||"}]}], TraditionalForm]],
  ExpressionUUID->"4f88dc43-8825-43c8-8fe8-25656eb80ed2"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8467627212958364`*^9, 3.846763121000487*^9}, {
  3.8467632271707373`*^9, 3.8467634584743867`*^9}, {3.8467634993268323`*^9, 
  3.846763560738367*^9}, {3.8467636285392714`*^9, 
  3.8467636941046095`*^9}},ExpressionUUID->"6bad318d-8c87-4b33-97cf-\
42dd6c713426"],

Cell[TextData[{
 "All we have to do is keep going until we run out of columns!  We are left \
with the tall-skinny matrix Q.  The only problem is we do not have the recipe \
for how we combined the columns: it is in all the work vector ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "c4059d89-39c7-4c4a-9c8a-60b4fdba12b2"],
 " inner products and scalings. "
}], "Text",
 CellChangeTimes->{{3.846763697145377*^9, 
  3.846763882258984*^9}},ExpressionUUID->"4462b666-11b7-4554-9a67-\
511947880da0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Manual", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 
  3.84676421442906*^9}},ExpressionUUID->"3317aaa7-53a8-4c02-b380-\
ed63fca5e640"],

Cell["\<\
Here is a hand walk through of for a three column matrix! I am saving the \
coefficients so that we can see where they go!\
\>", "Text",
 CellChangeTimes->{{3.8467641826220155`*^9, 3.8467642079006968`*^9}, {
  3.8467643746400757`*^9, 
  3.8467644017947073`*^9}},ExpressionUUID->"787114e1-4094-4160-a7c7-\
506dae64d008"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"First", " ", "column"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{"A", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{"Norm", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q1", " ", "=", 
    RowBox[{"v", "/", "c1"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"second", " ", "column"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"A", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c21", " ", "=", 
   RowBox[{"v", ".", "q1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{"c21", " ", "q1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   RowBox[{"Norm", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q2", " ", "=", 
    RowBox[{"v", "/", "c2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Third", " ", "column"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"A", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c31", " ", "=", 
   RowBox[{"v", ".", "q1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{"c31", " ", "q1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c32", " ", "=", 
   RowBox[{"v", ".", "q2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{"c32", " ", "q2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", "=", 
   RowBox[{"Norm", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q3", " ", "=", 
   RowBox[{"v", "/", "c3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyQ", "=", 
   RowBox[{"{", 
    RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"c1", ",", 
   RowBox[{"{", 
    RowBox[{"c21", ",", "c2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c31", ",", "c32", ",", "c3"}], "}"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846932627457077*^9, 3.8469327077779217`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"61cb48ec-bd40-4be1-a482-718dcebfde78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9699444003564577`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1576348748151411`"}], ",", "1.6803208408847996`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4596323394357897`", ",", "0.690179671819438`", ",", 
     "0.4654957258960317`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.846764444680108*^9, 3.8467644546819253`*^9}, 
   3.8467645530576353`*^9, {3.8469326731806126`*^9, 3.846932708979599*^9}, 
   3.8522138909691424`*^9, 3.852214000399694*^9, 3.852220703723531*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"0bafe589-02f9-446d-a9c0-c97b41dafd55"]
}, Open  ]],

Cell["Lets compare to the built-in QR", "Text",
 CellChangeTimes->{{3.84676449268285*^9, 
  3.84676450647991*^9}},ExpressionUUID->"598dcc99-413e-4416-a793-\
2879e6e1ad71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"BuiltInQ", ",", "BuiltInR"}], "}"}], "=", 
   RowBox[{"QRDecomposition", "[", "A", "]"}]}], 
  ";"}], "\[IndentingNewLine]", "BuiltInR"}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, 
   3.846764438391307*^9, {3.8467644713780966`*^9, 3.8467644812610636`*^9}, {
   3.846764515232586*^9, 3.846764515711051*^9}, {3.846765244965356*^9, 
   3.8467652610129747`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"1d0fa244-a4c7-4c58-954b-b5d8b5afe700"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9699444003564577`"}], ",", "0.15763487481514116`", ",", 
     RowBox[{"-", "1.4596323394357897`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.6803208408847996`", ",", "0.690179671819438`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.4654957258960318`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.846764329841936*^9, 3.8467643543923936`*^9}, {
   3.8467644082091722`*^9, 3.8467644828839874`*^9}, 3.8467645165461707`*^9, 
   3.8467645572640905`*^9, {3.8467652523496046`*^9, 3.8467652625807514`*^9}, 
   3.84693269584309*^9, 3.852213942168642*^9, 3.8522140057572365`*^9, 
   3.852220753870897*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"57a00f3e-84cb-4ae1-b300-9cf2ff4ab58b"]
}, Open  ]],

Cell["Our numbers match and I think we know how to construct R ", "Text",
 CellChangeTimes->{{3.84676264392801*^9, 3.846762717783315*^9}, {
  3.8467645709387155`*^9, 3.846764584461121*^9}, {3.8467647454544935`*^9, 
  3.846764799170443*^9}},ExpressionUUID->"36742268-8021-4438-9156-\
ae9c0cb167a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Script", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 3.84676421442906*^9}, {
  3.846764813698187*^9, 
  3.846764823045749*^9}},ExpressionUUID->"5c8e3216-1b69-4fd9-87de-\
4d2dd1bc6f73"],

Cell["Here is a preliminary script!", "Text",
 CellChangeTimes->{{3.8467641826220155`*^9, 3.8467642079006968`*^9}, {
  3.8467643746400757`*^9, 3.8467644017947073`*^9}, {3.846764830963998*^9, 
  3.846764844313582*^9}},ExpressionUUID->"ced6fa7f-1e8c-4c1b-9406-\
017690380918"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"123", ",", "52"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "Storage"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Q", "=", 
    RowBox[{"0", "*", "A"}]}], ";", " ", 
   RowBox[{"R", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Loop", " ", "through", " ", "columns"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Grab", " ", "next", " ", "column"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "=", 
      RowBox[{"A", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"project", " ", "out", " ", "previous", " ", "columns"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"R", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"v", ".", 
          RowBox[{"Q", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v", "=", 
         RowBox[{"v", "-", 
          RowBox[{
           RowBox[{"R", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}]}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Scale", " ", "and", " ", "save", " ", "orthogonalized", " ", 
       "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "\[LeftDoubleBracket]", 
       RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Norm", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Q", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"v", "/", 
       RowBox[{"R", "\[LeftDoubleBracket]", 
        RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "we", " ", "computed", " ", "a", " ", "QR", " ",
     "Decomposition"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{"Q", ".", "R"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"OrthogonalMatrixQ", "[", "Q", "]"}], ",", 
   RowBox[{"UpperTriangularMatrixQ", "[", "R", "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "R", "]"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846764850477963*^9, 3.846765222381673*^9}, {
   3.846765289526026*^9, 3.846765348035287*^9}, {3.8467654543593063`*^9, 
   3.846765601160556*^9}, {3.846836389385992*^9, 3.846836406948695*^9}, {
   3.85221444735531*^9, 3.8522144494643764`*^9}, {3.8522209161196156`*^9, 
   3.85222092102075*^9}, {3.8522210678366776`*^9, 3.8522210689464054`*^9}, {
   3.852221272911091*^9, 3.8522212748827333`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"a49fa4d3-efd2-486c-bf51-0ed773642246"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.994177874316864`*^-15", ",", "8.324698498282969`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, 3.84683642173706*^9, 
   3.852214258937074*^9, {3.852214436434308*^9, 3.852214449785695*^9}, 
   3.852221220321108*^9, 3.8522212756194887`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"3fb2e3c7-489e-4f06-bdc6-e12245dace61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, 3.84683642173706*^9, 
   3.852214258937074*^9, {3.852214436434308*^9, 3.852214449785695*^9}, 
   3.852221220321108*^9, 3.852221275625472*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"ba273fc7-c54b-4600-b88d-6b8a50702c35"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
4iQ6P6WY+MVy4K3zws7sdCsozVfBZSEkvEqaK+cq8dCd1NTS/6Mbm7S0lx1q
InDnHXWsI4MNJ8vXhXbiTchZ4rC1YpREVmD55MGZBOY/2Oe5X5wFj8WqkaUr
KHwJMavt7yZw9wnLc7oCB+nqN8dG6Hz+1CSVWJlNYO4vq8k+l9hYa10zvHE1
hXLf6pmHJUg8k7+muuU8B2yTmVmeh0h4FA1E7r9FYVXBHbOfOv3/+PxMcIIT
/P/mlXDx+XfukEie9kJY8FwXxlYduerwJwh5N+vO22jwMNvjp8n19wTiivqo
93MoqJys+pV9gYn4lEMzH6nyEDISodqaQMCsbrGDn2w3SlXEVkfIsLH7btPB
sOc8/Lzk3HxgHQevQz80peTxEXZrsWjifhLq0SLDNiJsLH/luTRUgI88O57F
UzESrJoi+dMFdF+6pjlmT/cyyvT0ef9XfUh7XnL1qC2F7La92aeDSbzXKW7/
k8jFY+6ZaeoLKAiPv7u5WbAfZxYNSDoF9uNq+eTdtgYETppYl38cIBGmffzw
5w8UThzaXY8KLuZYz2hdfZZA+KNz7ZHfSLjbmr7/sYKA9zYLC34eA+Wyaww8
xSsRW7/s0fEYAqK2Ma1PtVgwP/nrwxrf2n983iY4wQn+nwxpkNx6xZhCXVSf
/nKXThyTPTLF38wHQsnep7f00PmmV6Z6tZIPWZcXGzeaMpEpe1OFVCGQacT8
Gs8msTKho8eqnEK1h2VMmG07CvWIkuDfTLC+jhjdkuLB8gSvtvhwC/6e/9tc
ps6E6JC9lX8KF9mRDeXWMe1YmqLRckKMRfe7uA2Cs3lYer0k7PJzAkt/zVr0
SoKNWCVVkyflX8E7NLJt2xUSD0uWWfY85cH8+IoT8w/0wnlB6R6BIw14/T0x
cNPmPphkdCfxZXm4ekc87NAZEo0P+oUNYniYIt7CufCtBztPnM+pGyVQXPBs
a/oSDj773rU/PKsFWwcZm4s6SESe7mpeUshHp6tdn8UCJnYkz99tG8KDyEC3
Ho8k8FttUveIBoX7y0NSQuhIrEPKCzHLXhS/Y93X9ef94/M5wQn+Z+TdlT2d
OY4U9n5ofbRBsxN6Bqo3ctfsgvPcqeuFjhPIHlIfq17KgqbuwREHw1qcm7rS
mLGIQp5BcpxuGQE7Wb3ywho2FnksmbZkLomDK/dYHCznwK5RqWvlyTbELyMe
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
nhSh08nGmccdKZY+FKLbE28rviXxPMEk2GcHDydu3Y3VliXhN2Y4V+cp/fyF
3bdtTNuw1O3QY5W9JLItf+rPmM/D2KQn24x43ZCw0565nUPAsW9AKtWOwnU9
jRpKqB8HbZLEpv/r/nlyPGIJ7W+BioNjA5096C2cbvDgZSN0H315957Th7CM
PTfcmXRvJJh/Xu6noHvOWebOCAl7i7e2unweroLzxNSwF9ecVDdaWHDgl3Fr
QHUPH5+ZWz6/ucqHyNTfg4dS6J4+mvkqLpnCz8vxnIB0CvaNG3b/pNej8urz
2c3n6Fzazlmfat2BfWpBm9etZ8H/93iKnT4PUxvc06YzSajME73+sYEPzVB7
59W+TKz7Eu498xQLGz7JHol7ycNprVdpo10E5rsrR7yi/drN9nTn+ycUZqmt
tI0y7Mej4VczRCh6fOMv5SYIceBjuFDo4Pnmf3xfTvC/j85evDmXP/VjLm4d
2rOhDXt9jRL+yOgi2H3eQ5NsHhTrXnbqS9HrrS3IrGQdhfG727OWJPOQJusb
LDqJPpePdPy1NaBQmTLN91YCBe/erXKTrel+o2MUub6RD+Lhc5N1h5oR3RAQ
5lPGwK2X12a8SOfiu/trryu5JDwVbIfHhPlYLVP8pcm6D7f3zxpfr8XA0rFD
vhG7uBgRlpI9LEvAOkGub38riX1TCi/k5/CRUe3GGRpnoDC4RH6VbAt8yzUk
V0ozUe8134k4yYXEF6/k1fokyrUupay04YJ3LMf526MOON1+R/l+IvH9uem3
XRH0vsrG6pwoBmQVQiPznjGxeLd9U7gxD/rLpJrSrhDoK+JvvDqTQsjc0x0B
dP5uc3+4Yrc+GxdHB1eOGpI4c4roSXThQuW4bXsjswNLOKU3ktaTmJUgrrPt
EBctTSL5cUc68btnYb754gYINw8ENyr1oeYkZ9m+xTzI/K65bvyNg5BJmV/u
yBHYO7d/VfpjEk4u26UGW5mw2Oo+NnsrDys+l90/eIfAquuf5dLsuAgs5ne3
WhJQF8/+eOcLCUUT98NKKyi4SqQuT+4k4GsfnM6X40DiQ6i0wRcWZsx6eUu9
m4fRlpdrT34nsEffeYhbQ0B7hVnrqlg2TMyn3Mi81ohjhHvv8ts8KIWVVd0T
I2FzsNVe1ISC246/d32MKUw5VGfdr05fn+jBc4McDrSOxVpn0v1wJ+OFkRDt
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

   "], {{0, 0}, {52, 52}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{51.5, 
       FormBox["1", TraditionalForm]}, {32.5, 
       FormBox["20", TraditionalForm]}, {12.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["52", TraditionalForm]}}, {{51.5, 
       FormBox["1", TraditionalForm]}, {32.5, 
       FormBox["20", TraditionalForm]}, {12.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["52", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {51.5, 
       FormBox["52", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {51.5, 
       FormBox["52", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, 3.84683642173706*^9, 
   3.852214258937074*^9, {3.852214436434308*^9, 3.852214449785695*^9}, 
   3.852221220321108*^9, 3.852221275685358*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"dab67b10-8393-4bdb-9947-658b1747750d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram-Schmidt: Function", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 3.84676421442906*^9}, {
  3.846764813698187*^9, 3.846764823045749*^9}, {3.8467656434229403`*^9, 
  3.8467656445521955`*^9}},ExpressionUUID->"a4a801ee-65a6-415f-bc9e-\
4fa43611df87"],

Cell["Here is a function to hide all the crud!", "Text",
 CellChangeTimes->{{3.846765720774468*^9, 3.84676572900263*^9}, {
  3.846833840474065*^9, 
  3.8468338433970947`*^9}},ExpressionUUID->"75df1b0f-7d69-450b-9a83-\
d09ebc002ca1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyGramSchmidt", "[", "A_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", "Q", ",", "R", ",", "v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Set", " ", "up", " ", "Storage"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "=", 
      RowBox[{"0", "*", "A"}]}], ";", " ", 
     RowBox[{"R", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Loop", " ", "through", " ", "columns"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Grab", " ", "next", " ", "column"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"A", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"project", " ", "out", " ", "previous", " ", "columns"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"R", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"v", ".", 
             RowBox[{"Q", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"v", "=", 
            RowBox[{"v", "-", 
             RowBox[{
              RowBox[{"R", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
              RowBox[{"Q", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}]}]}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Scale", " ", "and", " ", "save", " ", "orthogonalized", " ", 
          "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"R", "\[LeftDoubleBracket]", 
          RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Norm", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Q", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"v", "/", 
          RowBox[{"R", "\[LeftDoubleBracket]", 
           RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "R"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8467656515499015`*^9, 3.846765707864214*^9}, {
   3.84683375127451*^9, 3.8468337517627373`*^9}, {3.8468364571277122`*^9, 
   3.846836476148757*^9}, 
   3.8522225424731083`*^9},ExpressionUUID->"832b65a1-ff46-4339-a7ac-\
70d6a7973f97"],

Cell["Here is a test", "Text",
 CellChangeTimes->{{3.8467641826220155`*^9, 3.8467642079006968`*^9}, {
  3.8467643746400757`*^9, 3.8467644017947073`*^9}, {3.846764830963998*^9, 
  3.846764844313582*^9}, {3.8467657394475007`*^9, 
  3.846765739886342*^9}},ExpressionUUID->"ffc0af5f-bef3-436b-83ed-\
70406ca82027"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "*", "154"}], ",", "111"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"MyGramSchmidt", "[", "A", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q2", ",", "R2"}], "}"}], "=", 
    RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"Z", "=", 
     RowBox[{"Q2", "\[Transpose]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "we", " ", "computed", " ", "a", " ", "QR", " ",
     "Decomposition"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{"Q", ".", "R"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UpperTriangularMatrixQ", "[", "R", "]"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846764850477963*^9, 3.846765222381673*^9}, {
   3.846765289526026*^9, 3.846765348035287*^9}, {3.8467654543593063`*^9, 
   3.846765601160556*^9}, {3.8467657495456624`*^9, 3.8467657966108394`*^9}, {
   3.8522217047735033`*^9, 3.8522218008823423`*^9}, {3.852221928510585*^9, 
   3.852221933282794*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"cbee060c-001b-4a9c-9fc5-0681a85e646f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0892075`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.852221954912343*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"97c498fd-67cf-41c7-94d0-5f3645cf17d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0011403`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.852221954921316*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"6a86b0ba-ea2e-4e02-996e-38398fe03fed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0000278`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.852221954925306*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a00b2e58-1410-4d7e-b5a6-8a9f37cbaec4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.352037369400847`*^-15", ",", "8.811931347293697`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.852221954930292*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"97a3bc2a-81de-452e-b857-924a713995bd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8522219549353113`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"4d76e0dc-3b90-4917-8c8b-f5334da4f38b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8522219207590857`*^9},ExpressionUUID->"ccf22b7b-3e49-4575-9f70-\
94a7db24bb3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0955499`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, {3.8467657651547484`*^9, 
   3.846765797070423*^9}, 3.846833769951949*^9, 3.846836492991081*^9, 
   3.852214689192525*^9, 3.8522216769791594`*^9, {3.852221708181204*^9, 
   3.852221743802696*^9}, 3.852221779535319*^9, {3.8522218189292693`*^9, 
   3.852221825005225*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"16d5e760-8de7-4814-b08f-746bb4fe3441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0008474`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, {3.8467657651547484`*^9, 
   3.846765797070423*^9}, 3.846833769951949*^9, 3.846836492991081*^9, 
   3.852214689192525*^9, 3.8522216769791594`*^9, {3.852221708181204*^9, 
   3.852221743802696*^9}, 3.852221779535319*^9, {3.8522218189292693`*^9, 
   3.8522218250151987`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"95aa51dc-ddd0-45a7-8229-51c35d8bd2c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000035`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, {3.8467657651547484`*^9, 
   3.846765797070423*^9}, 3.846833769951949*^9, 3.846836492991081*^9, 
   3.852214689192525*^9, 3.8522216769791594`*^9, {3.852221708181204*^9, 
   3.852221743802696*^9}, 3.852221779535319*^9, {3.8522218189292693`*^9, 
   3.852221825021182*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"30f472a2-0d95-4a56-a931-f722893bd8ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.287831795708824`*^-15", ",", "1.3262137101660286`*^-15"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, {3.8467657651547484`*^9, 
   3.846765797070423*^9}, 3.846833769951949*^9, 3.846836492991081*^9, 
   3.852214689192525*^9, 3.8522216769791594`*^9, {3.852221708181204*^9, 
   3.852221743802696*^9}, 3.852221779535319*^9, {3.8522218189292693`*^9, 
   3.852221825029162*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"9306cd2c-8094-4fb0-ae0c-44ddf17695b8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8467652924417367`*^9, 3.846765348787366*^9}, {
   3.846765462632497*^9, 3.8467656017568426`*^9}, {3.8467657651547484`*^9, 
   3.846765797070423*^9}, 3.846833769951949*^9, 3.846836492991081*^9, 
   3.852214689192525*^9, 3.8522216769791594`*^9, {3.852221708181204*^9, 
   3.852221743802696*^9}, 3.852221779535319*^9, {3.8522218189292693`*^9, 
   3.8522218250381365`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"42d1bfcb-61b4-4572-9b70-bb5dd423c45c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency: Math Libraries", "Section",
 CellChangeTimes->{{3.846677344345183*^9, 3.846677356916223*^9}, {
  3.84675870063579*^9, 3.8467587032474008`*^9}, {3.8467587405099*^9, 
  3.8467587419585333`*^9}, {3.846760700320636*^9, 3.8467607095636463`*^9}, {
  3.8467625877455564`*^9, 3.8467625922734213`*^9}, {3.846763890848014*^9, 
  3.846763922282195*^9}, {3.8467642119446635`*^9, 3.84676421442906*^9}, {
  3.846764813698187*^9, 3.846764823045749*^9}, {3.8467656434229403`*^9, 
  3.8467656445521955`*^9}, {3.846833864197178*^9, 3.8468338671411343`*^9}, {
  3.846833905140592*^9, 
  3.846833910892561*^9}},ExpressionUUID->"483adc74-08d1-4d04-9325-\
d003cd1578f9"],

Cell["\<\
The built in QR decomposition is going to be MUCH faster than any code we \
write. The reason is that the basic QR computation is the foundation for a \
lot of other fancier computations.  As a result, a substantial effort has \
been made to make it as efficient as possible.  This includes economizing \
storage and computation and communication.\
\>", "Text",
 CellChangeTimes->{{3.846765720774468*^9, 3.84676572900263*^9}, {
  3.846833840474065*^9, 3.8468338433970947`*^9}, {3.846833873644988*^9, 
  3.8468340724936237`*^9}, {3.8518757104023438`*^9, 
  3.851875717044406*^9}},ExpressionUUID->"5138b069-f9c0-4247-a2cc-\
9158726300b2"],

Cell["\<\
All the higher level tools rely on libraries of math functions.  The lowest \
level is called BLAS for Basic Linear Algebra Subprograms which are designed \
to squeeze every possible bit of performance out of all sorts of hardware.  \
\>", "Text",
 CellChangeTimes->{{3.84683407517903*^9, 
  3.84683419605682*^9}},ExpressionUUID->"6a9180e4-2b0f-48bb-a18e-\
4d5680ae0465"],

Cell[TextData[{
 "One of the reasons Julia is fast (the Julia folks word is performant) and \
one of the reasons we are using Julia is that it makes it easy to access \
these libraries. ",
 StyleBox["Good code uses these libraries!",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.846834221165494*^9, 3.846834293799685*^9}, 
   3.846834362331464*^9},ExpressionUUID->"68a4d4e3-e1ef-4930-a7a0-\
1c6e91f798e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1500", ",", "1112"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"MyGramSchmidt", "[", "A", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", "R"}], "}"}], "=", 
    RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8467639306572237`*^9, 3.8467641776062603`*^9}, {
   3.8467642221950274`*^9, 3.8467643539107914`*^9}, 3.846764407546877*^9, {
   3.846764438391307*^9, 3.8467644433187313`*^9}, {3.8467645206527653`*^9, 
   3.8467645524084167`*^9}, {3.846764850477963*^9, 3.846765222381673*^9}, {
   3.846765289526026*^9, 3.846765348035287*^9}, {3.8467654543593063`*^9, 
   3.846765601160556*^9}, {3.8467657495456624`*^9, 3.8467657966108394`*^9}, {
   3.8522149041114936`*^9, 3.8522149648661137`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"99e093d8-851f-42d2-8c9c-b4a0ed2ce852"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36.96875`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.852214916774312*^9, 3.8522149625022097`*^9}, 
   3.8522150046815577`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"a1a79823-ad26-42bc-97da-b06104e79dbd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.109375`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.852214916774312*^9, 3.8522149625022097`*^9}, 
   3.852215004822122*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"50eaace7-5603-43e0-91f2-bc7c14f3f3f6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association[
 "PresenterSettings" -> Association["Dialogs" -> {}], "TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"4562b249-0b2c-4719-a3b6-f543ee714c6e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 484, 7, 184, "Title",ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],
Cell[CellGroupData[{
Cell[1089, 33, 338, 5, 97, "Section",ExpressionUUID->"6f59c9c1-2c99-4067-b65e-c7ca24cfe2cc"],
Cell[1430, 40, 2115, 58, 219, "Text",ExpressionUUID->"b2518617-d166-4117-baa8-b3f8cc958972",
 InitializationCell->True],
Cell[3548, 100, 381, 8, 83, "Text",ExpressionUUID->"d4a51ecb-739a-439e-b784-58ec389e1405"],
Cell[CellGroupData[{
Cell[3954, 112, 1699, 51, 214, "Input",ExpressionUUID->"29ba1cad-ef11-4467-882f-245e1d669d32"],
Cell[5656, 165, 399, 8, 52, "Output",ExpressionUUID->"ea7db475-0ba2-4a01-b39e-2794be183ab3"],
Cell[6058, 175, 33688, 584, 351, "Output",ExpressionUUID->"9c70b69a-b267-4a98-a1d9-3045f3610056"]
}, Open  ]],
Cell[39761, 762, 363, 8, 83, "Text",ExpressionUUID->"659d0d6a-ce8e-4915-98ab-447830e76fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40161, 775, 411, 6, 97, "Section",ExpressionUUID->"707d98fb-f9fc-4dd4-90a2-9b9b839c9c63"],
Cell[40575, 783, 538, 15, 118, "Text",ExpressionUUID->"25f51143-6a37-4aab-a6f5-351979b1404e"],
Cell[41116, 800, 677, 22, 93, "Text",ExpressionUUID->"0b759e75-9839-43af-bdb6-c16c9f489f02",
 InitializationCell->True],
Cell[41796, 824, 1383, 45, 184, "Text",ExpressionUUID->"d3e8d955-6210-49f9-a7f7-44d9b387e88b",
 InitializationCell->True],
Cell[43182, 871, 1806, 56, 272, "Text",ExpressionUUID->"8b557066-15ef-4319-b8d4-806ffeb47444",
 InitializationCell->True],
Cell[44991, 929, 1842, 59, 268, "Text",ExpressionUUID->"6bad318d-8c87-4b33-97cf-42dd6c713426",
 InitializationCell->True],
Cell[46836, 990, 518, 11, 117, "Text",ExpressionUUID->"4462b666-11b7-4554-9a67-511947880da0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47391, 1006, 461, 7, 97, "Section",ExpressionUUID->"3317aaa7-53a8-4c02-b380-ed63fca5e640"],
Cell[47855, 1015, 329, 7, 83, "Text",ExpressionUUID->"787114e1-4094-4160-a7c7-506dae64d008"],
Cell[CellGroupData[{
Cell[48209, 1026, 3268, 97, 642, "Input",ExpressionUUID->"61cb48ec-bd40-4be1-a482-718dcebfde78"],
Cell[51480, 1125, 634, 15, 48, "Output",ExpressionUUID->"0bafe589-02f9-446d-a9c0-c97b41dafd55"]
}, Open  ]],
Cell[52129, 1143, 171, 3, 50, "Text",ExpressionUUID->"598dcc99-413e-4416-a793-2879e6e1ad71"],
Cell[CellGroupData[{
Cell[52325, 1150, 620, 13, 71, "Input",ExpressionUUID->"1d0fa244-a4c7-4c58-954b-b5d8b5afe700"],
Cell[52948, 1165, 828, 19, 48, "Output",ExpressionUUID->"57a00f3e-84cb-4ae1-b300-9cf2ff4ab58b"]
}, Open  ]],
Cell[53791, 1187, 297, 4, 50, "Text",ExpressionUUID->"36742268-8021-4438-9156-ae9c0cb167a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54125, 1196, 510, 8, 97, "Section",ExpressionUUID->"5c8e3216-1b69-4fd9-87de-4d2dd1bc6f73"],
Cell[54638, 1206, 274, 4, 50, "Text",ExpressionUUID->"ced6fa7f-1e8c-4c1b-9406-017690380918"],
Cell[CellGroupData[{
Cell[54937, 1214, 4566, 118, 614, "Input",ExpressionUUID->"a49fa4d3-efd2-486c-bf51-0ed773642246"],
Cell[59506, 1334, 466, 9, 52, "Output",ExpressionUUID->"3fb2e3c7-489e-4f06-bdc6-e12245dace61"],
Cell[59975, 1345, 423, 8, 48, "Output",ExpressionUUID->"ba273fc7-c54b-4600-b88d-6b8a50702c35"],
Cell[60401, 1355, 44426, 739, 564, "Output",ExpressionUUID->"dab67b10-8393-4bdb-9947-658b1747750d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104876, 2100, 562, 8, 97, "Section",ExpressionUUID->"a4a801ee-65a6-415f-bc9e-4fa43611df87"],
Cell[105441, 2110, 232, 4, 50, "Text",ExpressionUUID->"75df1b0f-7d69-450b-9a83-d09ebc002ca1"],
Cell[105676, 2116, 3576, 87, 552, "Input",ExpressionUUID->"832b65a1-ff46-4339-a7ac-70d6a7973f97",
 InitializationCell->True],
Cell[109255, 2205, 310, 5, 50, "Text",ExpressionUUID->"ffc0af5f-bef3-436b-83ed-70406ca82027"],
Cell[CellGroupData[{
Cell[109590, 2214, 2237, 61, 243, "Input",ExpressionUUID->"cbee060c-001b-4a9c-9fc5-0681a85e646f"],
Cell[111830, 2277, 206, 4, 48, "Output",ExpressionUUID->"97c498fd-67cf-41c7-94d0-5f3645cf17d3"],
Cell[112039, 2283, 206, 4, 48, "Output",ExpressionUUID->"6a86b0ba-ea2e-4e02-996e-38398fe03fed"],
Cell[112248, 2289, 206, 4, 48, "Output",ExpressionUUID->"a00b2e58-1410-4d7e-b5a6-8a9f37cbaec4"],
Cell[112457, 2295, 241, 5, 52, "Output",ExpressionUUID->"97a3bc2a-81de-452e-b857-924a713995bd"],
Cell[112701, 2302, 154, 2, 48, "Output",ExpressionUUID->"4d76e0dc-3b90-4917-8c8b-f5334da4f38b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112892, 2309, 149, 3, 71, "Input",ExpressionUUID->"ccf22b7b-3e49-4575-9f70-94a7db24bb3d"],
Cell[113044, 2314, 554, 9, 48, "Output",ExpressionUUID->"16d5e760-8de7-4814-b08f-746bb4fe3441"],
Cell[113601, 2325, 556, 9, 48, "Output",ExpressionUUID->"95aa51dc-ddd0-45a7-8229-51c35d8bd2c2"],
Cell[114160, 2336, 553, 9, 48, "Output",ExpressionUUID->"30f472a2-0d95-4a56-a931-f722893bd8ae"],
Cell[114716, 2347, 590, 10, 52, "Output",ExpressionUUID->"9306cd2c-8094-4fb0-ae0c-44ddf17695b8"],
Cell[115309, 2359, 502, 7, 48, "Output",ExpressionUUID->"42d1bfcb-61b4-4572-9b70-bb5dd423c45c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115860, 2372, 666, 10, 97, "Section",ExpressionUUID->"483adc74-08d1-4d04-9325-d003cd1578f9"],
Cell[116529, 2384, 646, 11, 150, "Text",ExpressionUUID->"5138b069-f9c0-4247-a2cc-9158726300b2"],
Cell[117178, 2397, 381, 7, 117, "Text",ExpressionUUID->"6a9180e4-2b0f-48bb-a18e-4d5680ae0465"],
Cell[117562, 2406, 426, 9, 83, "Text",ExpressionUUID->"68a4d4e3-e1ef-4930-a7a0-1c6e91f798e6"],
Cell[CellGroupData[{
Cell[118013, 2419, 1415, 37, 128, "Input",ExpressionUUID->"99e093d8-851f-42d2-8c9c-b4a0ed2ce852"],
Cell[119431, 2458, 263, 6, 48, "Output",ExpressionUUID->"a1a79823-ad26-42bc-97da-b06104e79dbd"],
Cell[119697, 2466, 261, 6, 65, "Output",ExpressionUUID->"50eaace7-5603-43e0-91f2-bc7c14f3f3f6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

