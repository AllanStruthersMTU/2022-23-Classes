(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     80327,       1858]
NotebookOptionsPosition[     71685,       1718]
NotebookOutlinePosition[     72317,       1739]
CellTagsIndexPosition[     72274,       1736]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["XX: OP Counts", "Title",
 CellChangeTimes->CompressedData["
1:eJwdzE1M0mEAx/F/2oycc7MtiQ1nOOzgogMXqK05SF0slo6huQ6uOW1xsBqw
XiycutmhzRIKdOR8Yb5AqYV6002QhSC0YrSygdoLMyGYARpNm/n8nsN3n9uX
13hL0ZzFMEwJCUqzpIzXGpcshiyHoJkVqfhN1PSwLsLufWFukui+N5AHY3J/
WYpolXynyscsg2mi4dfUEMy/e7KEa4tLROkktevE2Zki4m23h/psW/ZDTXxT
6Y7A0nB/1ExsOjoSg9J6u+MFsf3BnhPaXfdPTxBZ+vIz0M88UjuJ/Fq2Fj55
PueAD1c91Glj69Qn4nuf+TVk+QMLUCHTOOBstOcbdKV+RuDh4J0olB3rjkHV
28DoZ6KwLDQG29zlLsjta6WGxd4l6DHd9ED+ljIICydvfISXzgu+wJyknprg
6tbhxqadqtQtR2BD5uom1Kk64lB8PZmg/x1BCn5gq6hrO8Y/kCcQZeDfluz/
8Jq2N3uFyHnVcQSemm3Og86iqgK48PLKcdjwroYDDZ2jVOv+hWK4axumLv5r
WjHOxyV1T30hOK5+fNlEVHw9Vw0PAD4NRLs=
  "],ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],

Cell["\<\
We have looked at lots of algorithms.  We need a way to compare how much \
arithmetic they do.
Historically folks have used FLOPS (Floating Point Operations per Second) to \
estimate the arithmetic intensity of algorithms.  There is more than a little \
bit of ambiguity and tradition in this.\
\>", "Text",
 CellChangeTimes->{{3.856970677984902*^9, 3.8569708169629154`*^9}, {
  3.857334816038637*^9, 
  3.857334854908609*^9}},ExpressionUUID->"b94a9251-c74e-46fc-8051-\
286823e005ef"],

Cell[CellGroupData[{

Cell["\<\
Olden Days: a single addition was much faster than a single multiplication; a \
single multiplication was much faster than a single division; and a single \
division was much faster than a single square root. \
\>", "Item",
 CellChangeTimes->{{3.856970824701024*^9, 3.8569708856416802`*^9}, {
   3.8570333278091755`*^9, 3.8570334251765537`*^9}, {3.857033514093258*^9, 
   3.857033534746231*^9}, 3.8570336508428235`*^9, {3.8570336941061773`*^9, 
   3.8570336946357784`*^9}},ExpressionUUID->"4a7391a0-91d4-4c6d-bc70-\
0cccab529e38"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    RowBox[{"\[LessLess]", 
     RowBox[{"*", 
      RowBox[{"\[LessLess]", 
       RowBox[{"\[Divide]", 
        RowBox[{"\[LessLess]", 
         SqrtBox[" "]}]}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "84d4453d-c418-4e34-9969-5950e8ae5a00"],
 "  "
}], "Subitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335830433607`*^9, 
  3.857033583044363*^9}},ExpressionUUID->"ef297dd5-4e17-407c-969d-\
0b5877a85872"],

Cell["Single CPU or \[OpenCurlyDoubleQuote]compute\[CloseCurlyDoubleQuote]", \
"Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 
  3.8570336606572247`*^9}},ExpressionUUID->"3be9ee9f-4b4a-4102-b63a-\
232c1449d227"],

Cell["\<\
Counting the number of multiplications was a reasonable way to estimate how \
much work an algorithm was \
\>", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
   3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
   3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, 
   3.857033637555616*^9},ExpressionUUID->"d543564e-83d5-4038-9c04-\
a77c10ee3184"],

Cell["FLOP = # of multiplications", "Subitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}},ExpressionUUID->"7b991d17-e793-481a-8814-\
b1cde05128e1"]
}, Open  ]],

Cell[TextData[{
 "Then: a single addition was ",
 StyleBox["a bit",
  FontColor->RGBColor[1, 0, 0]],
 " faster than a single multiplication; a single multiplication was faster \
than a single division; and a single division was much faster than a single \
square root. Floating point co-processors could do a few (commonly 3 but \
sometimes more or less) floating point additions or multiplications at the \
same time"
}], "Item",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335565787597`*^9}, {3.857033676665005*^9, 3.8570337208327103`*^9}, {
  3.8570337902028494`*^9, 
  3.8570339749701033`*^9}},ExpressionUUID->"a47ad061-8209-426c-81f7-\
982af3c813f1"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    RowBox[{"<", 
     RowBox[{"*", 
      RowBox[{"<", 
       RowBox[{"\[Divide]", 
        RowBox[{"\[LessLess]", 
         SqrtBox[" "]}]}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "fa4c926e-58c5-4a8a-a6b8-e6e895298d71"],
 "  "
}], "Subitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335830433607`*^9, 3.857033583044363*^9}, {
  3.8570338980523577`*^9, 
  3.8570339080594063`*^9}},ExpressionUUID->"17051c32-d349-4ebf-b732-\
43eab74ebc4b"],

Cell["Single CPU with a floating point co-processor", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}},ExpressionUUID->"8415145c-1c57-499b-977e-\
3c73ea383972"],

Cell["\<\
Counting the number of multiplications was still a reasonable way to estimate \
algorithmic work but it was important to make sure the CPU could exploit the \
co-processor. \
\>", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
   3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
   3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, 
   3.857033637555616*^9, {3.857034000362562*^9, 
   3.857034046205467*^9}},ExpressionUUID->"a7248d06-6ac5-47fb-a078-\
a3ce2475b2c0"],

Cell["FLOP = # of multiplications", "Subsubitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}},ExpressionUUID->"921d3fba-440d-4307-a3a1-\
978d3b7f5000"]
}, Open  ]],

Cell[TextData[{
 "Then: a single addition was ",
 StyleBox["a bit",
  FontColor->RGBColor[1, 0, 0]],
 " faster than a single multiplication; a single multiplication was faster \
than a single division; and a single division was  faster than a single \
square root. Floating point co-processors could do a few (commonly 3 but \
sometimes more or less) floating point additions or multiplications at the \
same time"
}], "Item",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
   3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
   3.8570335565787597`*^9}, {3.857033676665005*^9, 3.8570337208327103`*^9}, {
   3.8570337902028494`*^9, 3.8570339749701033`*^9}, 
   3.857034099698583*^9},ExpressionUUID->"30a04cc6-d387-43f7-9e98-\
875b84e182ec"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    RowBox[{"<", 
     RowBox[{"*", 
      RowBox[{"<", 
       RowBox[{"\[Divide]", 
        RowBox[{"<", 
         SqrtBox[" "]}]}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "ee3892f2-3c7b-4670-b0f6-fd7d719620ca"],
 "  "
}], "Subitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335830433607`*^9, 3.857033583044363*^9}, {
  3.8570338980523577`*^9, 3.8570339080594063`*^9}, {3.857034103502041*^9, 
  3.857034103502041*^9}},ExpressionUUID->"fcca6e77-a498-4828-b091-\
cc8c2539b237"],

Cell["\<\
Cheap multiple core CPUs with floating point co-processors.  \
\>", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 
  3.8570341605939503`*^9}},ExpressionUUID->"4bc34298-79c0-4cb1-8a2d-\
5d0f5b053dca"],

Cell["A new level of communication.  ", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.8570341408381624`*^9}, {
  3.857034193603422*^9, 
  3.857034196866639*^9}},ExpressionUUID->"eaabb6fb-e1d0-41d3-9d5a-\
79b9673a871c"],

Cell["Arithmetic gets cheaper much faster than memory.", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 
  3.857034199838582*^9}},ExpressionUUID->"9041f4da-cbfc-4210-8486-\
19b9f25a866e"],

Cell["Automated multi-level caches", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 
  3.857034227708213*^9}},ExpressionUUID->"b6390b81-675a-4b66-b019-\
77469c1351ba"],

Cell["\<\
Counting the number of \[OpenCurlyDoubleQuote]linear algebraic\
\[CloseCurlyDoubleQuote] operations is a reasonable way estimate algorithmic \
work. \
\>", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
   3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
   3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, 
   3.857033637555616*^9, {3.857034000362562*^9, 3.857034046205467*^9}, {
   3.8570342579058647`*^9, 
   3.857034350475769*^9}},ExpressionUUID->"6668efe6-5d7e-46d0-8dfa-\
046bd94f93e6"],

Cell[TextData[{
 "Almost all of our algorithms involve mostly ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", "\[LongLeftArrow]", "a"}], "*", "b"}], "+", "c"}], 
   TraditionalForm]],ExpressionUUID->"63ce56e2-c2fc-485f-9961-58710717acac"]
}], "Subsubitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}, {3.857034370867116*^9, 3.8570344778273244`*^9}, {
  3.8570345243636017`*^9, 
  3.8570345805985465`*^9}},ExpressionUUID->"a76e1adc-a84e-4f35-97fe-\
c290c9c4f985"],

Cell["\<\
This involves reading three things, doing one multiplication, doing one \
addition and writing the result somewhere  \
\>", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}, {3.857034370867116*^9, 3.8570344778273244`*^9}, {
  3.8570345243636017`*^9, 
  3.85703463017999*^9}},ExpressionUUID->"1e18e55e-0efd-4dff-994e-\
0977b7f97303"],

Cell["\<\
FLOP = (3 memory reads, one addition, one multiplication, and one memory \
write)\
\>", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}, {3.857034370867116*^9, 
  3.8570344778273244`*^9}},ExpressionUUID->"b1cb9a99-f6e8-4e6c-bd85-\
30bf153a4238"],

Cell["Clusters of such CPUs", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 3.85703424541912*^9}, {3.857034643092847*^9, 
  3.8570346430992327`*^9}},ExpressionUUID->"f6604126-f9ce-4083-8030-\
20150d87c8dc"],

Cell["\<\
It becomes important to work out how to communicate and distribute work.\
\>", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 3.85703424541912*^9}, {3.8570346444911633`*^9, 
  3.8570346711794*^9}},ExpressionUUID->"65853ba9-05d7-4213-8be2-b988b284586a"]
}, Open  ]],

Cell[TextData[{
 "Now: A fused multiply add ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "*", "b"}], "+", "c"}], TraditionalForm]],ExpressionUUID->
  "5a988ea6-bbf0-456e-b9e6-ddf186e932c7"],
 " (abbreviated FMAD) is slightly faster than a single division; a single \
division is slightly faster than a single square root. GPUs and other similar \
hardware can do a lot (large multiples of 32) of organized floating point \
arithmetic at the same time."
}], "Item",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
   3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
   3.8570335565787597`*^9}, {3.857033676665005*^9, 3.8570337208327103`*^9}, {
   3.8570337902028494`*^9, 3.8570339749701033`*^9}, 3.857034099698583*^9, {
   3.857034715643942*^9, 3.8570347347473073`*^9}, {3.857034778595271*^9, 
   3.857034963746867*^9}, {3.857034996307283*^9, 
   3.857035002306774*^9}},ExpressionUUID->"f1062a92-bcf9-4c84-aea8-\
a04c3f0e942f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"FMAD", "<", 
    RowBox[{"\[Divide]", 
     RowBox[{"<", 
      SqrtBox[" "]}]}]}], TraditionalForm]],ExpressionUUID->
  "58a9eafa-a01d-4870-a14f-49e0ca2f60a9"],
 "  "
}], "Subitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335830433607`*^9, 3.857033583044363*^9}, {
  3.8570338980523577`*^9, 3.8570339080594063`*^9}, {3.857034103502041*^9, 
  3.857034103502041*^9}, {3.8570347499168997`*^9, 3.857034770924959*^9}, {
  3.857034971952306*^9, 
  3.857034972654355*^9}},ExpressionUUID->"d92a5bd4-8c85-4103-b08f-\
8ec4281f76b3"],

Cell["Cheap multiple core CPUs with GPUs.  ", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.8570341605939503`*^9}, {
  3.857034983739626*^9, 
  3.857034986986164*^9}},ExpressionUUID->"b6f288a6-a907-4ea8-9eab-\
62ba03f234f2"],

Cell["Yet another new level of communication.  ", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.8570341408381624`*^9}, {
  3.857034193603422*^9, 3.857034196866639*^9}, {3.85703501205896*^9, 
  3.8570350136995125`*^9}},ExpressionUUID->"f164cbcd-579f-48dd-ae8d-\
07f6cba88e4f"],

Cell["Arithmetic gets much cheaper and faster than memory.", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 3.857034199838582*^9}, {3.8570350185954385`*^9, 
  3.857035024858076*^9}},ExpressionUUID->"3266f3d6-d167-4adc-96e5-\
3515d3799fd6"],

Cell["More cache levels", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 3.857034227708213*^9}, {3.85703503240449*^9, 
  3.857035041539351*^9}},ExpressionUUID->"18eaafa8-4ac1-4e7f-9e39-\
a318c9317dbf"],

Cell["\<\
Counting the number of \[OpenCurlyDoubleQuote]linear algebraic\
\[CloseCurlyDoubleQuote] operations is a reasonable way estimate algorithmic \
work. \
\>", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
   3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
   3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, 
   3.857033637555616*^9, {3.857034000362562*^9, 3.857034046205467*^9}, {
   3.8570342579058647`*^9, 
   3.857034350475769*^9}},ExpressionUUID->"57d60b1c-69f2-4e99-887a-\
0af3a6ceb913"],

Cell[TextData[{
 "Almost all of our algorithms involve mostly ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", "\[LongLeftArrow]", "a"}], "*", "b"}], "+", "c"}], 
   TraditionalForm]],ExpressionUUID->"815ac938-ffbf-475d-99bd-f51460429be2"]
}], "Subsubitem",
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}, {3.857034370867116*^9, 3.8570344778273244`*^9}, {
  3.8570345243636017`*^9, 
  3.8570345805985465`*^9}},ExpressionUUID->"93df0fab-5880-4d1e-92b2-\
10d30da03352"],

Cell["\<\
This involves reading three things, doing one multiplication, doing one \
addition and writing the result somewhere  \
\>", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}, {3.857034370867116*^9, 3.8570344778273244`*^9}, {
  3.8570345243636017`*^9, 
  3.85703463017999*^9}},ExpressionUUID->"78b29947-c324-4e49-af3f-\
7375cd87067c"],

Cell["FLOP = # FMADs", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.8570335412171*^9, 
  3.8570335743448496`*^9}, {3.857034370867116*^9, 3.8570344778273244`*^9}, {
  3.8570350486588326`*^9, 
  3.857035051251586*^9}},ExpressionUUID->"a7ee9772-aa41-47b2-8931-\
0c78185383f1"],

Cell["Clusters of such CPUs", "Subitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 3.85703424541912*^9}, {3.857034643092847*^9, 
  3.8570346430992327`*^9}},ExpressionUUID->"ad94bd67-4ef3-41e6-8327-\
8b60e3c18e62"],

Cell["\<\
It is still important to work out how to communicate and distribute work.\
\>", "Subsubitem",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.},
 CellChangeTimes->{{3.856970824701024*^9, 3.856970902978777*^9}, {
  3.857033428201441*^9, 3.8570334994523*^9}, {3.85703353997215*^9, 
  3.857033539975142*^9}, {3.8570335840101414`*^9, 3.8570335871947384`*^9}, {
  3.8570336365169497`*^9, 3.8570336606572247`*^9}, {3.8570339824411626`*^9, 
  3.857033991346777*^9}, {3.8570340809386044`*^9, 3.857034131426888*^9}, {
  3.857034165819124*^9, 3.85703424541912*^9}, {3.8570346444911633`*^9, 
  3.8570346711794*^9}, {3.857035058899851*^9, 
  3.8570350653795614`*^9}},ExpressionUUID->"e31cf75e-531d-4bcf-8825-\
2f184a691037"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FLOPS", "Section",
 CellChangeTimes->{{3.847097898203796*^9, 3.847097949004158*^9}, {
  3.84709811825355*^9, 3.847098131845387*^9}, {3.847100057948483*^9, 
  3.847100070542018*^9}, {3.8471018011042843`*^9, 3.847101805095915*^9}, {
  3.847140821387518*^9, 3.847140823364403*^9}, {3.847140887506627*^9, 
  3.8471408963475122`*^9}, {3.847142140431596*^9, 3.847142158743582*^9}, {
  3.8569703751253977`*^9, 3.856970376316573*^9}, {3.857459065308287*^9, 
  3.857459065793136*^9}},ExpressionUUID->"6bbc12e2-b1d7-449a-92f2-\
f019a2e972d5"],

Cell[CellGroupData[{

Cell["C=A.B (text book algorithm)", "Subsection",
 CellChangeTimes->{{3.857035099307499*^9, 3.8570351015085397`*^9}, {
  3.8570351789236755`*^9, 3.8570351798740215`*^9}, {3.8570383715209246`*^9, 
  3.857038376389355*^9}},ExpressionUUID->"3969a68c-d38a-40b5-8322-\
4f597633156a"],

Cell[TextData[{
 "Assume that A is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", 
    SubscriptBox["n", "1"]}], TraditionalForm]],ExpressionUUID->
  "9b828946-69f0-4a1d-9af1-2e4b15ac51eb"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", " "}], TraditionalForm]],ExpressionUUID->
  "6d798b24-720a-4d6b-a918-4be1f0dc8b64"],
 "is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "1"], "*", 
    SubscriptBox["n", "2"]}], TraditionalForm]],ExpressionUUID->
  "2215fb05-d13c-4dff-94d2-b94f513aef0b"],
 " how many FLOPS in our standard algorithm? \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["A", 
        RowBox[{"i", ",", "k"}]], 
       SubscriptBox["B", 
        RowBox[{"k", ",", "j"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        SubscriptBox["n", "1"]}], "}"}]}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"325a5b73-384a-4864-a096-480ab0ba3cf7"],
 "\nWell the inner loop in the sum is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "2"], TraditionalForm]],ExpressionUUID->
  "a5500bac-b675-453a-bc2c-02a00aa907d2"],
 " FLOPS and we have to do it for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"i", " ", "in", " ", "1"}], ":", "m"}], TraditionalForm]],
  ExpressionUUID->"b744f617-610d-4dde-83c2-476302658135"],
 " and every ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"j", " ", "in", " ", "1"}], ":", 
    SubscriptBox["n", "2"]}], TraditionalForm]],ExpressionUUID->
  "ab222b2c-ad51-4637-95f9-30837df146f0"],
 "."
}], "Text",
 CellChangeTimes->{{3.8570351114200654`*^9, 
  3.8570353407863564`*^9}},ExpressionUUID->"17743444-88af-451f-94ce-\
a7dc7b2a06aa"],

Cell[TextData[{
 "The standard algorithm takes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "*", 
    SubscriptBox["n", "1"], "*", 
    SubscriptBox["n", "2"]}], TraditionalForm]],ExpressionUUID->
  "d04f5857-8aaa-4189-b17a-70e65675a3ca"],
 " FMADs or modern FLOPs."
}], "Text",
 CellChangeTimes->{{3.857035345859748*^9, 
  3.8570353849407997`*^9}},ExpressionUUID->"14807324-8f3d-4404-9361-\
7b6098eed28e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["C=A.B (Strassen and fancy Strassen-like algorithms)", "Subsection",
 CellChangeTimes->{{3.857035099307499*^9, 3.8570351015085397`*^9}, {
  3.8570351789236755`*^9, 3.8570351798740215`*^9}, {3.857038273441246*^9, 
  3.8570382792288675`*^9}, {3.8570383235384645`*^9, 3.8570383324375057`*^9}, {
  3.857038380781401*^9, 
  3.8570383837073545`*^9}},ExpressionUUID->"6539ec77-7f97-4eef-9991-\
8020dc6d2018"],

Cell[TextData[{
 "Assume that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    SuperscriptBox["2", "n"]}], TraditionalForm]],ExpressionUUID->
  "71f8c1c5-b406-4f6c-ac3b-5f6ac4506078"],
 " and A is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "m"}], TraditionalForm]],ExpressionUUID->
  "2de56748-00f5-4eb2-9689-78af22d4025d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", " "}], TraditionalForm]],ExpressionUUID->
  "386dfc2f-6825-4020-810e-fb25b80eb25e"],
 "is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "*", "m"}], TraditionalForm]],ExpressionUUID->
  "f5a00735-f31b-41ac-aeec-d734ac6048c4"],
 ".  There is a recursive algorithm that uses fewer multiplications\nthan the \
text book algorithm.  Partition A and B and C into four equally sized parts\n\
\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["C", "11"], 
        SubscriptBox["C", "12"]},
       {
        SubscriptBox["C", "21"], 
        SubscriptBox["C", "22"]}
      }], "\[NoBreak]", ")"}], "=", 
    RowBox[{"C", "=", 
     RowBox[{
      RowBox[{"A", ".", "B"}], "=", 
      RowBox[{
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           SubscriptBox["A", "11"], 
           SubscriptBox["A", "12"]},
          {
           SubscriptBox["A", "21"], 
           SubscriptBox["A", "22"]}
         }], "\[NoBreak]", ")"}], ".", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           SubscriptBox["B", "11"], 
           SubscriptBox["B", "12"]},
          {
           SubscriptBox["B", "21"], 
           SubscriptBox["B", "22"]}
         }], "\[NoBreak]", ")"}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "6e7ca741-ffc9-4edb-ad19-449ff4611dff"],
 "\nIn this partitioned form the textbook algorithm is\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      SubscriptBox["C", "12"], "=", 
      RowBox[{
       SubscriptBox["A", "11"], ".", 
       SubscriptBox["B", "11"]}], "+", 
      RowBox[{
       SubscriptBox["A", "12"], ".", 
       SubscriptBox["B", "21"]}]},
     {
      SubscriptBox["C", "12"], "=", 
      RowBox[{
       SubscriptBox["A", "11"], ".", 
       SubscriptBox["B", "12"]}], "+", 
      RowBox[{
       SubscriptBox["A", "12"], ".", 
       SubscriptBox["B", "22"]}]},
     {
      SubscriptBox["C", "21"], "=", 
      RowBox[{
       SubscriptBox["A", "21"], ".", 
       SubscriptBox["B", "11"]}], "+", 
      RowBox[{
       SubscriptBox["A", "22"], ".", 
       SubscriptBox["B", "21"]}]},
     {
      SubscriptBox["C", "22"], "=", 
      RowBox[{
       SubscriptBox["A", "21"], ".", 
       SubscriptBox["B", "12"]}], "+", 
      RowBox[{
       SubscriptBox["A", "22"], ".", 
       SubscriptBox["B", "22"]}]}
    }], TraditionalForm]],ExpressionUUID->
  "09765da7-2615-405f-93d9-255e21b41deb"],
 "\nOf course, this has the same flop count as above! However, if\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      SubscriptBox["S", "1"], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "11"], "+", 
         SubscriptBox["A", "22"]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["B", "11"], "+", 
         SubscriptBox["B", "22"]}], ")"}]}]},
     {
      SubscriptBox["S", "2"], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "21"], "+", 
         SubscriptBox["A", "22"]}], ")"}], ".", 
       SubscriptBox["B", "11"]}]},
     {
      SubscriptBox["S", "3"], "=", 
      RowBox[{
       SubscriptBox["A", "11"], ".", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["B", "12"], "-", 
         SubscriptBox["B", "22"]}], ")"}]}]},
     {
      SubscriptBox["S", "4"], "=", 
      RowBox[{
       SubscriptBox["A", "22"], ".", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["B", "21"], "-", 
         SubscriptBox["B", "11"]}], ")"}]}]},
     {
      SubscriptBox["S", "5"], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "11"], "+", 
         SubscriptBox["A", "12"]}], ")"}], ".", 
       SubscriptBox["B", "22"]}]},
     {
      SubscriptBox["S", "6"], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "21"], "+", 
         SubscriptBox["A", "11"]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["B", "11"], "+", 
         SubscriptBox["B", "12"]}], ")"}]}]},
     {
      SubscriptBox["S", "7"], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "12"], "-", 
         SubscriptBox["A", "22"]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["B", "21"], "+", 
         SubscriptBox["B", "22"]}], ")"}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "011c180a-7c0e-43e4-9e7d-cedd316eb191"],
 "\nthen \n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      SubscriptBox["C", "11"], "=", 
      RowBox[{
       SubscriptBox["S", "1"], "+", 
       SubscriptBox["S", "4"], "-", 
       SubscriptBox["S", "5"], "+", 
       SubscriptBox["S", "7"]}]},
     {
      SubscriptBox["C", "12"], "=", 
      RowBox[{
       SubscriptBox["S", "3"], "+", 
       SubscriptBox["S", "5"]}]},
     {
      SubscriptBox["C", "21"], "=", 
      RowBox[{
       SubscriptBox["S", "2"], "+", 
       SubscriptBox["S", "4"]}]},
     {
      SubscriptBox["C", "22"], "=", 
      RowBox[{
       SubscriptBox["S", "1"], "-", 
       SubscriptBox["S", "2"], "+", 
       SubscriptBox["S", "3"], "+", 
       SubscriptBox["S", "6"]}]}
    }], TraditionalForm]],ExpressionUUID->
  "635ab1a9-2235-4852-b329-648f05d93040"],
 "\n It is easy to check this by plugging in it is a lot harder to see how \
Strassen worked it out! It is also easy to implement and test it on random \
matrices!"
}], "Text",
 CellChangeTimes->{{3.8570351114200654`*^9, 3.8570353407863564`*^9}, {
  3.8570382972763724`*^9, 3.8570388063120813`*^9}, {3.857038868415894*^9, 
  3.8570393355738993`*^9}, {3.8570399707097664`*^9, 
  3.8570400186468887`*^9}},ExpressionUUID->"de74d5b0-cd53-44c6-9e53-\
dd1d021c9318"],

Cell[CellGroupData[{

Cell["Strassen Test", "Subsubsection",
 CellChangeTimes->{{3.857040342685955*^9, 
  3.857040348601755*^9}},ExpressionUUID->"9beb8f48-30e4-4092-bd39-\
ae9463d48e93"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   SuperscriptBox["2", "n"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B"}], "}"}], "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "m", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CTextBook", "=", 
   RowBox[{"A", ".", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"A11", "A12"},
      {"A21", "A22"}
     }], "\[NoBreak]", ")"}], "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"A", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"n", "-", "1"}]], ",", 
       SuperscriptBox["2", 
        RowBox[{"n", "-", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"B11", "B12"},
      {"B21", "B22"}
     }], "\[NoBreak]", ")"}], "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"B", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"n", "-", "1"}]], ",", 
       SuperscriptBox["2", 
        RowBox[{"n", "-", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A11", "+", "A22"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"B11", "+", "B22"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A21", "+", "A22"}], ")"}], ".", "B11"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3", "=", 
   RowBox[{"A11", ".", 
    RowBox[{"(", 
     RowBox[{"B12", "-", "B22"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4", "=", 
   RowBox[{"A22", ".", 
    RowBox[{"(", 
     RowBox[{"B21", "-", "B11"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S5", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A11", "+", "A12"}], ")"}], ".", "B22"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S6", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A21", "-", "A11"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"B11", "+", "B12"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S7", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A12", "-", "A22"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"B21", "+", "B22"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CStrassen", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"S1", "+", "S4", "-", "S5", "+", "S7"}], 
        RowBox[{"S3", "+", "S5"}]},
       {
        RowBox[{"S2", "+", "S4"}], 
        RowBox[{"S1", "-", "S2", "+", "S3", "+", "S6"}]}
      }], "\[NoBreak]", ")"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{
   RowBox[{"CTextBook", "-", "CStrassen"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8570393400791283`*^9, 3.857039412245265*^9}, {
   3.8570394678059835`*^9, 3.857039809598015*^9}, {3.857039844602459*^9, 
   3.8570398475572777`*^9}, {3.857039937397783*^9, 3.8570399601526504`*^9}, 
   3.8570403874419565`*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"afbd347b-340b-4c0a-8b80-b5aa7d08f516"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJzFfXdQVOnXJgZMoKKOioo5pzFhDgfDiAEVUDEnBiMYEIURUTHnhKijCOaM
YkIFI0YMIAICIgpNN9B0921UzI667Na3+8/W89vvqbpTO1VTPUPdeu97z3ve
E56T6rvPdZ1awsLCwuG//v2f/z22y6Xp9idey/T+swYOmZAr337N0HcYaBCL
//XP2//rN+RcgXbFCLP0D89urfgrkpLQ8Obes/mC1vltz59Rg6JyxG3FtMgq
fQ1S+Lr0x2Z7TbKj1PUp3T8pMm3GfafT1UxSJSL18fuKufC96Plqz+o4xJR6
IVu/OxVz/00rHn8l9Czf3CAVV4euf9BIkWUeunOF7/UiOZN2VeyZIU8fFz4O
HpoqCZ1cPrRsr5N1lS57/IjLlztDyk54PzlbhnsvVkpN0sunDfo7y/yNcD/m
A4+2ZYQq4nj0x9IbsQbpLllpE09nQzqgdXrs7hHQICJfamnuVmoaaJJ3aY71
os0KfJ6lp1p0rqNsiK/trsiBcLf133LzpUVYXKvGk7MgP/zjU9Kh/glFrlSc
HLahwCAfS0+MGWyjhe9Fv4ie6L1o/4huiB9ijnwyt880SWHYDOeIO3lScm/S
T7dtqTTd1PouxJ9ony1Oz+rS+mCiFPwYG1lar5GdqW9sYtYZ4PeiffpO7l/i
gkaRdTssKlR6ZJRDtTO+2vbPgc9PfOHT/q2/Sf6ZEbqwu3Wu7L2RHvEyKUGS
e5d27x+YJfr4SWeGD8uTv07+tbzMSwPcP/o7uu+InogPET+z9y4yxHWc9oAi
ztqb4YZos9hnBh4w9i6A67Pygf1F8iTYu+LQT8X1snd0/Jl6W4zi06bL2pyJ
CqQn+l60/8UdRnVovFaR7ePaR+fON4h7A+dg26camenTaWOd8jpJ/jrPpbxL
viyw/zJuRDmTlHK78XpIa5MMfu6Sm6VXZL572tga9820fMuM26LZvUORtG4h
k94eNMgKX/e33v2z4Xch/rfWfOm7sWuKTPr2R9Otp7TyZMDAER2+5sP7iPaP
zp2VD4gO6PlNF5xtEyqYpVKXLmmbfUzSOtMxZVOxPPi9W8u2etm7VdG99r+z
83SVfEmd51zu1o0M+F6kTzvdLvinw3NFFkTl17q1wShpLUb++euwDn4vq2dZ
fkD8ic4Fyasnnm8r6d7EyYDpw888KpMpw3/b4L5ioFFOpy5oUdMvQaxW96sV
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
y5WWvhU++2nk1uB+3X3DsZ3P8hWLYyN7gP07ul8oToTkNsIt2f5prF2H5PmF
jh0KLN6lSMuAmq4TShb5ddUH6nZmYD+arW9C+1SrLxCSJ4jPEZ+w9wLtH9kJ
rNxm/Xf0Xej+snKJxVVYfYfog/LJkRxA8T6IR/lNTZoSbJL9d65NClycK42a
zPELWJ+I8bHoGQ5HfXPkyaA356fXNsjd9Lgr91eaoLxCfV/Ze33epV3Je8N0
Mqnd1xFRvvlypHP7PVfq4XNh+Q29F+XFofNF8hzRGfEn28eJzRNGeB2bL8T2
T2DPBeEnbN51/BKr7tfHmsVQa7fF/CBFcr+18npozKf9enQuyO9g4+msP6tW
nBp9L+oDg+x/Nr+a5Vs2/4rlQ9aPY+MUaP+InqwdjuQqW9fD9tlG743qMsHm
QLRRojXall3vZks9T02yt0MErCNm+2yg+CC6d4jOJ996F4v6/kLSQ3qVc9qk
lbW255+nFsd8y9rhSF+w9WuIDsjuQn9H8gf1jUTyDfEzXS9Aygf0PDpfxJ+s
XmPlAztvha2LQeuw9GTxFvSL1mHjngjPR/cCxWsQP7C4HzoX5OciHAblU7H1
gCh+iuQMK3+Q3mfrI1C/mtzsi8Xm1zXLi/Ob51jueyOHOjhfN5qmQ79yZ5n9
BaZ4k7RvfSB71eI8udjln71z/0qB9wLJn1LznA6kt0oS6/W+LtNbZYun08jk
z/N5Pkd2DlvXgPhz46mIp8qIeHG/cNa6/9vXUnvWydoPfHCfXha/YuODrF3H
2rFoHbR/pKdYPmfxIrX6IagVT0d2FJvnycoNVl6x5077QQD3QOur1X8GyWH0
PIrLoPuF4qGsPc/GZ5Hf3W3IwLkt416JbbGOS61ScyRy/uijs4r+jupHkH+N
9oneC+dKkHKYrUdj+67A+ug7nlmf05Kltqdr/y8/ssVr/NJF7dpi+4HNH2Pr
I/67eu7//AL+sV47o35sTZOMP3rbOXq6Tn4afA151+7Rfa3ZOg7Et8j+RHnI
iN/YOWKsvELnheKVCAdWa74b2g+yo9g4CDufAtmBbHyfzT+EuDo4XxRXRfth
4xpITrJ2glrvZeu+1Zq/wMaJ0Dm2r9n8XXRkrmj7NN5377lBVtWtNvKjGeON
qI80G+9j7UaUZ4jozNZbLckedLv2OqPsja48eFSuRrKuuOSvnBkI5WSdJi1N
03bpZWiOQ4afxijFi63Z5bUNz01A54L8YnReiM7sPCMkN5CcQe9F9509X5S3
zMYL2Pl3iA5ofdRPm82LQ3Rm/QU2PoX4BOn98PT+G1Kb50vJ+RfLPbM3yfbE
pKOFMQrMW0B0RnyI9DiiA6Ibsk+QPcnGx5EeQfRk4/JsnhVrt7Bz9zwuP697
x02Re6XfNal4PV986lpVLanBc83Q96L9sP2I2Hgfuo9V7Mxz31cxy8DZ+dM/
rDHJhrtrBpWwx31yUD8TJK/UmreOftWKC7M4PIuHq4UjsfzP1mE97mG5pvyy
NEkdVyei00OdWMScLRkYhvFS9lzUsotYPoF1mku6/VyYoYi19S673RlmefrP
kB3mkbgvN9tXaufaX3+Pn2cW+5aTVrTQKWKV+N531G2M96J4JdoP60+huAlL
TxbfYPkH9Ulm5S07rxPZPygfBukRdO/Y+bOonwOy69j+oohvWb5C9Ef1U6y/
z/r1LG7G+qdq9Z1D94XtH8Lilqw/gr4X4c/sXDO23pa139B72X7jbL4ua4ew
dEP8z+ZLs3gR6z+i70X5k2z+M9r/mHcFtg0PpcqptxJVeZxOXKRzhY+3cd0u
ohviQ9R3Ua0+majOET2P9oPy8JGcR/FB9PcmV0MiJi9MlrZat7pd4rLFreaV
StGC7xHrJ7L2ObpHJc5Imecb86RB6XrxDwcZpc+H0IOZnXCfWNZfZvMVURyE
nZumVj4S4nO17HCWPuz6rD2D6IbmZSC/r/sOi9bHfRVZurxWbLC9QULaPPrx
s7kGnhfLz4gPkbzqderSifGWZvHpauuZOswkNx7X33PiCN8fD8lVtH+k79Dc
c7aPrlp8pdbcBxbfQ8+z/ZRQfR+rv1i/ia3jYOUkO0+HnefL2l1sXIDNR0Xy
ip0LA7/L0XXT5GFmqeDXLmzNdEUWmXQDGwXguAlrf7J5Zeh8/awub7MqZhbr
eSc3rxWTHN/bLaGbP/br0XtR/htrt7NymO3zyebxsv4Rog/Kg0Xfy+Z3sXWm
bD/hsXYFr5cdMUha0HOPtHKKGOzzOzbpzedXsHEHlO/K5kex8+VZ+YbOEd13
ln8O/0wJrJxlkOBrJ5JXFcn7Fa6XmzUfaabzr9Tq74G+l83HRvRH8sTjnm+J
4UMSpG6zuKtj72VJ54h+tc7n4Hle7Hmx/W0QPZF/wcbfWftKLXxArXms6Hm0
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
8/8BP0Ug/Q==
    "], {{0, 0}, {64, 64}}, {0, 1}], {
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 64}, {64, 64}}, {{0, 63}, {64, 63}}, {{0, 62}, {64, 
       62}}, {{0, 61}, {64, 61}}, {{0, 60}, {64, 60}}, {{0, 59}, {64, 59}}, {{
       0, 58}, {64, 58}}, {{0, 57}, {64, 57}}, {{0, 56}, {64, 56}}, {{0, 
       55}, {64, 55}}, {{0, 54}, {64, 54}}, {{0, 53}, {64, 53}}, {{0, 52}, {
       64, 52}}, {{0, 51}, {64, 51}}, {{0, 50}, {64, 50}}, {{0, 49}, {64, 
       49}}, {{0, 48}, {64, 48}}, {{0, 47}, {64, 47}}, {{0, 46}, {64, 46}}, {{
       0, 45}, {64, 45}}, {{0, 44}, {64, 44}}, {{0, 43}, {64, 43}}, {{0, 
       42}, {64, 42}}, {{0, 41}, {64, 41}}, {{0, 40}, {64, 40}}, {{0, 39}, {
       64, 39}}, {{0, 38}, {64, 38}}, {{0, 37}, {64, 37}}, {{0, 36}, {64, 
       36}}, {{0, 35}, {64, 35}}, {{0, 34}, {64, 34}}, {{0, 33}, {64, 33}}, {{
       0, 32}, {64, 32}}, {{0, 31}, {64, 31}}, {{0, 30}, {64, 30}}, {{0, 
       29}, {64, 29}}, {{0, 28}, {64, 28}}, {{0, 27}, {64, 27}}, {{0, 26}, {
       64, 26}}, {{0, 25}, {64, 25}}, {{0, 24}, {64, 24}}, {{0, 23}, {64, 
       23}}, {{0, 22}, {64, 22}}, {{0, 21}, {64, 21}}, {{0, 20}, {64, 20}}, {{
       0, 19}, {64, 19}}, {{0, 18}, {64, 18}}, {{0, 17}, {64, 17}}, {{0, 
       16}, {64, 16}}, {{0, 15}, {64, 15}}, {{0, 14}, {64, 14}}, {{0, 13}, {
       64, 13}}, {{0, 12}, {64, 12}}, {{0, 11}, {64, 11}}, {{0, 10}, {64, 
       10}}, {{0, 9}, {64, 9}}, {{0, 8}, {64, 8}}, {{0, 7}, {64, 7}}, {{0, 
       6}, {64, 6}}, {{0, 5}, {64, 5}}, {{0, 4}, {64, 4}}, {{0, 3}, {64, 
       3}}, {{0, 2}, {64, 2}}, {{0, 1}, {64, 1}}, {{0, 0}, {64, 0}}}],
      Antialiasing->False]}, 
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 64}}, {{1, 0}, {1, 64}}, {{2, 0}, {2, 64}}, {{3, 
       0}, {3, 64}}, {{4, 0}, {4, 64}}, {{5, 0}, {5, 64}}, {{6, 0}, {6, 
       64}}, {{7, 0}, {7, 64}}, {{8, 0}, {8, 64}}, {{9, 0}, {9, 64}}, {{10, 
       0}, {10, 64}}, {{11, 0}, {11, 64}}, {{12, 0}, {12, 64}}, {{13, 0}, {13,
        64}}, {{14, 0}, {14, 64}}, {{15, 0}, {15, 64}}, {{16, 0}, {16, 
       64}}, {{17, 0}, {17, 64}}, {{18, 0}, {18, 64}}, {{19, 0}, {19, 64}}, {{
       20, 0}, {20, 64}}, {{21, 0}, {21, 64}}, {{22, 0}, {22, 64}}, {{23, 
       0}, {23, 64}}, {{24, 0}, {24, 64}}, {{25, 0}, {25, 64}}, {{26, 0}, {26,
        64}}, {{27, 0}, {27, 64}}, {{28, 0}, {28, 64}}, {{29, 0}, {29, 
       64}}, {{30, 0}, {30, 64}}, {{31, 0}, {31, 64}}, {{32, 0}, {32, 64}}, {{
       33, 0}, {33, 64}}, {{34, 0}, {34, 64}}, {{35, 0}, {35, 64}}, {{36, 
       0}, {36, 64}}, {{37, 0}, {37, 64}}, {{38, 0}, {38, 64}}, {{39, 0}, {39,
        64}}, {{40, 0}, {40, 64}}, {{41, 0}, {41, 64}}, {{42, 0}, {42, 
       64}}, {{43, 0}, {43, 64}}, {{44, 0}, {44, 64}}, {{45, 0}, {45, 64}}, {{
       46, 0}, {46, 64}}, {{47, 0}, {47, 64}}, {{48, 0}, {48, 64}}, {{49, 
       0}, {49, 64}}, {{50, 0}, {50, 64}}, {{51, 0}, {51, 64}}, {{52, 0}, {52,
        64}}, {{53, 0}, {53, 64}}, {{54, 0}, {54, 64}}, {{55, 0}, {55, 
       64}}, {{56, 0}, {56, 64}}, {{57, 0}, {57, 64}}, {{58, 0}, {58, 64}}, {{
       59, 0}, {59, 64}}, {{60, 0}, {60, 64}}, {{61, 0}, {61, 64}}, {{62, 
       0}, {62, 64}}, {{63, 0}, {63, 64}}, {{64, 0}, {64, 64}}}],
      Antialiasing->False]}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{63.5, 
       FormBox["1", TraditionalForm]}, {44.5, 
       FormBox["20", TraditionalForm]}, {24.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["64", TraditionalForm]}}, {{63.5, 
       FormBox["1", TraditionalForm]}, {44.5, 
       FormBox["20", TraditionalForm]}, {24.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["64", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {63.5, 
       FormBox["64", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {63.5, 
       FormBox["64", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.857039794118984*^9, 3.857039810604553*^9}, 
   3.8570398639354277`*^9, {3.857039939225357*^9, 3.8570399607036057`*^9}, {
   3.857827436630523*^9, 3.857827465894226*^9}, {3.8578349769700603`*^9, 
   3.8578349987120466`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"f7f483cd-9e6f-40e2-9ef8-b569f21836ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{"CTextBook", "-", "CStrassen"}], "]"}]], "Input",
 CellChangeTimes->{{3.8578350220063944`*^9, 3.8578350261551046`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"39de70b6-f39c-40a0-b6c9-6acf506b04e1"],

Cell[BoxData["2.1569010860685865`*^-14"], "Output",
 CellChangeTimes->{3.8578350266479716`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"0db92f48-1d6b-43d9-beb6-683d33898034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Strassen Complexity \t ", "Subsubsection",
 CellChangeTimes->{{3.8570404064393077`*^9, 3.8570404256628137`*^9}, {
  3.857040778911889*^9, 
  3.8570407867715344`*^9}},ExpressionUUID->"b9560d52-3c08-4e55-8605-\
92e04babdc50"],

Cell[TextData[{
 "Through some magic Strassen managed to do the big ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "n"], "\[Times]", 
    SuperscriptBox["2", "n"]}], TraditionalForm]],ExpressionUUID->
  "fe1b7e28-722a-45ff-b9cd-7093eca934e0"],
 " matrix multiplication using 7 small ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"n", "-", "1"}]], "\[Times]", 
    SuperscriptBox["2", 
     RowBox[{"n", "-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "aacd2e72-aa17-49ef-8b7a-a43f0e3f1602"],
 " matrix matrix multiplications and 18 matrix-matrix additions rather than \
the 8 multiplications and 4 additions in the partitioned textbook algorithm!  \
The Strassen algorithm does the computation with more additions and fewer \
multiplications. The only way this is a good deal is if we are on computer \
with very fast addition and slower multiplication. "
}], "Text",
 CellChangeTimes->{{3.8570403949376574`*^9, 3.8570403973747635`*^9}, {
  3.857040428046953*^9, 3.857040558575054*^9}, {3.857040591565323*^9, 
  3.8570407708494525`*^9}},ExpressionUUID->"715b3a26-3bf9-48c8-9858-\
f5cb174cd467"],

Cell[TextData[{
 "If we ignore the additions and write s(n) for the number of multiplications \
in the Strassen algorithm for multiplying ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "n"], "\[Times]", 
    SuperscriptBox["2", "n"]}], TraditionalForm]],ExpressionUUID->
  "7ca10047-f014-41fc-a533-e2bfec84000f"],
 " matrices we see that we have worked out that\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "(", "n", ")"}], "=", 
    RowBox[{"7", "*", 
     RowBox[{"s", "(", 
      RowBox[{"n", "-", "1"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "6e773638-46b4-4a08-ac75-bc30ac923153"],
 "\nAll we need now is a base case! The algorithm takes 7 multiplications for \
a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "1"], "\[Times]", 
    SuperscriptBox["2", "1"]}], TraditionalForm]],ExpressionUUID->
  "c0592e81-8023-4775-8dc6-a656b768f43d"],
 ". In other words, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", 
     RowBox[{"(", "1", ")"}]}], "=", "7"}], TraditionalForm]],ExpressionUUID->
  "b0e14d06-6045-446b-ae30-d431fc17e303"],
 ". The solution of this recursive equation is simply ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "[", "n", "]"}], "=", 
    SuperscriptBox["7", "n"]}], TraditionalForm]],ExpressionUUID->
  "b44754c7-3848-4343-b063-7a85856f580d"],
 ". Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    SuperscriptBox["2", "n"]}], TraditionalForm]],ExpressionUUID->
  "94dc157e-4e3a-4162-b740-49e2af457c99"],
 " we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", 
    RowBox[{
     SubscriptBox["ln", "2"], "(", "m", ")"}]}], TraditionalForm]],
  ExpressionUUID->"3c98b1f8-db65-4b4f-bce6-1bcbeaf23447"],
 " and we find out that Strassen\[CloseCurlyQuote]s algorithm involves\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["7", 
     RowBox[{
      SubscriptBox["ln", "2"], "(", "m", ")"}]], "=", 
    RowBox[{
     SuperscriptBox["m", 
      RowBox[{
       RowBox[{"Log", "[", "7", "]"}], "/", 
       RowBox[{"Log", "[", "2", "]"}]}]], "\[TildeTilde]", 
     SuperscriptBox["m", "2.80735"]}]}], TraditionalForm]],ExpressionUUID->
  "bb78e5ab-b217-453c-9200-1a9bb20a0fd8"],
 "\nmultiplications! There are more complicated versions with lower \
exponents! A wiki page with a hopefully updating graph of the current record \
is at https://en.wikipedia.org/wiki/Computational_complexity_of_matrix_\
multiplication.\nThe current record seems to be ",
 Cell[BoxData[
  FormBox["2.3728596", TraditionalForm]],ExpressionUUID->
  "bc3eb21c-bc0e-461c-89ab-750c1dbd0576"],
 ".  There is a conjecture that there are algorithms with exponent ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "+", "\[Epsilon]"}], TraditionalForm]],ExpressionUUID->
  "bb6bf402-e16a-45ea-8234-1d64f7249cdb"],
 " for any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "871f2ebf-ffb9-4a81-8f72-3259d3332207"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.8570407988652506`*^9, 3.8570411333167744`*^9}, {
  3.857041207459833*^9, 3.857041361928669*^9}, {3.85704140589793*^9, 
  3.8570414734946194`*^9}, {3.8570415496732273`*^9, 3.85704158591984*^9}, {
  3.857041771729212*^9, 3.8570418994122224`*^9}, {3.857818172887584*^9, 
  3.8578181798704395`*^9}},ExpressionUUID->"636ecd54-aa3c-415c-8261-\
291e62f20765"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FLOPS in Algorithms", "Section",
 CellChangeTimes->{{3.858087443620123*^9, 
  3.8580874528944664`*^9}},ExpressionUUID->"9e2d6a23-a165-4095-90c4-\
1919ddc154fa"],

Cell[CellGroupData[{

Cell["Useful Facts", "Subsection",
 CellChangeTimes->{{3.8570369850684032`*^9, 
  3.8570369904772806`*^9}},ExpressionUUID->"030015fe-bb1f-41a2-a130-\
c4506fa4e474"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], "i"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", 
      RowBox[{"m", "(", 
       RowBox[{"m", "+", "1"}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       SuperscriptBox["m", "2"]}], "+", 
      RowBox[{"O", "(", "m", ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "6661ceb3-46b6-40e5-8110-57b1020e8a61"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], 
     SuperscriptBox["i", "2"]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "6"}], " ", 
      RowBox[{"m", "(", 
       RowBox[{"m", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", "m"}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "6"}], " ", 
       SuperscriptBox["m", "3"]}], "+", 
      RowBox[{"O", "(", 
       SuperscriptBox["m", "2"], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"56171ca2-62b1-416b-8a22-bdd8cbb056dd"]
}], "Text",
 CellChangeTimes->{{3.8570370154278173`*^9, 3.857037114448157*^9}, {
  3.8580874109114923`*^9, 
  3.8580874130671864`*^9}},ExpressionUUID->"2aeacc37-2388-41c8-8520-\
a618e69d8a6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "m", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.857036964136421*^9, 3.8570370060435433`*^9}, {
  3.858087462244154*^9, 3.85808746558296*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5fe37a47-6eca-4fc6-99ed-9b4b476646c7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "m", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "m"}], ")"}]}]], "Output",
 CellChangeTimes->{3.857036973081993*^9, 3.85703700681028*^9, 
  3.858087425934905*^9, 3.8580874661695013`*^9, 3.8580915821236997`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e231d38b-477d-4ac6-a4e5-0e18ad4c23f1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", "m", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "m"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "m"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.857036973081993*^9, 3.85703700681028*^9, 
  3.858087425934905*^9, 3.8580874661695013`*^9, 3.858091582134787*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b3d2d5f9-e6e6-481b-88a5-585df030a7d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gram Schmidt: Algorithm 7.1", "Subsection",
 CellChangeTimes->{{3.857035099307499*^9, 3.8570351015085397`*^9}, {
  3.8570351789236755`*^9, 3.8570351798740215`*^9}, {3.8570354115644355`*^9, 
  3.8570354514767714`*^9}},ExpressionUUID->"4bfa0a25-c755-47eb-ab1f-\
d45d477c08ae"],

Cell[TextData[{
 "Assume that A is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "14f8a63a-7c16-4edf-8caa-ebd4d9ec13a2"],
 " and look at the algorithm on p51"
}], "Text",
 CellChangeTimes->{{3.8570351114200654`*^9, 3.8570353407863564`*^9}, {
  3.8570354592601366`*^9, 
  3.857035534586482*^9}},ExpressionUUID->"8d182ecb-0053-4391-8555-\
89ad2fb0983a"],

Cell[TextData[{
 "for j in 1:n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "j"], "=", 
    SubscriptBox["a", "j"]}], TraditionalForm]],ExpressionUUID->
  "e1771ad3-97e6-480e-839d-85ecf48072d2"],
 "\n\tfor i in 1:j-1\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["r", "ij"], "=", 
     RowBox[{"<", 
      SubscriptBox["q", "i"]}]}], ",", 
    RowBox[{
     SubscriptBox["v", "j"], ">"}]}], TraditionalForm]],ExpressionUUID->
  "50aa4a00-c2c2-4103-bf4d-36c455a43354"],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "j"], "=", 
    RowBox[{
     SubscriptBox["v", "j"], "-", 
     RowBox[{
      SubscriptBox["r", "ij"], 
      SubscriptBox["q", "i"]}]}]}], TraditionalForm]],ExpressionUUID->
  "1f0a0599-9ff3-4cbb-ace1-1909ef6f3f02"],
 "\n\tend\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "jj"], "=", 
    RowBox[{"||", 
     SubscriptBox["v", "j"], 
     SubscriptBox["||", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "bcb855d7-680e-421c-9806-61b0a074a153"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "j"], "=", 
    RowBox[{
     SubscriptBox["v", "j"], "/", 
     SubscriptBox["r", 
      RowBox[{"j", ",", "j"}]]}]}], TraditionalForm]],ExpressionUUID->
  "811c6a83-e41d-4873-a783-f26e3dc0f560"],
 "\nend"
}], "Program",
 CellChangeTimes->{{3.8570355435647697`*^9, 3.857035734020472*^9}, {
  3.858084301891696*^9, 
  3.858084302450755*^9}},ExpressionUUID->"85e6e8f8-410c-471d-a780-\
dbd8475d12c4"],

Cell["Lets count the FMADs. ", "Text",
 CellChangeTimes->{{3.8570351114200654`*^9, 3.8570353407863564`*^9}, {
  3.8570354592601366`*^9, 3.857035500419238*^9}, {3.857035742915073*^9, 
  3.8570357909715157`*^9}},ExpressionUUID->"bf45fbc7-dad8-4be7-869f-\
2272c64354ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cholesky: Algorithm 23.1", "Subsection",
 CellChangeTimes->{{3.857035099307499*^9, 3.8570351015085397`*^9}, {
  3.8570351789236755`*^9, 3.8570351798740215`*^9}, {3.8570354115644355`*^9, 
  3.8570354514767714`*^9}, {3.857334957684594*^9, 
  3.857334969011973*^9}},ExpressionUUID->"299d07be-d263-454e-b2d4-\
e0d9efc8f780"],

Cell[TextData[{
 "Assume that A is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "m"}], TraditionalForm]],ExpressionUUID->
  "796b1586-e648-428c-894c-463f7e2fa8b7"],
 " and SPD and look at the algorithm on p51"
}], "Text",
 CellChangeTimes->{{3.8570351114200654`*^9, 3.8570353407863564`*^9}, {
  3.8570354592601366`*^9, 3.857035534586482*^9}, {3.8573349756790113`*^9, 
  3.857334978892256*^9}},ExpressionUUID->"046bd0d5-e699-458b-903d-\
83304692340d"],

Cell[TextData[{
 "R= copy(A)\nfor k in 1:m\n\tfor j in (k+1):m\n\t\tR[j,j:m] = R[j,j:m] - ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"k", ",", 
      RowBox[{"j", ":", "m"}]}], "]"}], "*", 
    RowBox[{
     RowBox[{
      OverscriptBox["R", "_"], "[", 
      RowBox[{"k", ",", "j"}], "]"}], "/", 
     RowBox[{"R", "[", 
      RowBox[{"k", ",", "k"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "e7ba4083-3017-4350-a16b-63c488891d09"],
 "\n\t",
 Cell[BoxData[
  FormBox["end", TraditionalForm]],ExpressionUUID->
  "efc8f645-fbe4-40c1-a9dc-063e8889c78a"],
 "\n\tR[k,k:m] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"k", ",", 
      RowBox[{"k", ":", "m"}]}], "]"}], "/", 
    SqrtBox[
     RowBox[{"R", "[", 
      RowBox[{"k", ",", "k"}], "]"}]]}], TraditionalForm]],ExpressionUUID->
  "ed8db5bd-e268-4a26-9b98-08c95f5e86e1"],
 "\nend"
}], "Program",
 CellChangeTimes->{{3.8570355435647697`*^9, 3.857035734020472*^9}, {
  3.857335002556864*^9, 3.857335124545216*^9}, {3.857335188705245*^9, 
  3.857335292892282*^9}, {3.8580873170438614`*^9, 
  3.8580873201370783`*^9}},ExpressionUUID->"cb8b1f76-7e88-4bdd-a20d-\
fd255cd1683f"],

Cell["Lets count the FMADs. ", "Text",
 CellChangeTimes->{{3.8570351114200654`*^9, 3.8570353407863564`*^9}, {
  3.8570354592601366`*^9, 3.857035500419238*^9}, {3.857035742915073*^9, 
  3.8570357909715157`*^9}},ExpressionUUID->"72b22e58-0b29-406b-8f9a-\
8c59dc58d899"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1010.4, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association[
 "PresenterSettings" -> Association["Dialogs" -> {}], "TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"79424b40-85cf-4607-b3a9-d4ac53587306"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 714, 12, 184, "Title",ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],
Cell[1297, 36, 494, 10, 184, "Text",ExpressionUUID->"b94a9251-c74e-46fc-8051-286823e005ef"],
Cell[CellGroupData[{
Cell[1816, 50, 540, 9, 108, "Item",ExpressionUUID->"4a7391a0-91d4-4c6d-bc70-0cccab529e38"],
Cell[CellGroupData[{
Cell[2381, 63, 610, 17, 41, "Subitem",ExpressionUUID->"ef297dd5-4e17-407c-969d-0b5877a85872"],
Cell[2994, 82, 474, 8, 40, "Subitem",ExpressionUUID->"3be9ee9f-4b4a-4102-b63a-232c1449d227",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[3471, 92, 489, 9, 69, "Subitem",ExpressionUUID->"d543564e-83d5-4038-9c04-a77c10ee3184",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[3963, 103, 265, 4, 40, "Subitem",ExpressionUUID->"7b991d17-e793-481a-8814-b1cde05128e1"]
}, Open  ]],
Cell[4243, 110, 753, 15, 138, "Item",ExpressionUUID->"a47ad061-8209-426c-81f7-982af3c813f1"],
Cell[CellGroupData[{
Cell[5021, 129, 643, 18, 41, "Subitem",ExpressionUUID->"17051c32-d349-4ebf-b732-43eab74ebc4b"],
Cell[5667, 149, 497, 7, 40, "Subitem",ExpressionUUID->"8415145c-1c57-499b-977e-3c73ea383972",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[6167, 158, 607, 11, 99, "Subitem",ExpressionUUID->"a7248d06-6ac5-47fb-a078-a3ce2475b2c0",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[6777, 171, 268, 4, 40, "Subsubitem",ExpressionUUID->"921d3fba-440d-4307-a3a1-978d3b7f5000"]
}, Open  ]],
Cell[7060, 178, 775, 15, 138, "Item",ExpressionUUID->"30a04cc6-d387-43f7-9e98-875b84e182ec"],
Cell[CellGroupData[{
Cell[7860, 197, 679, 18, 41, "Subitem",ExpressionUUID->"fcca6e77-a498-4828-b091-cc8c2539b237"],
Cell[8542, 217, 574, 10, 40, "Subitem",ExpressionUUID->"4bc34298-79c0-4cb1-8a2d-5d0f5b053dca",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[9119, 229, 588, 9, 40, "Subsubitem",ExpressionUUID->"eaabb6fb-e1d0-41d3-9d5a-79b9673a871c",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[9710, 240, 603, 9, 40, "Subsubitem",ExpressionUUID->"9041f4da-cbfc-4210-8486-19b9f25a866e",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[10316, 251, 583, 9, 40, "Subsubitem",ExpressionUUID->"b6390b81-675a-4b66-b019-77469c1351ba",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[10902, 262, 635, 12, 69, "Subitem",ExpressionUUID->"6668efe6-5d7e-46d0-8dfa-046bd94f93e6",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[11540, 276, 603, 14, 40, "Subsubitem",ExpressionUUID->"a76e1adc-a84e-4f35-97fe-c290c9c4f985"],
Cell[12146, 292, 528, 10, 69, "Subsubitem",ExpressionUUID->"1e18e55e-0efd-4dff-994e-0977b7f97303",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[12677, 304, 442, 9, 40, "Subsubitem",ExpressionUUID->"b1cb9a99-f6e8-4e6c-bd85-30bf153a4238",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[13122, 315, 620, 9, 40, "Subitem",ExpressionUUID->"f6604126-f9ce-4083-8030-20150d87c8dc",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[13745, 326, 678, 10, 40, "Subsubitem",ExpressionUUID->"65853ba9-05d7-4213-8be2-b988b284586a",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}]
}, Open  ]],
Cell[14438, 339, 974, 19, 138, "Item",ExpressionUUID->"f1062a92-bcf9-4c84-aea8-a04c3f0e942f"],
Cell[CellGroupData[{
Cell[15437, 362, 704, 17, 41, "Subitem",ExpressionUUID->"d92a5bd4-8c85-4103-b08f-8ec4281f76b3"],
Cell[16144, 381, 591, 9, 40, "Subitem",ExpressionUUID->"b6f288a6-a907-4ea8-9eab-62ba03f234f2",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[16738, 392, 645, 9, 40, "Subsubitem",ExpressionUUID->"f164cbcd-579f-48dd-ae8d-07f6cba88e4f",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[17386, 403, 655, 9, 40, "Subsubitem",ExpressionUUID->"3266f3d6-d167-4adc-96e5-3515d3799fd6",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[18044, 414, 617, 9, 40, "Subsubitem",ExpressionUUID->"18eaafa8-4ac1-4e7f-9e39-a318c9317dbf",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[18664, 425, 635, 12, 69, "Subitem",ExpressionUUID->"57d60b1c-69f2-4e99-887a-0af3a6ceb913",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[19302, 439, 603, 14, 40, "Subsubitem",ExpressionUUID->"93df0fab-5880-4d1e-92b2-10d30da03352"],
Cell[19908, 455, 528, 10, 69, "Subsubitem",ExpressionUUID->"78b29947-c324-4e49-af3f-7375cd87067c",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[20439, 467, 418, 7, 40, "Subsubitem",ExpressionUUID->"a7ee9772-aa41-47b2-8931-0c78185383f1",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[20860, 476, 620, 9, 40, "Subitem",ExpressionUUID->"ad94bd67-4ef3-41e6-8327-8b60e3c18e62",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}],
Cell[21483, 487, 732, 12, 40, "Subsubitem",ExpressionUUID->"e31cf75e-531d-4bcf-8825-2f184a691037",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15100.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22264, 505, 538, 8, 97, "Section",ExpressionUUID->"6bbc12e2-b1d7-449a-92f2-f019a2e972d5"],
Cell[CellGroupData[{
Cell[22827, 517, 278, 4, 72, "Subsection",ExpressionUUID->"3969a68c-d38a-40b5-8322-4f597633156a"],
Cell[23108, 523, 1776, 58, 152, "Text",ExpressionUUID->"17743444-88af-451f-94ce-a7dc7b2a06aa"],
Cell[24887, 583, 406, 12, 50, "Text",ExpressionUUID->"14807324-8f3d-4404-9361-7b6098eed28e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25330, 600, 406, 6, 72, "Subsection",ExpressionUUID->"6539ec77-7f97-4eef-9991-8020dc6d2018"],
Cell[25739, 608, 6078, 201, 765, "Text",ExpressionUUID->"de74d5b0-cd53-44c6-9e53-dd1d021c9318"],
Cell[CellGroupData[{
Cell[31842, 813, 164, 3, 57, "Subsubsection",ExpressionUUID->"9beb8f48-30e4-4092-bd39-ae9463d48e93"],
Cell[CellGroupData[{
Cell[32031, 820, 3538, 114, 550, "Input",ExpressionUUID->"afbd347b-340b-4c0a-8b80-b5aa7d08f516"],
Cell[35572, 936, 22855, 379, 564, "Output",ExpressionUUID->"f7f483cd-9e6f-40e2-9ef8-b569f21836ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58464, 1320, 245, 4, 42, "Input",ExpressionUUID->"39de70b6-f39c-40a0-b6c9-6acf506b04e1"],
Cell[58712, 1326, 174, 2, 48, "Output",ExpressionUUID->"0db92f48-1d6b-43d9-beb6-683d33898034"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58935, 1334, 229, 4, 57, "Subsubsection",ExpressionUUID->"b9560d52-3c08-4e55-8605-92e04babdc50"],
Cell[59167, 1340, 1149, 26, 217, "Text",ExpressionUUID->"715b3a26-3bf9-48c8-9858-f5cb174cd467"],
Cell[60319, 1368, 3361, 91, 418, "Text",ExpressionUUID->"636ecd54-aa3c-415c-8261-291e62f20765"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63741, 1466, 166, 3, 97, "Section",ExpressionUUID->"9e2d6a23-a165-4095-90c4-1919ddc154fa"],
Cell[CellGroupData[{
Cell[63932, 1473, 164, 3, 72, "Subsection",ExpressionUUID->"030015fe-bb1f-41a2-a130-c4506fa4e474"],
Cell[64099, 1478, 1352, 45, 79, "Text",ExpressionUUID->"2aeacc37-2388-41c8-8520-a618e69d8a6c"],
Cell[CellGroupData[{
Cell[65476, 1527, 557, 13, 104, "Input",ExpressionUUID->"5fe37a47-6eca-4fc6-99ed-9b4b476646c7"],
Cell[66036, 1542, 342, 7, 67, "Output",ExpressionUUID->"e231d38b-477d-4ac6-a4e5-0e18ad4c23f1"],
Cell[66381, 1551, 422, 10, 68, "Output",ExpressionUUID->"b3d2d5f9-e6e6-481b-88a5-585df030a7d8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66852, 1567, 280, 4, 72, "Subsection",ExpressionUUID->"4bfa0a25-c755-47eb-ab1f-d45d477c08ae"],
Cell[67135, 1573, 406, 11, 50, "Text",ExpressionUUID->"8d182ecb-0053-4391-8555-89ad2fb0983a"],
Cell[67544, 1586, 1529, 54, 271, "Program",ExpressionUUID->"85e6e8f8-410c-471d-a780-dbd8475d12c4"],
Cell[69076, 1642, 267, 4, 50, "Text",ExpressionUUID->"bf45fbc7-dad8-4be7-869f-2272c64354ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69380, 1651, 326, 5, 72, "Subsection",ExpressionUUID->"299d07be-d263-454e-b2d4-e0d9efc8f780"],
Cell[69709, 1658, 462, 11, 50, "Text",ExpressionUUID->"046bd0d5-e699-458b-903d-83304692340d"],
Cell[70174, 1671, 1201, 36, 218, "Program",ExpressionUUID->"cb8b1f76-7e88-4bdd-a20d-fd255cd1683f"],
Cell[71378, 1709, 267, 4, 50, "Text",ExpressionUUID->"72b22e58-0b29-406b-8f9a-8c59dc58d899"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

