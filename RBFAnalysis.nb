(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    510649,       9261]
NotebookOptionsPosition[    509020,       9223]
NotebookOutlinePosition[    509653,       9244]
CellTagsIndexPosition[    509610,       9241]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["RBF Limits", "Title",
 CellChangeTimes->{{3.8465884180627756`*^9, 3.846588429089326*^9}, {
  3.84666883912605*^9, 3.846668864267633*^9}, {3.8826172645175605`*^9, 
  3.8826172694218645`*^9}, {3.882619601837344*^9, 3.882619604388424*^9}, {
  3.883392158871036*^9, 3.883392176290826*^9}, {3.8838069838038483`*^9, 
  3.883806998831891*^9}, {3.8888342092107573`*^9, 
  3.8888342124178658`*^9}},ExpressionUUID->"bb443c9e-1a1c-437e-b10c-\
400e63a30bb8"],

Cell["\<\
The plan is to see what NLA can do with an RBF matrix. You can see (and fix) \
the dominant low rank structure easily\
\>", "Text",
 CellChangeTimes->{{3.883807005165236*^9, 3.8838071735709867`*^9}, {
  3.883807236544394*^9, 3.883807492749707*^9}, {3.883808340287472*^9, 
  3.8838083414578323`*^9}, {3.8888342195292544`*^9, 3.8888342212009087`*^9}, {
  3.888834253217886*^9, 3.888834263264765*^9}, {3.8888351247844534`*^9, 
  3.888835160962641*^9}},ExpressionUUID->"d9789bdb-8585-4f08-8d2b-\
964c5fd128ad"],

Cell[CellGroupData[{

Cell[TextData[{
 "In 2D there is a drop off at ",
 Cell[BoxData[
  FormBox[
   SqrtBox["m"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d97792ba-6faf-4afc-afd4-2e118ea00472"]
}], "Section",
 CellChangeTimes->{{3.888835700888873*^9, 
  3.8888357185311723`*^9}},ExpressionUUID->"7ab91e85-c165-4f8d-8bc3-\
c05a0994af52"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   SuperscriptBox["10", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RankOne", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "m"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "m"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xs", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", "\[Epsilon]_", "]"}], "[", "r_", "]"}], ":=", 
  SuperscriptBox["E", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", " ", "r"}], ")"}], 
     "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", "[", "\[Epsilon]", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "[", "\[Epsilon]", "]"}], "[", 
      SuperscriptBox[
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"xs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "-", 
         RowBox[{
         "xs", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
        "]"}], "2"], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "m"}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{"\[Epsilon]s", "=", 
  SuperscriptBox["10.0", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"A", "[", "\[Epsilon]", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "\[Epsilon]s"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "18"}]], ",", "m"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", "\[Epsilon]s"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox["m"], 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "1.0", ",", "1.2"}], "}"}]}], ",", 
         "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{
           RowBox[{"A", "[", "\[Epsilon]", "]"}], "-", "RankOne"}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "\[Epsilon]s"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "18"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "1"}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", "\[Epsilon]s"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox["m"], 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "1.0", ",", "1.2"}], "}"}]}], ",", 
         "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888834269010436*^9, 3.8888343412038927`*^9}, {
   3.888834392411357*^9, 3.8888344988369503`*^9}, {3.888834722348405*^9, 
   3.8888347995002174`*^9}, {3.8888352017588253`*^9, 3.888835210366105*^9}, {
   3.8888352413591337`*^9, 3.8888352420228224`*^9}, {3.888835315005042*^9, 
   3.888835365020547*^9}, 3.88883539576822*^9, {3.888835452103985*^9, 
   3.8888356608539658`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"91fac2ec-f2f5-49b6-9969-cc84d1680bf4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", ",", "1.`*^-6", 
   ",", "1.`*^-7", ",", "1.`*^-8", ",", "1.`*^-9", ",", "1.`*^-10"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8888344857065096`*^9, 3.8888345321007605`*^9}, {
   3.8888345914082975`*^9, 3.8888346132663774`*^9}, 3.888834644967688*^9, {
   3.888834680346467*^9, 3.8888347261639147`*^9}, 3.888834765556828*^9, {
   3.888834800356682*^9, 3.8888348285649524`*^9}, 3.888835210860131*^9, {
   3.8888353179890103`*^9, 3.8888353661059465`*^9}, {3.888835396452684*^9, 
   3.8888354198927507`*^9}, {3.8888354557602396`*^9, 3.888835585262613*^9}, 
   3.888835626680581*^9, 3.8888356618452673`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"5aaaffec-ad4a-4bfe-8dea-5981f00dafaf"],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
yIfPpRQ/dsR/AH/S4Yg=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rosOnl6E/wBkftdc
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4vH9LIBrFxRZfz8U479Z7Ozm
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1lAs0lGkYx0emJsbMfN+XaJLtIiUslQph53m/SYeScRlHSZZaW2FFkaKE
cmu3ctsuolKta2wpJLFPSiXLpjTU1ulCKkVakxDa6ax9z3nPe37nPec5//P/
P88zc/0WN/9xHA7nB9X9+v5/3B3Lqi4EMvDeemiUNeuUNBxrvRs7Zwny1Ysj
u9I/SHLFxRuyFy/B//77JRXdPfXUd5ZocaD7E8FBidO02vQTckscN8N4iF80
LCnblbX6ex8r9PRaWLJ11hfJtV3hVTecrHFbkY2k9DQH5kQ9PnQy0Xqsvhqk
d+wjHhqAOh5fdYyDkxWDB6u1AJ0s91S0m6mDRfzDjxVygrtP3L+q81wdbvlZ
qK1fT9D1lwUm3Hgu6DlzxFx/gnlVrTp3po2HH10OF7cFEJzusMpap3A8JFd3
JnkEkzH9E6Bh2T5xwxaCkXuGrgUWToBm5yR3UTjBhNTApVHTeaA0aGkK3k7Q
9CJ3wpKDPODF3fxTGkUwtX1bFPuJB2d06QBuNMELJVsyzNZOhHLRL24Vewne
rrOLCLsyEeynGMhmJxPsvdg8snuyBugq2nYoDqicMk3blRekAfTbi6Uhh8iY
fxpgn+KnYZhCsHFqb1cGpQmCbtvy92kEU/apX366ThOcuxLkib8SNFhxWOGV
rwnVel2unSqePtrYYNWrCYYbJk+df5TgcQV/MHcxH17em/hNQyZBL5NUh6Yd
fOi1MvOZnkUw8PblmvuVfMiN7opyzSbYfPmBsm2AD39PfuTicoJgv6Aydnix
FiQ0jc8LOkOwrk/k7hWqBR6yF63d+WQsXy2QORe5xRUQrL61tMeoXQvafFZw
MgoJ5pPrdTfFApDFimP6LhBUCJI2DToLIKuPKTcuJSjYutDmfpwAykO2h49c
Iuh87qC9f5kA8j+f07WpJPitnZn8j04BtPKlZ/dXE6Tfaev06ghBfiLItQMJ
SuXDS8YvF4Jb/YM3FrUEz9af2c4PE0JDYXmk43WCQWxKtTBHCGK9mEumNwiW
96aYT20UwhOZ1CqwnmB4lYut1YAQHpn85lpxh4z1pwhIvGiGfiPB3/XOVdxb
KQLP45zg1c0Ev3Bcv/iGicDjen7yaAtBx4KSQsMsEWzoK3koUxAssp21yei6
CA5r5zk6PSSoNak2IuSNCH5l3Fs2q7hv9MqaOB4FLRv1ldFPCboEGTd8FFMQ
XJB9Xv6c4JrM4pzJphS87ZvvmfaS4KrlN+s67Cg48rnzaNkrgjvn3Rr0l1Gw
+ypJvqHinxf6Pz7uS4F7kg2t7FL5GcS8TQqlwMqdTlP2EHz7eO4+8zgKSlse
rLX7SFBvSvvr1DQK2rx4qxwGyNj8UeA9/0ejPSoOn5eRnlZKwZ7tjjlGQwRz
DVY8WlRLQdLRUO2cEVUetNGHzGYKNL+VH7JWY9G6qerUzWcU9PQm/vCcy2LV
1IzsyvcUvCxRKl8LWZxJNiaHj6r0c6KnhVAs1itmKz9r0RD/QSNpti6LEk+l
t7MeDUx/aTBXzGKn+SyL4Hk0zG1JeW6sz6J+0bDC25KGk96e+41msOjNO52p
Z0/Du5iAnqKZLDKvsbbIjQa1gbO3G81YtF3olCj0pUGSOTfpH2sW5zkbaNv/
RMORHQV8BxsWt134PdklkoZL8fd3GtmxuCxmx8iCRBo+7a0PkUrYsf1DQ9fe
4dWxjiz6Z+eOizpFg7nNopCdMhbjOtYf6DhHw9rzwI12ZbHFv1/DqJKGVXPS
u9V8WdQ8M+CzvI6GoZzAla+CWFxe/SYAmml44VT6bEYEi/ckaVzdJzSo8/5K
q9rLom/ous93XtOQy3SENiSw2L+/RHedUlXPt8l2SyqLlOkCvaYvKn9yIiNX
HGGxxtvw2jd8BhoPryN1F1kM25RXI9NhoOa3SWZ3algMUfTV+s1kIO786az3
TSwe+yMvwsOUAe/NjbTyEYvtV0diTCwZmHSLcXJ4weLAWV50B2Hg4d2QuN5h
Fa98OTHWiYEPCe53C+ZIMSBsoFzNkwGfopFuv6VSNNHXEW/0Y6DKvNUwYoN0
bD8zoH1Znly2VYr/ArSe3fw=
          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Mw9ifYad2y0c8V/zAuBh
          "]]}, {
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1lAs41WcYwOV6OM7x/x8cSboouVMqVHTe7yNrYwetVkxR68iwSolSVGrd
XXeWcpvGVEiPynLo8iIhZYt2qi1rjUmqdUSiXPbfZu/zfM/7/J73+d7b973v
9HWblsnU1dTU1nPnH/2/GK+oqC6PFMGrBe9GqWOX5Ao9kLk/UIJ8jXPxPV/3
SgKLd7o2cvyffUDiUjT/dd4XEpyb/PItwSFJhdOhwvaFgOrTbN/xS4Ylz1L1
swylgCuDnMu2WIxJBhrfJodHAG4tWSS58J0arG9NDb3UAOP+J8CNqixF6WyC
4n/zUIc8m91htosJ+rruvtzhqAF6hj5JYSsJJuS1XRE/0YCKxNddqu0EA47N
sdP8ShNyNddmt8QTPF19X3xrsha4p/Z4yxMJTl368QJxsRbktLqf0U0m4/lr
Q4rF/V2OKQTjd7+riSzWhtjuaUbKVIIH0iMX7pyqA1bRvc2GcoL2FzW1XVJ0
YMLIib6WEwTTO7bupG91wHPkgK15NsHysk1yx8940BUxWTwzn2BjvUdcTBUP
Nn37pKzvFEHVxbsjCca6cNTCI9D+DNcp+4xdp6N0YUfIxJzks2S8f7oQVp5T
M1ZM8M4kVY+c0YMEQcrGiFKCafs1Kh+v1oO03Nl7yzme8dFxZdAZPTC6ecin
6AJX3+idZjeVHjxP/TWbd5lgtpI/VDSfD5fEm80Ocxxkl760ZTsftFbFeQVV
E4xsrLzWpuDD8U/Bqprju5U/9z8Y5MMX35/4wKGG4IBAsXd4vj5ojVSZv64j
WN9n8ElQtD60hwwrYhvJ+PvqwzHtY5mzmwhebVj4l3WHPhSYqppeNhM8Q+rq
b5oKwMRNYybvR4JKwaHwIakAXLJnr3G4R1CwxXlRW5IAbtUNvZ/3M0FpacoS
WYUAgvMz1pkrCTp4OC6/3iWASedn7Wl6RJB9YSRWiYXgpr3I6ZPfCHouH3bR
8hbC04ONoU8fEyxsKojlxwhhm8d9NdsOglE07arwlBBWrVk9fInjH1RpTpPu
CKFCdq4lsovgtmp/d7dBIbyfsjbp4F9k/H8agK76o/ivVATPm5VebvUxgJDi
2+llHI+pBYyFxhjAsE/mxbR+gh+eLSu2zDEA9frH1o0cl7hbhFvXGUBxV23X
2ABBfcPauM3PDKDfd/1LrRGCfaNVgUk6DAjy2v9M4dg/yrb5jSkDpZm7Lpuq
UQzMOnfK2J6Bk1qxn2ppU/zY+2Z9pwcDiSbXD+/jUdxh0zAk82PgyZa3AXoC
ikedZY+yQxm4ZhgmjGcoCqJEzw9FM2DmGmsvNaL4/JHVfqckBnasCrccmkrR
bGJHd3oGAwWyltaCaXR8/hjQf7FhRYEFxW028q8zLjBwIy/+m8JZFItmfPTL
vFrOHzxU1dpSdGCte7PuMlBieP75MWeKC1qq82/+zoB11bDlH3MpVk+S5ype
cfE+W1oidKM4nWw4vG2Ugd7Yda8eLqTYpJzZ/16fBWN5qV8BpShZ2R8sNWOB
dZhSMLqUYpeTxdyNNiwszgmRx3xI0bxkWBnsysKbB4Hp+30pBut8l2W2hIX2
vJ9G1kgpirqxtmQZC9oX7zW8XE7R3dn3oDCUhSgTqfOdEIo20hlGS75kwU61
jFp+ztVbfv6wfzwLE+uyos1kFL32bB+Zc5CFLHUvY/eNdHz/sHB87y9xsdEU
ZblF6jvzWbDipVcPHqGY1LkuubOUhRd1PdfbjlK8JxvQtVaw4H5lYNbjZIp6
BYNrvOtZCD465MdLp+h99VkE3GXh7FBs4tZciq2SDE2TdhaknWH1AYUUQ6NX
v7/VzcKyqS77ws5RHDhSZrK6n7NH9KxPUFBk7OeYtYyxUGPMdzxxm+K1YMua
KXwR1N7K9XnzlGJM+OlrfmIRnMRmh/xuipuVfbVrp4vAi1epiBqgePL66bgV
9iJwsNZ82GvqiR1XRvbYuYrgfnHgw0wXTxws1EnsJNz9BP9Xkxdx7PMnb6+v
CIreyVs2+nliRMzgDxNWisDZf8zoSLIn2pmLTTesFYFyX9sCkYMXLm5qCJDI
RFA5ZtdnpfDCvwEcYd/q
          "]]}, {
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0., 4.605170185988091}, {
          0.6931471805599453, -31.1141745829895}, {
          1.0986122886681098`, -32.36574479877308}, {
          1.3862943611198906`, -35.29257190683991}, {
          1.6094379124341003`, -38.51631054205925}, {
          1.791759469228055, -38.95432735958023}, {
          1.805398726825128, -41.44653167389282}}]}, {
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0., 4.605170185988091}, {
          0.6931471805599453, -31.1141745829895}, {
          1.0986122886681098`, -32.36574479877308}, {
          1.3862943611198906`, -35.29257190683991}, {
          1.6094379124341003`, -38.51631054205925}, {
          1.791759469228055, -38.95432735958023}, {
          1.805398726825128, -41.44653167389282}}]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, 
        Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, 
      AxesOrigin -> {-0.19388086286495004`, -41.44653167389282}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, {-39.14394658089878, -27.631021115928547`, \
-16.11809565095832, -4.605170185988091, 6.907755278982137}}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotRange -> 
      NCache[{{-0.19388086286495004`, 
         4.605170185988092}, {-Log[1000000000000000000], 
          Log[100]}}, {{-0.19388086286495004`, 
        4.605170185988092}, {-41.44653167389282, 4.605170185988092}}], 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
       "0.01`", "0.001`", "0.0001`", "0.00001`", "1.`*^-6", "1.`*^-7", 
        "1.`*^-8", "1.`*^-9", "1.`*^-10"}, "PointLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7,
                 ",", #8, ",", #9}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                
                RowBox[{
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                  ",", "True", ",", "True", ",", "True", ",", "True"}], 
                "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {2,"2"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1lA001XcYx6/Xy33z/9/qmq4iauVlXovLZff5/4xU3rLMiCXNWBR5LWWV
1BrVUrFoltKoyEutl5u3J0alaLLkLNWKidpKdcNF7O6cu985z/mdz3nO+Z3v
+T7P7zsvMj4wSpPFYn2pqv/u/49tdX5gzjYOvnIZnyI2A7IZaaNDbnf4yNU6
l/788GsZr7dufmmAQN0fkXndb2iW+8xAx/3/jDKolIle3s7DW4aoaWo5zi2f
lIGeue/eR4YYHOpQmWg2LTO+XTGcvl2MSeVS2fmTLHD2sb3ot8FY/b4GGD9b
wBpeY4qioIu1NbGa0HbzQsKmfyzRx3n75T4bLZD8de7ND75WmPFTV53oiRZU
b39j1hBqjSv32Vtp79YGjbY4E1MtWyyrvS9qM9aB7NXF8Q/u2KKJt6+L6KwO
PCxY1bRjnZ1avy7UbPzZxf8ze0zfPn4t9qwuTEvyG58W2+Oe3FjXrSZsCOFJ
e3XtnND6grau0wE2XE/J67pi5Iy5fUlbySgbpL4a+zL4EqypjD9is1oPnky/
W+DnI8EbLe5pyVf1oN7oxeJ2XwkOX+h8nzFLHzZKXfNLsyWotD60rSxOH+yX
XkvlVbuo/dOHr2OG3PoVLtg+e/j5EYoDycLUS4+fueLBLK0rj8M5YMI+5v2r
0hXNl+d3h57mQDNvnaGnVIomU+23JMMceN7Qcab3gBSPdXOVpUu48NmDFN7y
OimGWuV6d2zmAns48nL7h+4Ye+NKQ5ecCwfdg3iXi9yx88o9Rc8YF64+jI7c
NwQ4wpfvnFzCg7IazfWDHAZb3hp8GrqJB4+ElXWtYkY9Xx54xLR69yQyWH/d
9eWiPh6Ez+eMnyxg8DTT3NJqxIct8Wl5Hx9nsJu/N0bpxwdy9c5NhxIG+YkO
0q5MPviFPy07dYpBv4oDnlEX+aATsu92TAWDH7nbrGoc4EPPVzr1rPMM0n/P
FA2LBHBDaUZ2yxn0WDXppOMlgONeuybGVHzqZkkqN1kAzjXsj+W1DMaRg/WC
EwKorhws8Khj8NLwQdvZ7QLQyPiitrWRwZTaADfJmABSBucH2txi1PtpAEMh
1W0D7QxWiSsu311hAL2J1WGJHQxOs1ZORyQbwNrEn7Mf3WFw2ZnKswt+NIDd
OUsdFXcZLHczi1nUbAC2oUcz13QxyJvRlJYwZAAtlgmmWSp+O3U1JJNNQdEf
1Za77zMYEGd5650RBaPNs446PWYwpPDciVnWFJzE+FCdPxn09Wpt6XenwDV4
/B7rCYNbLK4ro/wpqNqbGGj4nMEch6jeYxEUNJMf0th/q/yME77Yu4mClGWm
YPySwRe9C7NsMynIcjazOK5gUPxB32DuIQryDvvv7Bhn1P+Pgl5qsDJ6UuWH
xZHDh85TYBbvqYxgESw1X/7H4iYKXuboZ6zTIPgRveh1YScFtXXp+a4cgi4d
tcWtf1JQEpHcUMwjWDv7SJH8FQUaRcHloyqex0R/lzJFwcSkYcrATII3u+cr
Jng0tH1u3pQjJigLVoT5iWl4sWH0nd1cggO2Zo4bLWjAqJExmEdwTvlkd5gz
DRZZciVjRjCMfbJQ7EnD1GbzrIULCQoHsak8kAZR4Uyq3Iagm4PPt4IIGrLF
QT1b7Aha+JnP9NxAg0nh6qBGF4JJNVXfBaTTELJUz+2pij/Zsfm9/bc09Mx9
VpW6jKjzh4YVZxy3PVZxVFGp5tZilR7vdwduBBDM7I/c319Bw4MPzBUn1hD8
PWpEf5Gchu8dNiT9EkmQUzL2hVcLDXZe2768HU3Qq35oPXTSwLLZ2DYnluBd
2SFtw4c0uDyMEe1PJBixKXyibZAGMvSbfsUugiPZlYbhChrOJ9kV1O8hSFnb
izumVXp3alSFFRBsCFtwbS5XCE+jHN39Swgmx5Q1+IuE8OTVL0EDVQQTut82
rZ0nBO09ykfvOwkWNJalBVkLYUW6zTLNBwT76t7vsHIWgtXiTxLCFQTHTrG/
6WeEcFp+b3nuiIpX/KW300cIeW/W6/rqeuD65LFLGsFCsJwlKUi39ECrOSKj
6LVCWBKdMXFP6qHOZyG8DucInVI98F+3BtgR
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
yCQqac2JEmzvf+CHgTyoVAjHVldtxX8Akbvp+Q==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
gqELG5bjfwrO31s=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8CI/ecNWhRT/A6+K2uQ=
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZFROqzf+C/BU2Yc=
          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cqyf9FzqFiaEqkmr4UXV7vgfOC3Y8Q==
          "]]}, {
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
qYcrrW8Z+B87NNgY
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, 
        Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, 
      AxesOrigin -> {-0.19388086286495004`, -41.44653167389282}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, {-41.44653167389282, -34.538776394910684`, \
-27.631021115928547`, -20.72326583694641, -13.815510557964274`, \
-6.907755278982137}}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotRange -> 
      NCache[{{-0.19388086286495004`, 
         4.605170185988092}, {-Log[1000000000000000000], -
          Log[10]}}, {{-0.19388086286495004`, 
        4.605170185988092}, {-41.44653167389282, -2.302585092994046}}], 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
       "0.01`", "0.001`", "0.0001`", "0.00001`", "1.`*^-6", "1.`*^-7", 
        "1.`*^-8", "1.`*^-9", "1.`*^-10"}, "PointLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7,
                 ",", #8, ",", #9}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                
                RowBox[{
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                  ",", "True", ",", "True", ",", "True", ",", "True"}], 
                "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}}, 2]], "Output",
 CellChangeTimes->{{3.8888344857065096`*^9, 3.8888345321007605`*^9}, {
   3.8888345914082975`*^9, 3.8888346132663774`*^9}, 3.888834644967688*^9, {
   3.888834680346467*^9, 3.8888347261639147`*^9}, 3.888834765556828*^9, {
   3.888834800356682*^9, 3.8888348285649524`*^9}, 3.888835210860131*^9, {
   3.8888353179890103`*^9, 3.8888353661059465`*^9}, {3.888835396452684*^9, 
   3.8888354198927507`*^9}, {3.8888354557602396`*^9, 3.888835585262613*^9}, 
   3.888835626680581*^9, 3.8888356624776297`*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"5b88b1bc-db91-4833-874a-73f25803d158"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In 3D there is a drop off at ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "?"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "185c16f8-dfc8-4eb3-b8f3-c1b2496830ef"]
}], "Section",
 CellChangeTimes->{{3.888835700888873*^9, 3.8888357553421307`*^9}, {
  3.8888358205822773`*^9, 
  3.888835822920196*^9}},ExpressionUUID->"56b5e8d0-d24d-4e73-900b-\
0794b616dd10"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   SuperscriptBox["10", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RankOne", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "m"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "m"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xs", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", "\[Epsilon]_", "]"}], "[", "r_", "]"}], ":=", 
  SuperscriptBox["E", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", " ", "r"}], ")"}], 
     "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", "[", "\[Epsilon]", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "[", "\[Epsilon]", "]"}], "[", 
      SuperscriptBox[
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"xs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "-", 
         RowBox[{
         "xs", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
        "]"}], "2"], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "m"}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{"\[Epsilon]s", "=", 
  SuperscriptBox["10.0", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"A", "[", "\[Epsilon]", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "\[Epsilon]s"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "18"}]], ",", "m"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", "\[Epsilon]s"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["m", 
           RowBox[{"1", "/", "3"}]], 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "1.0", ",", "1.2"}], "}"}]}], ",", 
         "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{
           RowBox[{"A", "[", "\[Epsilon]", "]"}], "-", "RankOne"}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "\[Epsilon]s"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "18"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "1"}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", "\[Epsilon]s"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["m", 
           RowBox[{"1", "/", "3"}]], 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "1.0", ",", "1.2"}], "}"}]}], ",", 
         "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888834269010436*^9, 3.8888343412038927`*^9}, {
   3.888834392411357*^9, 3.8888344988369503`*^9}, {3.888834722348405*^9, 
   3.8888347995002174`*^9}, {3.8888352017588253`*^9, 3.888835210366105*^9}, {
   3.8888352413591337`*^9, 3.8888352420228224`*^9}, {3.888835315005042*^9, 
   3.888835365020547*^9}, 3.88883539576822*^9, {3.888835452103985*^9, 
   3.8888356608539658`*^9}, {3.8888357605752997`*^9, 
   3.8888358307273073`*^9}, {3.888835913583836*^9, 3.8888359173734093`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"89126a71-4938-464f-a0b1-6bcedb2fcee5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", ",", "1.`*^-6", 
   ",", "1.`*^-7", ",", "1.`*^-8", ",", "1.`*^-9", ",", "1.`*^-10"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8888344857065096`*^9, 3.8888345321007605`*^9}, {
   3.8888345914082975`*^9, 3.8888346132663774`*^9}, 3.888834644967688*^9, {
   3.888834680346467*^9, 3.8888347261639147`*^9}, 3.888834765556828*^9, {
   3.888834800356682*^9, 3.8888348285649524`*^9}, 3.888835210860131*^9, {
   3.8888353179890103`*^9, 3.8888353661059465`*^9}, {3.888835396452684*^9, 
   3.8888354198927507`*^9}, {3.8888354557602396`*^9, 3.888835585262613*^9}, 
   3.888835626680581*^9, 3.8888356618452673`*^9, {3.888835764274089*^9, 
   3.8888358314843025`*^9}, 3.888835918595662*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"667f73d6-bcc7-4f77-a6d0-de6ed55ad165"],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VKxGh3NVjfZSdljpdi/QZTXosCKs6oYD2m21x7abmnSQ2KVRmYx+Edb7lF+b
Dvt/pHWMop+Z5LWF7KRDpP2srI491uPZrdYTTDoYPj/9swltebbL6giLDjm5
C/5jaIuwpdZ3bHQZ01n5EIuYVeZ6pruLDpnNjk9tHDBfHfaqluvSYfVwz/Mz
6DseSmvld9PhY/Wq8Edoc3vxyAR9Oig1vc82cMT+uNHcY6UhHayt6gsd0e86
jN5476GDu870VA764GGHoo976ZCcPDW+gFZo+cJrbEyHmPeLcauPsIj+NbsG
q/bRwdS08s9d9ItlrzXWmdKhoI5/xsEJz3sFQ8LxZhh/F/c+90S7zg86/zWn
A3P8R1CUM+5P7nIaxy3pwDHbcHqrC9Z3Cc6Yt/vpYPFWNcQHnd/Ye1jbmg43
SU/dstB7a3nLc2zokEHxfLvqKIsQ5hy8ImSL789iCkSjA5QbPvofpENLWHHF
2WOs/36/lw4NmsGUeLRX96Lw7kN0mHWMOtiPbizjHrvnQIdhtdOHRtF7NE8b
iDvSgfht8TnlOIvYr1K6IegIHZ77m3QFuuJ5nW9ZdL8Tru98Q4afG9ab1tpT
u1wwXsobEorRm3fq9uUdpUNfad2tbSfwvFU48krgOB1Ksy3sHdBfJf8wPV3p
cLel+XYs+rFWj+pbNzrUyM+3N7iziFzLzgfb3TFflvYa2ZzE/HTQe5h4EsdT
4PioDr1h8TRzzgPH7yz2XNSDRUx5vDY64EUH27pY6ln0hsJrA1XedIh7+jhb
25NFBBlS/tJ96HBxW0rnMNov5n5GkC8d3ghGGTp7Yf1zqXzx3g/jpcdp4jO6
/3jwabUAOihbv2YxvFnERO+e8huBGF+bZqVencLzVcnpgKkgOnirfeQ08MH9
M+xQg+lpOqz/Ie53AG2eoJtYdAbzsyBvoQR9Z+DsFN9ZOtD5Vy01of0EDvW4
hNLB7ntd3k4/7P+OqOytD8P6VSwoYuLPIg6M7N0tcR7j4Yv3nofoLN2FV/4X
6MC4eKxHNIBFlPRE97ZepMNgyb20cPThcvNAhXA6aPnH+O0MZBFpcSkZFy7T
QXwijqKHbum9b94bQYeXl37E30TrlH+N2x5Jh1cGLh9H0anfou2jo+iQ1Sgw
bB+E/dTS1/LP0XSgKNzbviUYn092X6pmLOaL0+IhJvo+i1so7iodHr7ZeOQ9
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
I9uG
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
B+vPY0b5N3RA346hKF8m2F0+t9TJgU0+Tf2YfdWPCVxNkOHhxCbVaa5KuceZ
IJM8aXPHhU2eNn+3q9qfCXMej1X+7mP/9/ehTGhs9ZI/cQDjwzv5y0AgE/KW
BZheP8wm3zZTNo8HYXxbryezjmJ8VGzYtXCCCQZ7OG+4BLDJ/AIFJdFgJvy4
f1kuBR03vZCzNATzVTt9p+lJNllRNTG8+hQTNuQHL+wIZpPcwtLdeqGY/7SX
Iv5oau/d8K1hmK99k/K/T+P1TdWO7AxnQrLCU5NvEWxyihq+6OBpJqzRv+An
G8smTTuor/3OMIEdvCOp+AKbzLmReeD0WSYwW+fDpZPZZN6QWf6FCCZ0PPn9
xOQKmzzbovMgLZIJi9oTtx9LZZOLo+MP3Y1iwgtL7b68DDbZTvUeKIlmArek
i/b5XDZ50mmxUMM5vN8gHd2DBWwyVenIz9YYfD/dvAafcjY5ubQzqTeWCQGr
LjuUPGKTsa/sJj6cx/rnf6qb/zGbbCFleb7HMaFJ4MjMr+dsMmu95as/8bg+
0i/8+dvYZOZhsT08CUwo5yzxdxxlkyKRp7LELjJhfdugeD1aIKIhi0hkQupx
7Yfscaxf5hyuCklMUPMfMfGbYpO6eTt7Vicz4bie4cj1ecwXi5/8Wpcw3zeu
OyQgbUiWPJ6YMriM8bA49G3sCkPyeKxf+uYrTKBqRc9uXG1Ivpu5tWhHCtaP
dYYfy7QMSUOLm8t2XsX8yKnkiHU0JNOKLyy4XGOCfQ6vaoSnIdm5LvHywVQm
nFexpoXHGJJk0fPPR9Ownjq+4Vl01ZC0FHf5e/w6xtcK27q8YkMym8vrSXA6
5kvocsvhx4bkciUZqzMZOL/csDGuJYxIP/VvM+/QZQvKP5eXG5H/BzJVwPI=

          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
7x/lv3/FkPw/VP3SOg==
          "]]}, {
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
H257yCY=
          "]]}, {
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
K+akRvNWXSY6d0rj17w8c/L/ABsqNh0=
          "]]}, {
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, 
        Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, 
      AxesOrigin -> {-0.29082129429742515`, -41.44653167389282}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, {-39.14394658089878, -27.631021115928547`, \
-16.11809565095832, -4.605170185988091, 6.907755278982137}}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotRange -> 
      NCache[{{-0.29082129429742515`, 
         6.907755278982137}, {-Log[1000000000000000000], 
          Log[1000]}}, {{-0.29082129429742515`, 
        6.907755278982137}, {-41.44653167389282, 6.907755278982137}}], 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
       "0.01`", "0.001`", "0.0001`", "0.00001`", "1.`*^-6", "1.`*^-7", 
        "1.`*^-8", "1.`*^-9", "1.`*^-10"}, "PointLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7,
                 ",", #8, ",", #9}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                
                RowBox[{
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                  ",", "True", ",", "True", ",", "True", ",", "True"}], 
                "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {2,"2"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5/lDf9D7T3S5pS+gw4RpgZ2YGuavwSHTT3x00H42cUcLnVI6fE5GkA5Pfry4
a4LekXVt9U4ROrSMpPX0ou8nZ7FjxeiQb1R7eBhNLtJ5VCNJh7Vdg9XK6tg/
R3nkjlPp8MWzZYs9+lXpdiElJh1+Lsrp24u2Tprvs5Smw8y1y4M16P8+H6ND
E8PEsgddE3NBIkORDrZm8TWSyzFfpW29ninTIanO1X0V+vmlvG3fl9LBI9tG
thD9Sc21RlidDhp7RFY3o38usnmiupIOutFmBQtX4Hqd2bhr42o6/LlaISWC
DhH7E+G4hg4r/E8RG9F/jyps9V1Lh6BV2vb30Pu+HCuJ1qPD7krVgWZ0quyl
x9c20KHx92UrvZUY3z6LD99h4/VeV9COoS3HS56XGdFhB2+Sew56ycm2pieb
6JD6JbfuJfrCW/Fzr8zo4KJ521N0Fc5Pbddk81Y6yB2LkvJFn9EolW2zpIOY
rfxkPdpaQ4DrvTUdpgqur/yItlVcm9a+gw4pvz0Oy2lgf/Qkc0GrLR2yttRN
6KJrNucsa3LA+13cdy4WLRB0gfViD85/ixK9G11XndFO7qVD4jPucqXVbNJX
Z4nrfVc6ZKdabl2CNm+0rM3eTwfVG9JNp9FOtjumrnjSQfQud/tVtNetvfxn
DtHh7tQvVjHaOyr555EjdDDaNx7cjO6YZz2096FDnFf5NiNN7F9059wM/emw
ps+BOIgOKNw2uTSQDqHeboY30DRd+aMip+hw9ODg0Sr0UaZX249gOvCb7ogg
tNgklb5GrSGMDglnT31dgr584ZD37dN0sGxTq3JH/zgjePt0FB060iPOFqBj
KkY+OJ6jw9+7nUGL17D/fb5KB/FBi2tL0QdalVcIx9PhoNsyFUP0ouPLdnQl
0kG9oL7wFlr3e19IwWU6mDuHPalGaybKFAYl0cHwcNOOWrToeMrg5hQ6rIzX
v3FYm01KPVFYTr9BB2L7YHUVenTCNajnJh0oji8jVupgfrfJ9GTfooOOpMNR
ffSBRZPbvbLxevV35e6gv5ekdq+6jfnDSj7U9D/vKwr7lYfx/EOHvmgtm1y3
6R0UFdBh790WvhPom4op0t5FmD8eJ66dQud6pDLU79PhsASPyQiaau6m87WU
Dl/rc29tWYf1oi74xPUKOixPndvii5ZO8+rf/ogOORQt7S70sYv5pwRJOpTf
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
VxtTKTci/w8342Iw
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw123c81f/3AHAqW/Zd72uPymigaeTcK0oLGckKpaHMyKiEimRlFUVISEmZ
ofBGokGhzIxQ2gnJit/5PL79+qfH8/G+9z1er3PO67yue+Wc3Pc4L+Lg4Pi0
mIPjv////5/3rPLJelEF8uemmXn2qo96voYD1mttFEmBxfcCvsT/0rN9IG+Q
G6H47/ik3nmNN4UaGYqkZtT3PyxyWu/9w5pFt6WWk4tkVWYE7s7pneMNebGD
vZzca62R7yW/oHdm9d0yMY/l5Im72nqFNznguMTJss4bK/6dnxMirH3z1nMo
k1SLkkcFxxbBgJy1qxddmdy54ezDoVWLoXKROE2NoUqeudH2mPp+MeyWJhLE
VquSppHqqksuLAGLb0PPcnarkjmPOqjPJbmg2IW/d5xYRcps27WJeocLOn2L
Hyzx1/53/9wwPLNV+91OHTLg7EzNsTvc8GfTiXvx+3TI0NhjWqdkeGBkIvfs
5Ys6pFrREu710TxwwyaIp3O3Lhk7dOIU+w8P+Jse6iZMdcmCfPeEVTa8cOKB
wvHF+3XJxnpdX+8KXqg8GLaS56AuOVrU8vcMhQ/EtD6p8R/WJafV4k7nHOeD
U+uz3h++oPtv/PhgrMr2Rp/qZrKJGP2SIMIPwePRik4bNpOXzy8u67fjB5XS
P4m3rDeTCtuvtFvf5odjHsmzn702kzLzTS82jvLDkSFh3uqwzeT1doHp7HUC
INfB+PRnlx5prRq7rdlPAGhrriuXWOqRxxrLqtrKBeDguM6xvwf0yJaytxOd
UwJgJx2eO3BNj5xcWh48t04Q1tFXZIRM65H148Jm1p6CIF189P6BRfBvfgUh
5PXzy58pQFY2aP1YMSQItbtluxqXAXmbVVf/lLEU/J+uuDCyEsj2pRePTO9e
CkVmsT9vagC51EtDuy1kKSw9IrRYfQuQu/OiDZxLlkLXreWeituBXKm7yrz6
41K4wSntVbEXSNFvEtRRqhBcoFXuMWoBUt98bj2XoRD0+tPnS94AeetZ5kkB
byFgaad2pncAeZx9uVIoQwgenPbzMe4CsnT08mqiSQikw0QSutA+j0x0Nk4J
gT6t2ovSA//iUxi4SprX26PvM/Metu4Qhjd9Aeck3wG5wGG64OAtDCopxF63
XiCNcvPvKKUIw995wQcN6Ls68kdW1AnDhERSmlkfkILitb4en4WhnLh3ywI9
Pl+xL4RHBExGh6YU+4E0Oa7y4jdDBDJaPu39gd537V4GRU0E+Ip4arjfA7nL
8Gn9sK4IbL1DX8+L9ldumHY2FoEi7QkDRXSEhvO76w4iMPzgVmMEeulxsa8X
PUWAxkN9VIn++m75+dUhIjCUuaHyDZpJH/oUGycCr7L32V8bhH/5JwKf9Sq0
f6F9lBPi4wpFQEv9LzQNAZmtsL17ba0IqFRltvAP43yIrvh1rUUEhEZ8ufei
NzU/Sn86IAKClj6CR9CPiITU8p8iIC15RY/6AUg51uFwn3kRmIv5k12Iftau
ODErKAqL/W1Sq9B6eydsdzNF4VW1m8zej0B+XC2v6aYsCn86Xp4tREvdnWu3
3SAKTjwXMukjQNry3LzGNBCF3qyG9qNosU9k7d09ouDuPC3Ug9bR2Bkm5CAK
fd6OGVs/Aam8W0HCwFUUNslOrqhFnyi4H24SIAoGmSRrEL0lyO+vepgo6PDa
Tq74DP/qjyiU/8h/7Y12Ts1edCpdFLr22y97ig4ZdooazhOFBtXp1b/Rb5wn
+VaUi8Ihskx3/xcg+TOn7A3rRaFie3bRQbRh5WcXaBGFcE79HSfQrXpxS2i9
orDXoU5J8iuQDp52s88/icLrdcd65dGTl/JpdhOi8NLu8LA3WkRNndm8IArX
fygLlqKrbJVqpAXEQF+6w1P8G5DeR3KqjKli8Lra9tRqtEf7eK2jnBg0Hnkj
eAadXJ3ja6EmBu+60l6HoIce/w1S3SAGB0OKTsagp27xBA6zxKDAyz/o6X/e
8YE3eCeeX1PQWuU7kC7eU6Wce8WgNHmVvwVaVYrKOOwoBhqFlzeko/9Xn8VA
y/bEb8YPINUrmMsHfcRgrGPhRtiP/+pBWP/UWTHosPe7G4H+Jr7PeTJcDBYt
4tzcgx68vn5dT7wYrFKovfADnaWl2ZiTKgaM3qKy9T+BjHcejbfNEYM/7pdo
Z9E2W6v5Zx6IgZPwgSMx6Ccm5PWgCjH4cCaydgLNbcFZNFonBs1NBrvURvF+
DK+Vb28Sg9UHvJwq0Bm3Gikx7WIgyXVtRPwXkFFFfKpV/Th+3EterUTbntO0
7vwkBslc1hnx6KvvIzn7fomBkGjI+Ge0ge7w6VczYnDXlf/HPDoiKkvp3mJx
KDsT1pE0BmT+1p97fAXFQVJcOG4Q/dAje98qijhsqxLTWzEOpFl7eGSrlDhk
n9HJtUQ/89+ic3CZOJhl7qpzRv9vfRMH5kou9in0jqJf2003iMPRuCNfKBNA
fr7ixbqnJw4n1PRPqKGVFXmG/2wVhwtvBDZtQ48oj/mrm4jD6FrVUBf0vv21
26ytxCGE8+cM328g2ascErwcxGGTYn0yE10wRqQFHBGHY8H5Ow+iX5SW5Hp5
iEOr4G3Ju+gijxPj1n7i8OenUJzAJJBOjfIVmkHi4MMpNi+BHnZR1vob9p/l
eZlotdHo/Icx4nCzlTvxHvqYFY/pgas4PoJm5wfRiUp/93GkiQPfK4WDwn+A
9KVc54jJFocV3G4f/3Nq0NsA4Xxx8OSU+2qFnnY88Te4RBwu+2x85IoWE6A9
/vhYHLrCRwzD0fYXDT/rPhGH0MPNpr/R0uUnSsNeiMMP3mYL2hSQPNJLzJ+0
ikPQIW53c3Szo9Wv8S48XjkZ+A39v/5BHDZ+fBHvNI3z7zQ4pPZJHLy6uNUi
0Iq+nPHrf4qDe7UtoxD9w/XJb81JcaBJKds1o63HetYr/RWHdOdo6SUzWB9H
mEH8SyTgBvdNX3P0td3BM0P8EiD2ccH3ONqMY2NzgagEFNw6aiwyi/V/dbq8
N10CJAru5auh2TVm0qoyEqC69279FnSAv+pIu5IEBKr4LrNCz0zp3/RVkwAO
95HfsejDiYu8l2pKgNIacyGxObx/XiIoaZMExLeN+LqjC6aiP9NBAmjvdGV8
0fT9j1ujDSXA14JdV4wOadhrN7NTArKZayOeoaM9fO7YmEmAZL0pDf4CuW17
ZHfhPgngu7Ph2Sn0qbf+SzkcJKBF2+bRJDpz+IKT/iEJKEvQcBGYB7JE79DU
6eMSwGW0aVIPTaqyv+d5SUCnpa7qbvT+jhL7Nj8JIIw+vApDi917e3Q0UAL2
Gz6e7UH/r3+TAGG79ibBBbz+l44qoQgJULs/XS+EluyxApFYCTCK07M7gj6/
5Nlz3qsS8GUV8/ojdFjAE7+pFAlgCjJ9/6BFwjwP9t/E681xjJhzsMg1dudy
Km9LwLNkrq0R6NQyHZv4fAkYn91/OhGt7eKV5FAsAbs38GiUo9e2RvkqVUiA
i8+nD+/RVttiRAarJSB3164lVE4WufuEyKkr9RKwfTMl5RJaNcawmf1CAopH
8qZS0HOZS+RGXktAugSPRx36dV5l+Ll2CSi8YKGxfhGLLLwfKk1/JwHs7Dx6
HFq1gf771nt8np5kuxp0vlSbvMqIBAillkgpLmaRB3oeP875JgE7JjNStqM7
uMM6pMYkYL1tfas1us8qOizyjwQcC/ou7Y6WW9I7MD6H4xcQMxGErvBQ+2O2
iALl0ydTktDrv33szeOhQNUPn/6NS1ik027l2/OCFOAQaDI/il4f/+SIkRgF
IiXvLYtGb3TR04iiUeBCzdar99H/668pICgSf5bNxSJrFM6v4JCnANOhxsgU
ffTgb7/VyynAVr1jX4oObbrKsFKjwFcpc7V2tFlKAjNAnQKVIn80xblZ5Khp
W0ziegrsX8io8ka7c86G3tGmQIXs+rg4dFbiCdFyoEBHsJlTLnpW6LBejQEF
JC1Lk2fR3uW1snXbKZB6ts7EhodFqthsrK8ypgA94VDsIfQZGz2dYnMKWPyM
G/uAlh2iJGbuo0B2wpDwBFrnd01fpD0F1HkknRV4WeRQsNgKjwP4vIpd78zQ
s57pZ3cdocCpLfnrAtEtea/GFV0psMJi2fdhdCTtddykJwVS0oepM+jk6Bsu
tScpoGXu+UuRj0VadHGFXzxFAdenjWwd9KKktNltQRQIN13hY4nWV3v7avEF
CshsNt0ei96SMiBWHk6B5OOcg6noXI+mliPRFLhl5mbwDu0e5c8Qj6eAIa/F
3C5+FvmB68rkw6sUkPppveCH7v+a47M3hQLVrnaTVej1BF/mr3QKGO2or+lD
v5j5dCk0iwLvPO/S9QRY//ZHFLAbF5MLRV97LlaRnk+BH5IJp8PQd0V/0JcV
4Xwni+1OQL9dcdwx+yHGU71gxCd03bbxG3KPKTCkfZjLVJBFnjtf9+4qidd3
KEr1Qs97/VHiq6fA793BzzrRz96cv+DzjAJlxFHrLvT+9brcvU0UOPNlPERi
KYv8Ft1cqNdKgRfHXzyOR9/uqUtMbcfrDaxTfYL+/fBC+WQ3Bda3fY8SF8Ln
G7NesaOfAvkV9S370bFSR79dG6JAt8307Cn0NdkS4Y8jOJ8H/hgEoXlqFFLU
vlHAwCzxRQw6UC3gutsoBawOD39sRF8KtKflTVDg5v43vjrCLLJJ34rxYYoC
ToYrChLQ4TOv7zD+UsDtiML1TLT/ZYm3RpxUcI7b7/cNvbzPNMOHiwr3syT+
zKKrZa7TU/mosM7mYStdhEUePvZRn1xKBVXO8Whz9BYlIbV+USqIay/180Qr
erZ0TVOokKTGefM1ejDjjYUIQYWI+w0CfKIs8mp2xm15aSrk337eKoe+4XO7
e408FdI3rboXhw7y0ZvQWkaFLC2xqsfol0OZf0GFCkaqomWKYqx/+18q0E5W
tKqgRS/v5mBpUGEqZNthczTffAKf9noqXJoorE1De8/kyqtrUWFPVIjTS/Sv
h3vMFDZT4crPR1VT6MQg3UxRNhWE3+nYLRFnkenCi4g5Ayrcarir4ocO/ixX
PWhEhWV3BDjFJFikfCHvtfpdVFga+GVcF30zWLDwlikVjLfuCTyPdtngJhRk
QYUgPQu3NHT5i32le/dRoWn4wY1BdG7axweqdlQoE05gfUI/fEHjmnOgghdv
+QF/CotsO/6uvPEgFYp0WF75aO5R4fbYI1Qo4LlT3I4usQ1w2HucCjk73oSP
oYNTX+9neFDhnnLMBUkqi+xpKO7uOIHzsbdG2h4NTqUdcb5UeFRb4hSEXp+7
x277KSqcHcha+ggt0DbhOR9IhRUy9qn/2WTPJPN+CBUevE0RG0Zr0NIcbUOp
cDL1SpApjUWmvFIy4r5EhQRdinIvWmvZg868KCq8+rMm8T/bcphRTWKpYBl/
rJtBZ5FVFWK8owlUWHXh3Wp7tIHzUFFkEhUcuj+K9qKz/96WWZZChYalf//y
MVikYO4G08dpVKBeYXstQ1d+M9ttnEmF0y/odaboRx8KJfuzqeAaYfvaDP2/
zz+o0LY8lycJfS23Rv/3PSpMdJ4x7Pvv9ZGXc04VUOGq/pe5P2inqoGx+WIq
1Oz7cNyZYJFc3lKqZ8uo0LjR8GcCWq0k02LuERWsR5IynqCfRtb6nqzG+VX8
veYlOmnToyvfa6lwImpJ5FImi/xhV/PQ8SkVtPUe/vZBH1s129/6jAp3PpDP
otFy6cESrCYqcPV6JP9FdyY6WOe9psKXrx7idEmMf8GrpRJvqOCUpGHhi47d
SlsV0EEFyVgFs4vo8Zmn9e+6qRA9aJJwBR198myITh8Vboa+MReSYpHWr5Ye
TX6P+cDn1rUJHcSrGTg+TIUqklRwQ+dp33q6/RMVDAqD5vrRD0n+rWlf8X6e
Nasvl2aR982XLPn1gwqMPnA8iN4ICotgjArxz5y+HEXvO/PDIPI3jpfpY6sB
dNa7921vp6iQa3vkoYYM1mNltweSc1TwlL37Yhv6mvF0v8MCFfhyHbOuoo+c
6jt0cxENzgh7TpWif+q5Gb3nogHvEvP5KnTKwx8RUnw06PgdptyPtsy+rrFX
kAapfvvHBGUx3q9ls6KFaZCwq2ITC00KbaisFaPBnzHzWyVo6YsuuRMUfL8A
zf01+uVDc35FBg1Ejpwa/YA2S14YMpGkQU49HPqO/t/nYzTIsrjosFeORdZG
xohmytOg8qColz+6XHKfa6MSDTyrNqy9jX6WmGf6dQUNBGnvZurQ71WdawXU
aGDI15CgIY/1RMiiTnk1DbpW6nauRY+HGlgZaNCAau743hgdJPznvP06GvCl
39jjhv7rJbfLZyMNzJb8nq1DH/xwojhcmwZ+N6bp/ehU6cSq65tp0D18LMtR
AePbW8H9LosGzdXCXV5ok4niZ2VbaPDdgTJag152uqOlbisNxGKuRm1XZJEx
bSIRL7fTYI5aq7ITLf2kb6p1Fw221RgvskeHqj+U7jChgUWS/UIa2kydl6PL
jAZnP9TLPUXvk9+Y3mlJg/LNnZqyStgf1WUtat9Hg8blnXmr0bU7bqu02NKg
Qbnm71s0b2AM8/l+GjAvFopJLGOR9TWZnaQTDRRJ+ckdaJ8Ny5xLnPH1jBMe
8ejdzSZPco7QIF3LWoVEO+yznL56jAbJ9/LyTy5nka63nHhC3WhwtCZF6TTa
4+K1X56eNIg/VMTRh+5ZYD6y8abBaXvtx6orsH/Rmj+k70uDlA8iyepo/wLT
qRUBNIj0eeJsh6ZqyXoJnqHBkppbxk/QXgzXju9naaB5uPjoUzSFtk61KYQG
nR4XaiWUWeSVGDePOxdoIF/8/Lk8+nso350LF2nAv15pz2F0ZMXPbvsIGsAp
3bc30f/7fBXjbcwhqwZ9tF1plUAsDTi/JBX3o4X8VCz74mlw92Jhq4gK1suv
Q0H3r9BgLXv3kBtaM16qIDAZ4zHvQ3YeeulEyucdKTSQCI9vfoEWr5NbSUuj
gc8lS5Nx9Oikc+BABr5e2cXdUBXzu0NqIOcWDYq09vw4jD4qNGXumoPz4VGl
nI3+Wpzav+YODd6zNoU/+88HC0PG8jAexX/UfEdv2voGCu/TgB77ZoOUGovM
kE+R9CikgZv6tc996FyXVLpaCQ2mRk9/G0FTdh/a8PEhDcg7S65orcR6UX/2
1I0KGhQ+bxksR0umu46YV2J+pnHEVaNPJOSf4SNpsHWFdC3PKuyXdjyGx7U0
uP/t/DVFNJe7gKZrPQ3W/9342Qo99VBgr2QjDV562f08g/aZWX7/2XMamKy8
WZmP9tZ8quvTRIPpeNv09+jwxK1cMq9p0Od/n/oJnZ7Iy9vQivPx5mK1yWqs
l38ctrm+xfhoXiiMQnt3ZzaKdmI8dQ/T2tF/n8hEFHfTQHLa1HL/GhZ5skA6
zqKXBjaNPsU56BLGx/6Jfhqw3t298QL9YdHDk3GDNHANVWD+QivxNVut+kCD
X2+luaTVWeSCy4GLjSM00P8Rt24/mpS4y+P4hQaxPVwQh865+6bzzzcaaLTP
Riagx5IE5iN/0mDR+c0n6Bos8omEr7/sGA379dk4GfTPNVq7CiewPoXmfH6K
/t/n9zRQkdvkLK6J9VNUj7tlGuNB/jZdBr0qufCn3RwNSn0eKuxEv7V5v+nz
PA3M/d5F5qPvbev+6MVJh/DQzf496L2Hbk/NLKZDfJpXgv9a3D+82+MZzE2H
Vv7ComT0+YV3e7j56HDr1bLjd9CbLA3TwgXoMH1reDQPvSPnkpWAEB3qzzje
HEcXctwMihChg/dxAVbkOpzvmiAGvzgdPH0HFVLQR27SlMIodLi8XVG5Di1M
mmUtotNB9cIrH2I9rtc3pVNOE3SQt0vh1EI3b7UX+C1Jh/flwU1+aHuV3xPH
ZOggMlG55gr67Y5a6/dydLh+x8qnCR2gk7HZQpEObmlGhhIbsF4ouNxsWEaH
C85XmO5ouWe/wjYq02GsiGfMcCOLNLzO9ytHlQ4K5Tf676E3lZ/tp6yig+Ay
keIR9MC0tEXIGjrw//bo/YMWnsg3+66B46dWK8DYhOPHPfHOch0dQk12rtdB
P7e/P1a1gQ7Owbxa+ejMRWlXlLTocLv6cfYzdMfbM88v6dDh0SahhnZ07M3F
l39spkNz7acUKS0WGS/74ZMJiw7RPst7VdDhc23tBfp0OHIjYvYAGvoDbUQN
6bDEI1C1Cf3UO9bPfRsdWs5JD/aig08Ur365nQ4Vqzarm2jj/igzKmT5Ljq4
vJgONEOHDFV7BRvT4XeGhqgPOlrzK2e3KR0Y55x+vEWPPMxTVzfH8/NWuFF0
sN+pubE4zJIOn/U4H1qg895Y+fdY0eHYZvWbl9D/+/sRHSZSs7Vz0Qq7fCyD
7DA+HPxYM+jX41Pk6/108HXgqwvUZZFSmmFvZZzo0Jd19UsoWv9HbqLrQTrw
LVR216O9HT8tqjhEB0NNytJB9OjyBmmuo3TYcgB0fqP52I1fdh+jQ6dwTvip
zSySwTx25Korjpeoh0Ut2i5GLbnPnQ75PslOFD3c//wKDVT0wufX88q0R3eK
jjGOetPBziW3JApNZQ0dzzuJ83W4tYcXWORnqya/H34Yvw0UqgJagJTVW32K
Dm8O7Db2RYt77KhxO4PxotxiJMPC+Jgp47h3lg40525TZTTn5db5z8F06Lg0
zLZEcy1aeKx0ng6DN84/8EPXvLip4xBKh8AD+14Woc9RZM8mX6SDiY/lHwk2
7ucr2i+0XKLDmpiILZHopJ2Ke3ij6GDt8mi2Gs0jefCDbgwdrqq5uP1FP970
E7xi6fDrfsHfE/rYP5yRPJQVT4evGQviZ9DyEWDZkYjxF5v9Mhyt0n5PjDcJ
vebbOsktuP/NKU7ZcI0Od7zY61TRH+Uzfzun0OFFdP7vDLSMUb10/A28v31b
qzLRGgsHGdXp+P5CxR2iBiwyX/T5x883cX53VD5eg/bepHVRPIsOq+z8v5xD
r5GdntfOwfEa/3Q8Ev3q4LadB3LpwEnsvpSB7kk77Bl+F/OHN6EwB915OME9
/x4dlmk9UDM1xPXWgn9b633M33CDGwNoA97FcxMFeP1Fj0oMtuJ4qJRGUovp
UELsuvEE/fjEvtn1pXT4qJ88/wVtUiBrZFlGh9XrWsTXb2P9+/sm2iPdSQdt
cH8gNPYxxs8jxpVCtEDEBv97VXSocr+ysx7tkexm3Ehivo7pdK02YpENrAf8
g7UYD0YBxsfQm6lKeTNPsP5kDPiVoUs7xteKNdBB2VTeTnk79mP+rOwVz+jw
eMHb1RjtrKTOufkFxu82+9D96Jebhw33NNFhV9eqLXHov4cC/Jxf0WHmgPeV
HLRfkOhV3xY6HNALet6Oziqsz7zYRofe0Mw+4x1YX10L0pLe0sFdMKN7Pzrk
+PeInA7MR6W2mFL00UeXj5Z0YfzFr87S3In7n7IHm2p76HBGYmDKCy1Hd/zb
1Iv1o5Yen4aW/VxU0tlPhzgjk4le9MKV8gOD7+kQYsGUm0G//R7E+3WIDqeY
NNuVu1hkoBQta+wDHdIi85Ky0e8eh2lNj9ChvLXNZuluFinR9O7Z/GfMD+qi
LZ7oqsfS5ou/0cFyveyiR2ixY+bd3D/o0Ph5i5eZMYvkVz1nxzdKB9Jg20Qi
+vTT/D7+MaxnNo4WSeiVwV32AhO4XqzSvvsb3cdc0s8/SYfU2bayzSYs0rhj
pQPfFB3ajuYan0Bv8jUf4p6hwzslSdMK9FYD76OL5+gwIp9q9xPNKXFxfP4v
vn969evFprh+scJDphfoIMv0CeFGGz1yp41zMiBVt0lUBr16Qb3o62IGHJOx
hK1ohmy95RAXA0je3XdfotsaJBd38zBgLsl736Y9eH4t1fJXfAyQj+YoX2aG
92v53v+JAAM+tp/mY6HHUlcZli1lQN6UzaMQdPUaTpm7wgy42CGgeBnt8taA
K1WUAbszk/ldzLFfnh6ZjhJnwHkrXu8o9P/+Ps+A69zvRcQssB41fhV1pTFA
+67x+hXo+TtSG2wYDFAWDqvagL4duMttG5MBPamdcsZoY0mHsrVSDHh07YaQ
G/qP2CaqrAwDStYmFmtY4uvvVFzkl2MAR8tV/Qj0yMd6kQl5BjxWEk39jGaG
a91/p4jv5x8r2bOXRf4W+3PwyTIGrL8yIOKObm3s1Li7ggHrWqNCU9GixY8Y
sSoM6E8R/rvKCvfLWQHESTUG5K9rVd+G3rLh5zrrVQzYbxGwzxL9/dWv47pr
GJB2PW3pH/RY5j5SRoMBG9XMNcX34f6lbG4N51oGbOZff3YeXT18v/r9Ogac
eOBrQbXG/dtbQ9eaDQywUTqx3gnNEE7QSt/EgMOx715Fo+O+H1kRqM2Ahe/D
M1XoM7mJG2x0GdD1+WKprA2LzLb6fGSDHgNc3LQcbdHeo+qVYiwG6DH0F79A
823TWfedzYDPn7NlNthivBBvWp5uYYD6u7UebPQPnifxaYYM+BnKVr6Cjk5+
e8p3GwOCdZOu3kffYLVc2r2dAWdSvUTL0R72gTWKOxlQYSchTbdjkeo6mbIz
uxgg8m2/1G90N5Urt9kYn09xyHC5PfafkkdsbpoyYM+hSi5ntJ9rzEYfMwY8
2SprXI1ultNlbbXAeBEtXDGLvrZV4yR9LwNWu0xGKu3H/v7jqs5PVgzY9jbI
5QB6jnPscJk1A/T5Ao43oNOTNy0Ls2XAWc1kCQ0HXK/yasUt7BngJcvZz0Lr
ahmpyzswoPFRSs84enjLxbM/HBmgsHijoaoji3zRummh/AADUm7Hq9xGbx+l
Fpx3ZsCRxq7YUfSZgo7E3YcZEKVf5k5zYpGzmpr5tKMMEHRwPZqAjkvvn+l3
YYCA+LN1A+j/ff+EAdXyi5x3H2CRZ6UWNN3cMD/cV+95gi572iW31oMBf61v
LepHK8W8MZz2ZMDlGsYD04O4voymZ1aewOc3nJE7hqad+rkx2IcBFP9725c6
4/nb3Hm2+DJALr3ujgp6tvy1MLc/A+qcuOJN0Olc5J6GAAY0SeyuOvTf8Ttf
XoedZkDNK3n/J2j2o7lLWwMZEPu9rqsBbX8oI5g7iAHDJzJJzUOYz3MhJU+C
GVDVT9m5D63/c/vykHMM8C6Vfd2HXvwmo2PzBYyfX9dUxtHnD65umAllQEOH
ZnfWYRbZHnRtsuQiemODxj00uSb8kMclBviVvdPiOoL70ax0mkokA95v15gP
QqdvusA/FIXnn484RzmK8+3TrXc9hgG/19DMrdBGQvple2IZ4Kyb3XcJbT/i
4M0XzwDHM18tytEClLfe1Qk4P9zWVrou2C/16lV4X2HAqMw553b0zjIwUE5i
wNaJ3gTFY1j/zU5Se5MZMNXF1bQfXRQXuOrydQbc3jKhEoB+FT0ZxU5lAKP6
ZuwQOvlawLqJGwzYNdjsJHQc452drZSVjvH33VXtJrpup8R+i5sMOPiQtqsB
/bLSfnDJLQY8/XBl1MkV9xPt0g+Kshhg3ZPHLeKG/RL1e6NjDgNkWKETGujz
mx1XCucyQOxwKO8RdJWxWN+jOwwoshITjXbHfjn6Ss/hPAZ06iffa0R/CTm3
TDyfAYlvX0x/RK+fca2uvM+A70+p7nc9sL7xfMk+XMCAGXn9nW/QLJ6IXpEi
BmSwL73pQX+7PnSgvJgBUpWuuXyeLPJh0QUtx1IGZEtuCFBGnwxb5MRbxgAP
tRVt2WhI+dKdX47ry2qPhhn01SdNWeaPGKDKo2x22Qv7HzntuunHDEjQZ52b
RQ8p1GjeqGJAqciZ/YYnWP++f4Xrha/URns0n+cukQ81eD9+SfHt6IV1rmfC
6hhwbfC2l503xv+VTj3lenz/51SrAnRKJmH1/CkDjLsyB36hs2srn7o0MiDg
0IWsbB+spwU7IvmfMwAUll9fQK8M25Wb+4IBurwvVmqfZJGVhTuktzUx4M7d
kJgodPd809cPzXj9WIl5Eh0TayN27jUDXq/58EjWl0UmfA+Ik2llwLPwH70v
0ObjBccftTEgzGUk8z16/P2FDMu3DLjUSRN55Mcid1udUv/VzoArl5T6ZtDz
FlSpiE4GHI9VTvL3Z5EWOt0HFbsxv4c0OV6hbV8Z8VX2MKBtOaVtBP1y/Qi/
RS/Gc66Qj9Ip7C8WNF2+9WF+3ux7YoKmEwXLzw1gvAlvXp2Bjh3o02cMMsDO
SzW5FX1VTLc6f4gB0/r3v79FP+ncfk3/AwMG7ws5LDuN/XF96NuOj7g+uFi9
MUVzvHHzPPaJAbaqx6bc0FyuQW7znzFfuEcDvqD/HNjYdPkrrm8LVbhnZpEP
psWi5b8zgDt64WsDmqc3oqDoB9Y/nub90YEs8r6q9MYtowxwupv6tA4tfWKL
/Jtf+PwrM9xTzuL6WeDncWAcn+doRXgberXlWoWxCcz/6Wd71gRhv6A/qhU0
yQCTqYRrZmj1ZsWypVM4/nE3TqwLxv1OtdH1a9O4vlx4b3QJXWXZPrxsFut5
744r+ejbhqzEwjkG8J7eSf+L1q7guKc7j8+Xuzp0eQiL9De7pNa4gPUtqskr
HH1TzUxiDycBb6SLklTO4fN0vTrYs4iAFcfOHDiP7nb2lj64hACXnyaXtp/H
emtdzPrGRUBmZIV+BLrs0aJXJ3gIyDln+vAJuoin9ekMLwFt7TOGay/g+qmd
oBzMT8CviH3nItF1LRV/uAUJMO4RqAsMZZEH60rVI5cS8OHNhEUievDiVIeI
MAHpW8q8Noax/n0/kYBF/cTHQHTymOAxuhgB/Evqf6agbQWqrK6LE7B2bYWY
zUW83qBnsRSFgM0G5hMv0XV+VwLTqAQAx7Z8ajiLdN2T/FCWTkC7qqV0EjrW
b2R/BoMA206FnTfQwf7ffeWYBGyVYArrXsJ4OkrjyJAkoPr5ecs76C9Dr6dk
pAl48HFrwy/0Av8FpxsyBPwW10xUi2CRF8Jv6ErKEdATC1+t0RzxYZeS5QnY
pPHA+iM6cDjXiKqI739CL7kaifuZerdTcUoE+HXYVyajQ3n0ZIWWE3CecI9b
HMUiF/Gd2xi+AucjNuJZGLqm6OaTxSoEHBx6oBIcjeMdyFV/RpWAS2k8Aw/Q
+93EtP6oEfDynu1RegzWI8oaRY9VBNxVvNP2Cj2c+OTcp9UEOBR3szwvYz+T
vm6fgzoBxxWzPEPQ8r6fbnVoENCqX3+dGcsi735lHd69loCBOgedTvQ3x+z0
J+sIKFqtr+YUh/vJV/6mWhsIcNs0PBOJ9qmUCbi/kQDnyfL8PjRj6yyhqEVA
btTsp+/oY5Lua5O0CWhg1mjei2eRz4N7nwroEqBx1F53NgH3aya3WwM3E5Cn
flJVMhHr8dQaq196eH21UvkMtMXZzr0HWATQkws6v6PNgxda3rAJ2Jv0ZYns
FRY5pcHdYLCFgPUldSIX0Q8cdm4oNcDxfv9Aegid5a6usGwrAZrJ/g+XXsV+
1F4iInEbAY3uA4kDaGa9mfuS7QTIuWo+bE5ikW/ad7322kFAjDfxbhZt6+iQ
P7CTgFG2nwLfNRap2vyJb/duHI8Lq7y2o/vltwxVGBMwEqB25CD6OecrreWm
BDjxzM7loEPufBCJ34PnLxmWOXMd+4uZIed5MwJMgnhM16Tg+uSqpHXUgoAt
Y11lx9HZUlzRbZYEDC39e7EYnVvf66hrRcDFc1/c/FJxPa/mK83eR4DX2+B9
yWgRrqFLwjYESNh8VniI9tOoG/C1JSBhu4UK+wbr3/d7cb4KUl82oz2750S2
7ieAwq/WtjONRdaX8Hy750DAoU1jW0bQO7RPG0k4ESAYqk29nM4iLTULlQMO
YLwaNclJZuB+nZ8zqv8gARn6X37vRGu3VJ/YcoiAz5vPL3+AXrXZoO/2YQLm
k68qG97E/VbeyEvBowQc5Z6JnkZ/kf6r5+GC8Xt15u9wJtYznZ4NbccICO+K
+77pFovMsegoXudKQBTHxsWj6GAHw4dX3QjYF+X9dXUWi1SeO6037U5Ahfpv
ed1sFjnh/mqXtSfWl27NXcZo5bzYwQovfB5x3uJn6IDttHnCG8e7xP7yuRxc
36OL0gN8COC0q9zYhuY5VP686yTmnxSfh9ptnM+jp05v9CPgdOqhrHfoX707
Sq/4Y34saVcYRI8UnPabCCDANP3d7z25uH4G768zPU1AcvDbcMc7GF+JBlfz
zxAw5xXanYjOGjw7wX+WgLif5w4/Q58U3N9zKIiA2Sbzywl3sf87oLmzNhjH
T+znhso8Fmk9snOr1DkCJv64RqTdw3ptMPvS9zwBix0Lp9rQBT1RvS0XCNB5
YMf6iHYsNfNXDSPgyjBHiFY+i0yNu55+/iIBz062b76Mbu4tMusNJ4CR9SKk
9T72s6Vf4tZFEGBhmVA3j075GmUfFUmAvJiFZlgB9lMLX0qHowiYWf3zVDg6
RtE4RTsG8+HW2bNd6CIWj3DcZQLef1Av3ljIIjN+7hf+FIv5ey/19s4i3J8H
ZKXqxhNQareEolCM9XJQoSIugYAvGVnJR9BP3y1zHknEeCwczvyEbns9fUP7
Kj6vv3ceowT33+9GDsckEXAu2VO0AP2rTZscTMZ6sKn8vm7pf5/HwO111wlQ
yGgI8ERvtdWTvZiC9Ve05rTTQ7y+3LkV3akYD36TTdPoDdoWNappBCz9KbE4
qwzjVXDhy+l0AgZDKtenlGN/dP9ZVlMGxstdoQdKFSyyeOrvL6nM/+73x5tl
aHev4VeutzAfl1PaQ9DjDvV6lVkECB25KtGB3lvziSWYQ8AGp1M2Bx+x/n1/
HufTq4ul/xjz9xhl/nYu3v+tH14R6AMm98om7xBg7rKqsBq9s/cW95Y8AmLT
Erdcr8T9WiH70+V7OD5OvQ+2VOF8qTTZ9eZj/e5Kt+Ouxv7K5tJh5QcEPHRM
utOCHmOQXD4FeP1i3y2hJIv8MFa0kSzE9YB9UcW1hkWu07jLIVBMwLeBYHWx
Oha5ZuCLnUUJjlfW4w930c61D03SSrFeB3w3W/EE1x9by65PDwm46by7/DRa
8Qf/lHo5Xs/OVnppPfaXfox7ARUEEGMnRo+i6WX1U7WPCAgQlCtweor7BxWz
Hv5KzP9e+ZgU9GlBLos9VQRovf7WntGI/YWV9KHkagIk9/SbV6MjX7wXGiCx
HtfYVYg8Y5HHB2KNl9USoKgxvtQI3dPmseJ4HQHR5g8UDzxnkeKZZHLBEwLY
YmljR9ABgnWZk/UE1MTZBx18gfUlptxQuwGt7dUl8xL7SfcPIWcbCVgjM/lw
OTrxXphV3TMCphPNF46h80TfN3C/IGC4OshIqIlFyilqtBi9JCDp62K7HejG
NY+8I5tw/utPxl9uZpG1ho8Lm5ux/ia+fsx6hcc3+kSIvCZA71xKZAPaN1Vp
wbSFgI0OZsX0FhaZ9kpQKL4V5/fURtZ69MUfR8va2giwszZYXIre0ndqXvwt
Afanq81utbLIn1uDB8zacfxX1j4dRy+5VmYf30GAjY6a02Ab5jevg39rJ/ZH
YfEwgyajStaIduP5Pk7aK73F9ePz5HnjHrx+VyVzLXpRpuPJqHcETHLud9nb
jvHGo8n1opeA1M87W7rQS1Rvq/P2Y78jxnyp2YH93ue/s1sGCAjckTOr3Yn9
0ojHweD3BIQuWPo4oQVjdI9VDmL9cBxPWN6N9UU8XWR6CNebxxl09x6sJ55v
zNd+IGBHs+LLDe+wfz1O3ej+EevfdB1Xey/OX3xGRe4IHj+mdaMLfVer4N3Q
JwLyvxdeW9mH/eW5oBtSXzBek27L1aN/793Osffrf/Whav5FP/YXx4wWXf72
33pSwpU3wCJp2mW3Gr9jvr1M6p57j/2QSMsIx08CjvkUE5GDrH+/X8Hr50jt
ah7C/ebgJxOPXwSItHVdyxn+7/NcG9+cMYzXkLPmIh9w/jj26/WNE3CvJ6tN
7iP2Sz/VciV+E3Bk8E/BAFqaNV+8fZIAlu1le5kR7F+bBA4E/SEgeNLR6Pwn
FrlLO7qoZArzUX7PXDo6eLYy+8s01m8xp8WmXzD+drXpyMwS0P/GqmTXVxbZ
oct90mwO6/fiC7JXvuF6lB29J+wvAe4mNjoG37EfXXmrtWKegNp+ev88+r1R
4OT3BewXrqeFG//A/fVm8ypZTiZ4/N53QP0ni6RI2amYLWLC2hs7ZPLQrk9f
aV1YzISWN++tA8YwPz8P/ixdwoTZJ4nfJtH3uZqMPnExIWN04+T4OItsOfxk
G4OHCau+m8ixJ1jk2ZUL34x4mTDWPzu+6jf2a/pF6wP4mOA/KdR2HV14mLrs
Dj8TKi4NbDaeZJFnltk/6hJgwpuM9qRW3Pm29VZP8i5lQvMspfEdesljj84N
QkzoP/9IYuk0i9QhsxwOCTOh3uqH0kd0dUV8TIIIE6LjOGtsZnG+d7k714ri
8VdbvZrQdl+OD/4UY8KC7v21x+awP+kguaUk8HmPH1IO/Yv5oJLWakRhgvUH
7dUW83g/TdqGJ6l4v06W1xI52OTLgOeON2lMuPYy3pibk02eJgOVmulM4CuV
SBxHKy1ExE4zmCBs4pm3bRGb3OuilK3IZMKTU03FVxazyXbewAPGkkzY3fsn
cJSLTTYUNz7zl2JCrAh9/Do3m/zC3NiVKc0E0bWmOUk8bPJ59XxskwwT5tVX
D4Xzssmfv3dPTMoy4WJQKLuIj01SP1lzyMozwYEIGOQSYJOOCeal2xSYwJ8Q
OUNFX2xypXoqMnH9iBdeLMgmhbQ7ZZOVmLDXY52M+VI26bGv/i25jAmtJ0UF
BITYpE3AoXWfljPBcPGTp/Xoziff9ISVmXCSdS2fEGWTwevCf69TYULXK8tV
LugHN45b2qoy4ZtDUUIbuvB2g1OIGhOeEb6FGuJs8lfLc+L2Sib0vBI19pBg
kyvdswObVjEhp3PWMoHKJrPuXooeW82Et7GiU9I0Nrk1PGc7TZ0JDeRU3VsG
mxwaUCvS1mCC9MKyIHtJHE+n7Y37NZnguYvyaVqKTT5OWH3p3FomMJsUVgbL
sP/9vowJJZwpX47LskkxeyHK8/U439e/dyvLs0mBTYf6vm1gAu/k8o5vaMdd
bAvhTUzguNofskWBTVL2tfirazEhxkpPeEaRTfqOsXaaaTMhtMX9/gclNml+
sfaltw6eb3hV4eNlbFLGKXg2URfHY6XH5VllNrk8Pa+zdDPOj+itkKcqbLJU
2+tghx4T7sS9uf4SbcTDkfYHmHBvYT4zVY1NFuefu0hj43ibXdOxW8MmTR6q
yG3Qx/HkGVYVU8fzBckftdyC+ZW1KfG+BpuUYic5+Bjg9dM3vT6vySYlRcp5
EgyZcPSMvm7HOja5uaPAvnArE1Lep0urrWeTU/b3nV9vY4JYlqV79kY2qW/U
J/nDiAnEmY+Kjeh6sWPnBXYwQf2IuGe3NptcEAtJWbGTCQ9XXE/j1GGT7qeN
nQ12MaEx8PTZ2M1sssZ2oc9xNxOOLb8XaqWH85tSyRdojPHe4ajZCGwygLP0
Q7IJE6pz7dR2sdmkn4rEiRJTJjS1Lyj5odvjFxe+3oNONaY5b2GTnon3b341
w/GWtxaKMWCTBgf0DbgtmNC5nMtw5TY2GbP0S7KsJRO2b73pWYKeCWpO19rL
hAfPRUYmdrHJ2lCmtbkVE0IOrNOXMmaTPU9m6133MSHqr+zdtSY4PlXJw6HW
TLgxp3u0y5RNOrTKlKbZMOFF82HNwT0Yv5vLtMpsmfC6XHervhmbPCwV5fXa
jgllfPqRohZs0vZQo90neybczrrwZpUlm+T8GT+3sJ8JqUspAx/R0S4MY5oj
E/oUx/zvWbNJRZcQi1VOTJCdT3Lkt2GTY7ZTwgYHmGDgmjg358gm7S7fCrQ5
yAQJMXMd7gMYP2seZHg6M2FfnF/6FmfMR8Mt/mGHMB90/A7FHWKTqo/DuVIP
M//7oUcyxYVNfrPKNSw8gvn6de6k53E2qVv3QqfhKI7HxwA+aTc2WRDE+NTj
wgRa5qTKKU82KTxZsW30GBOSZL+2VZ9kk26HO+2XuGI+J4pZy/qxyf1TySp0
NyaMRv5qDkUL5i3PU3XH/LwaPNKEtnPOHdrswYTfq3mPtwWyScaIYYupJ8av
i+61krNskufNcp+DXkxYGTtvtPIc5s/9E69OnsDjOrVbxUJx/ntMBy56M+FI
/O3IAPTzlM8513xwfobvb5mNYJOaNKdleSeZ8MNBfdvrKDZ5znjQptKXCV8T
tRr6LrP//T4U67HS4qnsRIwPz8Rvff5MCD6tWnL8Cpt830jZ9jMA14fjkhGp
VzE+KjbaLJxiwqXdS7SPXGeT9wsUlwmfwfiVe+M8lYbzNbVwWzoQx6ddy7n9
JpuseDw6tPIsE8KvaKmuuscmuZZKdegE4fgvcJUloqndd0J2BDNB39g23PwB
3t9k9cd9IZivYuJFMaVscpIasvjIOYy/Or3UTVWY363ULp/zmL8fMsL/VrPJ
2xmZh89dYEKYAiGYXsMm8wd23b8civF94rmZZQObvNCk9SA1jAkKIo1+Is/Y
5JLwGJc7FzF+PnISr5vZZAvVs680HOuLic/+4y243tgtEay7xAS36rBXyzvZ
ZMoyt/HmCIwf9Qb6QB+bnJBuS+iOZILS3EdJ2lc2Gdm+d/RDFBNOdIf2xv9g
k02kLPevaKynun4KUbNsMnvtnvbZGCa492zeVrJEn8w8LuLIHcsEl36tuz08
+qRQ2NlskTgmLFbiqBTn1yf5Q+uyiXgcrzvV/bxy+mSxMYeTYgITHgXE9mgq
6JPa+fs6VyZif6BrYu69Up/kNBnn23CFCed4r1s9Xa1PljaMTupdZQJ1jqDH
b9YnT0b6pG1LwvUojyP48zZ9cnD61mLTZCYUc9N+RZnqk/omNxX2XWPCtu+a
Z5LN9cnU4ssLDtcxPgVfB7Tv0yfb1sRfPZLChAj/C9lEmD5JFr386p7KhHV3
4xiT4frkHlGHuZM3sD49508+2KxP5izyeHYmjQkFqSdlP7fok8uXyZidT8f4
1FRJuWqyhUxfiEm+lIH5JJxrf+vGFvL/AAkRcX0=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
CfX/ADXSWhU=
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw123k4Vd/XAHApJDLf4ZyLUJpIaTAP614ylZA5MlRSJHOGSkhpMCRRRJFk
SOYpUUdRKJUUooyVoQmVpOJd36ff2z89n+e655y919prr31dsru8t7txc3Fx
jczn4vrv////F/skTCzXXpX6qj4zy1H6oOt6hDfQeVaVEph/K3QscUL3dFHv
mxS62v9en9J9Lepz2klWjdoQ+/knm/qla5j9+3uKszrFLbN6RuDmH12DOS/e
T77qlO2O9YV+cnO6Spukfj49pU7539TULb3GBUrKfu/Wymj87/rzoNg4cmTA
XIOiW1fcKfHkhvG7i/i4dmpQW1WPVQ0pzQf5Fvt+h52a1NEr7bX0gfmwr6fo
2/Z9mpRFjLLCghMLICc+wkw2WJPKudNJb5HkAS55jt2OXi1qiZGpOj2fB0TP
VRc9+Aj/e35eqFk34JD/CajQYzP1nvm8sOp1keiVz0CdTPDUOLyED/L66blv
0IplC3hV4vigvPrPuSNfgEoY8j/M+ckH+5/Fa/5AlxR6X1ByWAjR9zQsYr4C
1dSoHRRQsxAUKp1ZouNAjZe1/T1K4weX2EAVL/QvxfNHcg7wQ83ne9ER6H/z
xw98By0eFaNbyfGxCyKLYO+4ZN6+CaDORc2v7tu5CAbSD+rFo5eaJHfsyF0E
/JVJXPMmgVoy2/pYbXwRHHKxCYtHX+4Q+HVjkwBw3YzZ9gy9QyHB6GmwAGQ+
9hAkvgHl2VR9t/22ANQbL/x5EN1W/ep717QA/LSgSyWjpxbfjvizSRDeO16v
70A3fhO23OErCF9e/ajT/A7/i68g/MzboctB1z3S+LJySBBkZZOF3dG57AeN
D4nFYKc+apCG7lh8at+vbYtBhzvKROcHUIv91mu2Ry4Gkf7Lcz7obQVxm90q
FkO78ZWQafQabSWrex8WQ+yXHTstp4AS/SRBH6cLwVg7+/Q3tJ7VHxUeAyEg
6IMSQj+But6cdUggAK3u7WSBPsA5VyeUKQSjghdZlejK8XNryVYh8BiiE1Po
wDvmWmrTQnDiUMsXsWn4X34Kw/4Sj0MX0UWsgqoXW4TB75mt2xf0HJfFnEuA
MFwudM7S/AWUcV5hvnyaMPBVxT45gb6pJbdv5QNhmPo0an0VLSh+P8hnVBhe
X3t9qBX9bbbGPpJPBC63+Q1bzQBlfmD14x+ECHzfMfVqD9o+9VYmTVEE3jhA
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
LVs6G+vx9Dq7CV0S1vYf4tFGWx/rst3NJmHZkTf0fLRVxFzbSw4Ju88ZZyre
YFPT63kfbdYnQezx1Rdb0cUuW1UrN5NgVb/p5AN0trfy0uWGJBRWD82n52A/
6iRxNsmIhM3FVrx7crE/brT0XmBCQpWCUFsq+mWH6XO/LSTIfFO5fg3t6OpS
2L+VBHW2Srt6HptSeDrCv20bzm/U+tPF6D45/aEaMxJWkK8H5PJxfPOeaayw
IGHElp9IRkfmvxdJ3E5CgcTVzny0x8yQ26wlCRY1D2p+o9le8hr7rUkof1QQ
Z12A9V2KJ67dhoTzj9YtPIzOa3zrqm1HgtJF4etP0Vvv8VfesCdhqVNZo9It
NiXCM3RG2IGE2/d4H2uig9c/6A9yJCHKMu3NbfS/7/difiqrDg6gfbv/iBg6
kzCeaGHcX8imGiv4Pt1yIWEu+dVOzyI2tUXziLHELlwvZ0/Zri1mUzYbSleF
7ibhylmnfi20+aJ5sX17SNjnQFVHozXb7vnr7yWB9WmK3YFW0tncm+tOwjW2
1OrpEjxvFQw/EdxPQpxJrYV6Ka4n6b+6Ph4kxEo+NfRF39XqUW33JEHWQVnr
JjrHurN8kxfma0hDSw06wsWg6uJBnI8XHRq7y9jUqj9HdH95k+Aa4SJxHv3d
+5npDl8SsoTaOFzl+HpBwmCNHwk6NJ4ogwo2FWrCmCUDSBDEHXJ+Je7vcWUZ
oYGYP3OLPLXRfHtvt7w+RMIxHZGGHnTf/sNH1IJJ8Atu2LO8ik1NvN1SmRxC
wltlgc9p6OGSI8HfQ0n4SF/wdcFt3D8jnB9YHMH8lAxx34S2TNp8sfAoCaFc
Gsd/oLMHj31fdIwEhW9L8xtr8P6Czj17w0no7bt4TPEO9n+7N2y9H0FC4krd
g2q1bGrH8FZDqeMkWPaVae9EX9v8+0lQFNY74eyNieiSnti3bSdIuH5cIf8D
2rXSMkQhmoT9QVUnBOvYVPr5yxlRp0hg7glz49zF88XbMsu3p0noLjCYSEXr
VY6d33SWhIfzLdfq3cP+4mOsU2wM5jeR4b4VrTI3VvkulgQV/rvC8RSOb5lZ
mmY8jrfypvZfdBmbT/j8OcyHxOmDGvVsKvOrs/BIAgnNJn8Zg+jS0Ox07cT/
XLG/9z7Wy8GlNecvYD1U3LDiPfrhm+Vuw0kkdPSFG3IeYH48/3VF8yIJl7h8
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
          "]]}, {
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
F35oZ+4g/w8jglyK
          "]]}, {
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1AlMlEcUAGCUm73+n+LKIUURA+tyVFBQge77hyOIsoBHELyQuEhcrCiH
CCJCkEMEXcXaCqioVWQBg8bKIXVAQakFxeVoKUoVBUGtEA5Zzs5GSSd5mXx5
yWTmzZtZFLJvvWSumpraJhKqeXY4WY+ezbBn8KdV49PItke0a0tLQyYxS70k
rv/MoKj2pwB9DbfZ/KjoYmbMNJvYIevjZwYrRVKLT0IfdwbPXbh0nCWfFBXl
RRSqHBBkX3rAfEbkJVy6QHc7gyPlzqJbl9VAkdW1x3T77PpzII9qNFdmMZi/
6U5VmXQujPUnGdlkM3idU+Ldblt1OM6zuON8ncEJFxT3+K/UoTnNo15l/xPL
hBrHNGBNsSD2TDmDr1e1839foAkpJ6ANVTHYzMtnFb9IE6z6nz3suje7fy3w
31vN49UwOC5xvEZapAUdUSWeKbUMTpVJV8ebacP9idL5/IcMtr6toeWYrQ1p
LOWKC+0MlnVHxqPP2tBybo7eFeKy0n05tlt0wEgndH5lD4Mf17kejKrUgWyt
WAUmHrjdPJUwTxdextAfY/pIpaxPH74ergupN/zhVd9s/XQhqkanumuMwY3G
A/05lB4UHUtttVUy+FSKennXNj3I6SvI/TDO4MXeP7YFFepB3s6G73ZOkPNN
Nz5ZOaAHyqYQ502aCOe2sZTXVrBgj1iyQV0L4SChzKsplgXiJOFUGw9h6ePy
3xQVLFie9ItBH3Fzeevwn2MsWEYv0lyij/AopyJpcgUbDIYjnpwlrhvibQja
z4bjwnU+VwzR1/tlQ0L+90/vElc/Wv2vVTcbnrFHXbYtQLiQeVBXb8QB/SSX
zKPEbZz0MKWYAw29mgIPU4Q5B+ydFckcyDvy9nEYsbg420Nyh+SXmxXJLBG2
cbXdeL+HA4GjvRE/E9MfDPgDfC5M9L9IQkKE3TZOOmp6ciHdpMHJi/hqw5UY
VhQXLuY2yT0cEA5Hp6q5BVxweB74QEr868ApO+NGLnQmOujZuiIcXeXnsnKM
C5enSmh34i/9yYPXipeVXm4I3zQpvvt8LQ9CD1qprSeeUfOfCY7iwRBfGu3k
jfCaG6VFS/J4YJZsy/IilruYh1k9IHb1jBCLEWZ/U3swoo8HF/f7pp8jHpqu
DEzWpmDfpOPnDj+E/cKXPhkxoqDl8Dm/b/0RDjxfUjDPmgJv6e12y80I+3jW
171xpaBDUL7blfiQ4JFS4kvBuJNlvO92hDPtJZ25wf+bE67/Pn0/BV5jO1oV
wQi/77RMsUumgDIeeKWyiWH3O9lpCmxOqq3+Yxf6+v4oyA0ITFU5WpBz5vQt
Cm4+rTmwczfC1xZ7dyyvpeDeiE2ghNiGtho830xBWXhd49FIhFc1VV2q/4eC
gFj5axlxlXFOfsUnCnzf7UhOOYLwImZ3RvQ0BeYhVOFV4oY2i+EJNg2cUM2R
Q4kIiwKGt4pNaDAp+PtZInGPnbnDDwIael9/PFmSjrCpfLJtqxMNCwVOl24R
b9W+fN7Eg4b8OH5wiwxh/Xe4Vr6ehgy7sLetxC7269K4wTTUFY/YyQoQFogX
G3jspWEw+oijypFlNzP84mgYVvATBhsRdj8aO7UsjYbOyOSXKn/5f2gwfWFo
SD9HWJJ/bW78JRrie3nt+sTJb0Ky3hTTMGkcXvjXWjfcIhnVtaqgQV7sUazy
QKjFZpdKGspnhEOWFe74P9FbZ50=
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, 
        Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, 
      AxesOrigin -> {-0.29082129429742515`, -41.44653167389282}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, 
      GridLines -> {{2.0794415416798357`, 2.302585092994046, 
        2.4849066497880004`}, {-41.44653167389282, -34.538776394910684`, \
-27.631021115928547`, -20.72326583694641, -13.815510557964274`, \
-6.907755278982137}}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotRange -> 
      NCache[{{-0.29082129429742515`, 
         6.907755278982137}, {-Log[1000000000000000000], -
          Log[10]}}, {{-0.29082129429742515`, 
        6.907755278982137}, {-41.44653167389282, -2.302585092994046}}], 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
       "0.01`", "0.001`", "0.0001`", "0.00001`", "1.`*^-6", "1.`*^-7", 
        "1.`*^-8", "1.`*^-9", "1.`*^-10"}, "PointLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7,
                 ",", #8, ",", #9}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                
                RowBox[{
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                  ",", "True", ",", "True", ",", "True", ",", "True"}], 
                "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}}, 1]], "Output",
 CellChangeTimes->{{3.8888344857065096`*^9, 3.8888345321007605`*^9}, {
   3.8888345914082975`*^9, 3.8888346132663774`*^9}, 3.888834644967688*^9, {
   3.888834680346467*^9, 3.8888347261639147`*^9}, 3.888834765556828*^9, {
   3.888834800356682*^9, 3.8888348285649524`*^9}, 3.888835210860131*^9, {
   3.8888353179890103`*^9, 3.8888353661059465`*^9}, {3.888835396452684*^9, 
   3.8888354198927507`*^9}, {3.8888354557602396`*^9, 3.888835585262613*^9}, 
   3.888835626680581*^9, 3.8888356618452673`*^9, {3.888835764274089*^9, 
   3.8888358314843025`*^9}, 3.888835956247164*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"83ee181c-d00e-40f0-881d-2e0bcbea472b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141, 605},
WindowMargins->{{1386, Automatic}, {181, Automatic}},
TaggingRules->Association[
 "PresenterSettings" -> Association["Dialogs" -> {}], "TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"9a89e6ee-4ef8-4fba-ba40-d021a52ed391"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 452, 7, 184, "Title",ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],
Cell[1035, 31, 516, 9, 83, "Text",ExpressionUUID->"d9789bdb-8585-4f08-8d2b-964c5fd128ad"],
Cell[CellGroupData[{
Cell[1576, 44, 343, 10, 103, "Section",ExpressionUUID->"7ab91e85-c165-4f8d-8bc3-c05a0994af52"],
Cell[CellGroupData[{
Cell[1944, 58, 4745, 129, 751, "Input",ExpressionUUID->"91fac2ec-f2f5-49b6-9969-cc84d1680bf4"],
Cell[6692, 189, 787, 14, 52, "Output",ExpressionUUID->"5aaaffec-ad4a-4bfe-8dea-5981f00dafaf"],
Cell[7482, 205, 110517, 2166, 419, "Output",ExpressionUUID->"5b88b1bc-db91-4833-874a-73f25803d158"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118048, 2377, 406, 11, 97, "Section",ExpressionUUID->"56b5e8d0-d24d-4e73-900b-0794b616dd10"],
Cell[CellGroupData[{
Cell[118479, 2392, 4935, 132, 746, "Input",ExpressionUUID->"89126a71-4938-464f-a0b1-6bcedb2fcee5"],
Cell[123417, 2526, 861, 15, 52, "Output",ExpressionUUID->"667f73d6-bcc7-4f77-a6d0-de6ed55ad165"],
Cell[124281, 2543, 384699, 6675, 420, "Output",ExpressionUUID->"83ee181c-d00e-40f0-881d-2e0bcbea472b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

