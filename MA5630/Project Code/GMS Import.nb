(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     50736,       1146]
NotebookOptionsPosition[     46999,       1083]
NotebookOutlinePosition[     47426,       1100]
CellTagsIndexPosition[     47383,       1097]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Importing GMS file to Mma.", "Title",
 CellChangeTimes->{{3.8637048303114505`*^9, 3.8637048307664013`*^9}, {
  3.890821553149233*^9, 
  3.890821562673831*^9}},ExpressionUUID->"46447238-1fd7-4f26-bfff-\
bbe0b1a5ce95"],

Cell["\<\
My test problem is 
\thttp://www.minlplib.org/alkyl.html
It is relatively small.  The first import format target is the gms file
\thttp://www.minlplib.org/gms/alkyl.gms
The aim is to import and process into matrices, vectors etc.   The second one \
is 
\thttp://www.minlplib.org/gms/ann_compressor_tanh.gms
This one has at least a Tanh in it. \
\>", "Text",
 CellChangeTimes->{{3.890821565882245*^9, 3.890821583677009*^9}, {
  3.890821617703385*^9, 3.8908216663970013`*^9}, {3.890821718831568*^9, 
  3.890821756304463*^9}, {3.890822125257989*^9, 
  3.890822170560253*^9}},ExpressionUUID->"e6d55b36-c37f-4736-8e1f-\
cb03a3985015"],

Cell[CellGroupData[{

Cell["Alkyl", "Section",
 CellChangeTimes->{{3.8908221761297965`*^9, 
  3.8908221772953053`*^9}},ExpressionUUID->"a88f5554-bf7b-4a63-bb3f-\
f7df5b6068bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetOptions", "[", 
  RowBox[{"ReadList", ",", 
   RowBox[{"RecordSeparators", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<;\>\"", ",", " ", "\"\<\\n\>\"", ",", " ", "\"\<\\r\>\"", ",", 
      "\"\<\\r\\n\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LinkName", "=", "\"\<http://www.minlplib.org/gms/alkyl.gms\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileString", "=", 
    RowBox[{"StringToStream", "[", 
     RowBox[{"ReadString", "[", "LinkName", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Extract", " ", "and", " ", "Print", " ", "Header"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReadList", "[", 
   RowBox[{"FileString", ",", "String", ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringRiffle", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{"FileString", ",", "String", ",", "16"}], "]"}], ",", 
     "\"\<\\n\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "and", " ", "Extract", " ", "variable", " ", "names"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarString", " ", "=", " ", 
   RowBox[{"Find", "[", 
    RowBox[{"FileString", ",", "\"\<Variables\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarList", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"StringReplace", "[", 
     RowBox[{"VarString", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Variables\>\"", "->", "\"\<{\>\""}], ",", 
        RowBox[{"\"\<;\>\"", "->", "\"\<}\>\""}]}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "and", " ", "Extract", " ", "positive", " ", "variable", " ", 
    "names"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosVarString", " ", "=", " ", 
   RowBox[{"Find", "[", 
    RowBox[{"FileString", ",", "\"\<Positive Variables\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PosVarList", "=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"PosVarString", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Positive Variables\>\"", "->", "\"\<{\>\""}], ",", 
       RowBox[{"\"\<;\>\"", "->", "\"\<}\>\""}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosBoundConstraints", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"var", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"var", ",", "PosVarList"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "and", " ", "Extract", " ", "equation", " ", "names"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EqString", " ", "=", " ", 
   RowBox[{"Find", "[", 
    RowBox[{"FileString", ",", "\"\<Equations\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EqList", "=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"EqString", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Equations\>\"", "->", "\"\<{\>\""}], ",", 
         RowBox[{"\"\<;\>\"", "->", "\"\<}\>\""}]}], "}"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Find", " ", "and", " ", "build", " ", "equations"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EqList", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"eqString", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "eq", "]"}], ",", "\"\<..\>\""}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"Find", "[", 
           RowBox[{"FileString", ",", "eqString"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"eqString", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<;\>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<=E=\>\"", "->", "\"\<==\>\""}]}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"eq", ",", "EqList"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "and", " ", "build", " ", "bound", " ", "constraints"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Find", "[", 
  RowBox[{"FileString", ",", "\"\<* set non-default bounds\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BoundLines", "=", "14"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"ToExpression", ",", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringSplit", "[", " ", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ReadLine", "[", "FileString", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<=\>\"", "->", "\"\< \>\""}], ",", 
            RowBox[{"\"\<.up\>\"", " ", "->", "\"\<<=\>\""}], ",", 
            RowBox[{"\"\<.lo\>\"", " ", "->", "\"\<>=\>\""}]}], "}"}]}], 
         "]"}], ",", "\"\<;\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "BoundLines", "}"}]}], "]"}], "\[IndentingNewLine]", 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8908215875261445`*^9, 3.89082158954928*^9}, {
   3.890821675485874*^9, 3.890821681048675*^9}, {3.89082176268738*^9, 
   3.890821810393876*^9}, {3.890821866614744*^9, 3.8908219267701693`*^9}, {
   3.8908219706863976`*^9, 3.890822005283523*^9}, {3.890822210172966*^9, 
   3.890822235962015*^9}, {3.8908222787257013`*^9, 3.890822319646041*^9}, {
   3.890822422742833*^9, 3.8908225149015193`*^9}, {3.890822551843607*^9, 
   3.890822559381691*^9}, {3.890822605445099*^9, 3.8908227117381353`*^9}, {
   3.8908228029868593`*^9, 3.890822976350383*^9}, {3.8908230242542133`*^9, 
   3.890823077758992*^9}, {3.890823251757044*^9, 3.8908233571711493`*^9}, {
   3.890823417971775*^9, 3.890823424707432*^9}, {3.890823457437585*^9, 
   3.8908238061054554`*^9}, {3.890823840594097*^9, 3.890823878366311*^9}, {
   3.8908239807675447`*^9, 3.890824335442475*^9}, {3.8908243696742773`*^9, 
   3.8908243720129185`*^9}, {3.8908244162558217`*^9, 
   3.8908244256075697`*^9}, {3.890824458840526*^9, 3.8908245251030903`*^9}, {
   3.890824580807316*^9, 3.8908245834393835`*^9}, {3.890824624595215*^9, 
   3.890824688558085*^9}, {3.890824723503932*^9, 3.89082472508457*^9}, {
   3.8908247653195915`*^9, 3.890824856182819*^9}, {3.890824891796728*^9, 
   3.8908249966754365`*^9}, {3.8908250368949623`*^9, 3.890825125635976*^9}, {
   3.8908251613852215`*^9, 3.8908251621835527`*^9}, {3.89082522539767*^9, 
   3.8908253874941688`*^9}, {3.8908255889333634`*^9, 3.890825626166065*^9}, {
   3.8908262721948004`*^9, 3.8908262727322083`*^9}, 3.890826345684516*^9, {
   3.890826386373171*^9, 3.890826403157124*^9}, {3.8908264535952654`*^9, 
   3.890826467434496*^9}, {3.8908264975773544`*^9, 3.8908265412992754`*^9}, {
   3.8908279416133623`*^9, 3.890827950950194*^9}, {3.8908280993343678`*^9, 
   3.8908283126323743`*^9}, {3.8908298647109437`*^9, 
   3.8908298741902857`*^9}, {3.8908299198875866`*^9, 3.89082996389596*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"cec5c947-314f-4c3d-b7f8-d6f171ada487"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"NullRecords", "\[Rule]", "False"}], ",", 
   RowBox[{"NullWords", "\[Rule]", "False"}], ",", 
   RowBox[{"RecordLists", "\[Rule]", "False"}], ",", 
   RowBox[{"RecordSeparators", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\";\"\>", ",", "\<\"\\n\"\>", ",", "\<\"\\r\"\>", 
      ",", "\<\"\\r\\n\"\>"}], "}"}]}], ",", 
   RowBox[{"TokenWords", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"WordSeparators", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\" \"\>", ",", "\<\"\\t\"\>"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.8908299644275618`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"99633579-fc25-425f-8115-08967fdc8409"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "objvar", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", 
   ",", "x8", ",", "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", 
   "x14", ",", "x15"}], "}"}]], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.8908299649894495`*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"675e490a-8650-4af4-a0d0-a1922ca79287"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6"}], "}"}]], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.8908299649944363`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"03e7e80b-27fb-4bf5-baf8-600a443abd3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x2", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"x3", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"x4", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"x5", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"x6", "\[GreaterEqual]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.890829965000645*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"c4030c83-dfaf-43fa-8cd6-8aa5ad36be68"],

Cell[BoxData["\<\"* set non-default bounds\"\>"], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.8908299650046377`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"93a85035-c0a6-4c96-9d35-818aea23d12f"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.8908299650100093`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"cb548298-cf0d-48ce-b432-09a01a3a052d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x2", "\[LessEqual]", "2"}], ",", 
   RowBox[{"x3", "\[LessEqual]", "1.6`"}], ",", 
   RowBox[{"x4", "\[LessEqual]", "1.2`"}], ",", 
   RowBox[{"x5", "\[LessEqual]", "5"}], ",", 
   RowBox[{"x6", "\[LessEqual]", "2"}], ",", 
   RowBox[{"x7", "\[GreaterEqual]", "0.85`"}], ",", 
   RowBox[{"x7", "\[LessEqual]", "0.93`"}], ",", 
   RowBox[{"x8", "\[GreaterEqual]", "0.9`"}], ",", 
   RowBox[{"x8", "\[LessEqual]", "0.95`"}], ",", 
   RowBox[{"x9", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{"x9", "\[LessEqual]", "12"}], ",", 
   RowBox[{"x10", "\[GreaterEqual]", "1.2`"}], ",", 
   RowBox[{"x10", "\[LessEqual]", "4"}], ",", 
   RowBox[{"x11", "\[GreaterEqual]", "1.45`"}], ",", 
   RowBox[{"x11", "\[LessEqual]", "1.62`"}], ",", 
   RowBox[{"x12", "\[GreaterEqual]", "0.99`"}], ",", 
   RowBox[{"x12", "\[LessEqual]", "1.01010101010101`"}], ",", 
   RowBox[{"x13", "\[GreaterEqual]", "0.99`"}], ",", 
   RowBox[{"x13", "\[LessEqual]", "1.01010101010101`"}], ",", 
   RowBox[{"x14", "\[GreaterEqual]", "0.9`"}], ",", 
   RowBox[{"x14", "\[LessEqual]", "1.11111111111111`"}], ",", 
   RowBox[{"x15", "\[GreaterEqual]", "0.99`"}], ",", 
   RowBox[{"x15", "\[LessEqual]", "1.01010101010101`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8908298145335007`*^9, 3.890829837799527*^9}, {
  3.890829924277922*^9, 3.890829965016203*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"ad29708f-35fc-40b9-b094-fb05db27d2fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ReadList"}]], "Input",
 CellChangeTimes->{{3.89082798635425*^9, 3.8908279882665305`*^9}},
 CellLabel->
  "In[955]:=",ExpressionUUID->"8f638cc6-8451-4484-8aa0-a93edab2f171"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ReadList",
              ButtonNote->"paclet:ref/ReadList"],
             "\"paclet:ref/ReadList\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) reads \
all the remaining expressions in a file and returns a list of them. \\n\\!\\(\
\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"type\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) reads objects of the \
specified type from a file, until the end of the file is reached. The list of \
objects read is returned. \\n\\!\\(\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"type\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"type\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) reads objects \
with a sequence of types, until the end of the file is reached. \
\\n\\!\\(\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"types\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) reads only the first \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) objects of the specified types. \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ReadList", "[", 
                    RowBox[{"CloudObject`Private`failureObj", ":", 
                    RowBox[{"Failure", "[", 
                    RowBox[{
                    
                    RowBox[{"\"CloudObjectInvalidPathFailure\"", "|", 
                    "\"CloudObjectInvalidUUID\"", "|", 
                    "\"CloudObjectInvalidHyperlink\""}], ",", "___"}], 
                    "]"}]}], "]"}], ":=", 
                    "CloudObject`Private`failureObj"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ReadList", 
                    "paclet:ref/ReadList", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ReadList.html"]\
, None}, "http://reference.wolfram.com/language/ref/ReadList.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"NullRecords", "\[Rule]", "False"}]},
                    {
                    RowBox[{"NullWords", "\[Rule]", "False"}]},
                    {
                    RowBox[{"RecordLists", "\[Rule]", "False"}]},
                    {
                    RowBox[{"RecordSeparators", "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"\\r\\n\"\>", ",", "\<\"\\n\"\>", 
                    ",", "\<\"\\r\"\>"}], "}"}]}]},
                    {
                    RowBox[{"TokenWords", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"WordSeparators", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\" \"\>", ",", "\<\"\\t\"\>"}], "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"NullRecords", "\[Rule]", "False"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ReadList\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ReadList",
              ButtonNote->"paclet:ref/ReadList"],
             "\"paclet:ref/ReadList\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) reads \
all the remaining expressions in a file and returns a list of them. \\n\\!\\(\
\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"type\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) reads objects of the \
specified type from a file, until the end of the file is reached. The list of \
objects read is returned. \\n\\!\\(\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"type\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"type\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) reads objects \
with a sequence of types, until the end of the file is reached. \
\\n\\!\\(\\*RowBox[{\\\"ReadList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"types\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) reads only the first \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) objects of the specified types. \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ReadList\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"file\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) reads all the remaining expressions in \
a file and returns a list of them. \n\!\(\*RowBox[{\"ReadList\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"file\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"type\", \"TI\"]}], \"]\"}]\) \
reads objects of the specified type from a file, until the end of the file is \
reached. The list of objects read is returned. \n\!\(\*RowBox[{\"ReadList\", \
\"[\", RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"file\\\",\\\"TI\\\"]\\)\\\
\"\", ShowStringCharacters->True], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"type\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"type\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) reads objects \
with a sequence of types, until the end of the file is reached. \n\
\!\(\*RowBox[{\"ReadList\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"file\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"types\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) reads only the first \
\!\(\*StyleBox[\"n\", \"TI\"]\) objects of the specified types. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ReadList", "Web" -> 
      "http://reference.wolfram.com/language/ref/ReadList.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, ReadList, {ReadList[
         Pattern[CloudObject`Private`failureObj, 
          Failure[
           Alternatives[
           "CloudObjectInvalidPathFailure", "CloudObjectInvalidUUID", 
            "CloudObjectInvalidHyperlink"], 
           BlankNullSequence[]]]] :> CloudObject`Private`failureObj}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     NullRecords -> False, NullWords -> False, RecordLists -> False, 
      RecordSeparators -> {"\n\n", "\n", "\n"}, TokenWords -> {}, 
      WordSeparators -> {" ", "\t"}}, "Attributes" -> {Protected}, "FullName" -> 
    "System`ReadList"], False]]], "Output",
 CellChangeTimes->{{3.890823634464244*^9, 3.8908236592015357`*^9}, {
   3.8908237023583994`*^9, 3.8908237451639166`*^9}, {3.8908237822249303`*^9, 
   3.890823792402777*^9}, {3.890824053711939*^9, 3.890824091228682*^9}, {
   3.890824208219212*^9, 3.890824336942276*^9}, 3.890824373332198*^9, 
   3.89082442914075*^9, {3.8908245053418636`*^9, 3.8908245266671906`*^9}, {
   3.890824639622386*^9, 3.890824666129239*^9}, 3.890824857365182*^9, {
   3.8908249425226374`*^9, 3.8908249980311165`*^9}, {3.890825107385603*^9, 
   3.890825163423745*^9}, {3.8908252264936113`*^9, 3.89082525174374*^9}, {
   3.890825289369439*^9, 3.8908253888179045`*^9}, {3.8908255909027247`*^9, 
   3.890825627219801*^9}, 3.8908262743342576`*^9, {3.890826342389065*^9, 
   3.8908263472043247`*^9}, {3.890826387754882*^9, 3.8908264042980185`*^9}, 
   3.8908264693352423`*^9, {3.8908265068888874`*^9, 3.8908265424088545`*^9}, 
   3.8908279167804804`*^9, 3.8908279521433954`*^9, 3.8908279890683317`*^9},
 CellLabel->
  "Out[955]=",ExpressionUUID->"ccbc3a35-632c-4ccc-8426-39288b8e04bd"]
}, Open  ]],

Cell[BoxData["\"\<\\\\nx13>   0.99, x13<=   1.01010101010101,\>\""], "Input",
 CellChangeTimes->{{3.8908264093432665`*^9, 
  3.890826409344263*^9}},ExpressionUUID->"25b08eb8-3da1-4ab1-93d3-\
42ba274ff6d7"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\"\<x2<=   2,\>\""}]], "Input",
 CellChangeTimes->{{3.8908263780234995`*^9, 
  3.8908263780244956`*^9}},ExpressionUUID->"e884771e-1cab-4f10-8b84-\
9f7408a83de9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x12", " ", "x5"}], "-", 
    RowBox[{"x2", " ", 
     RowBox[{"(", 
      RowBox[{"1.12`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.13167`", " ", "x9"}], "-", 
       RowBox[{"0.0067`", " ", 
        SuperscriptBox["x9", "2"]}]}], ")"}]}]}], "\[Equal]", "0"}]}]], \
"Input",
 CellChangeTimes->{{3.8908262874710193`*^9, 
  3.8908262874720154`*^9}},ExpressionUUID->"fe1fb802-0e12-4760-a547-\
403477878c2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RangeBounds", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToExpression", "[", 
  RowBox[{
  "RangeBounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8908251314081078`*^9, 3.890825210575676*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"fc2e04bc-75d4-4b60-96c4-a477f4dd772f"],

Cell[BoxData["\<\"x2<=   2,\"\>"], "Output",
 CellChangeTimes->{{3.890823634464244*^9, 3.8908236592015357`*^9}, {
   3.8908237023583994`*^9, 3.8908237451639166`*^9}, {3.8908237822249303`*^9, 
   3.890823792402777*^9}, {3.890824053711939*^9, 3.890824091228682*^9}, {
   3.890824208219212*^9, 3.890824336942276*^9}, 3.890824373332198*^9, 
   3.89082442914075*^9, {3.8908245053418636`*^9, 3.8908245266671906`*^9}, {
   3.890824639622386*^9, 3.890824666129239*^9}, 3.890824857365182*^9, {
   3.8908249425226374`*^9, 3.8908249980311165`*^9}, {3.890825107385603*^9, 
   3.890825256722072*^9}, 3.890826209659769*^9},
 CellLabel->
  "Out[745]=",ExpressionUUID->"453a0fdd-03d5-4c7b-9e43-1470590a4e71"],

Cell["\<\
ToExpression::sntx: Invalid syntax in or before \"x2<=   2, \".
                                                          ^\
\>", "Message", "MSG",
 CellChangeTimes->{3.8908262096685076`*^9},
 CellLabel->
  "During evaluation of \
In[745]:=",ExpressionUUID->"66632107-b9ff-4f07-8778-0e8d9bb6201e"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.890823634464244*^9, 3.8908236592015357`*^9}, {
   3.8908237023583994`*^9, 3.8908237451639166`*^9}, {3.8908237822249303`*^9, 
   3.890823792402777*^9}, {3.890824053711939*^9, 3.890824091228682*^9}, {
   3.890824208219212*^9, 3.890824336942276*^9}, 3.890824373332198*^9, 
   3.89082442914075*^9, {3.8908245053418636`*^9, 3.8908245266671906`*^9}, {
   3.890824639622386*^9, 3.890824666129239*^9}, 3.890824857365182*^9, {
   3.8908249425226374`*^9, 3.8908249980311165`*^9}, {3.890825107385603*^9, 
   3.890825256722072*^9}, 3.8908262096717715`*^9},
 CellLabel->
  "Out[746]=",ExpressionUUID->"c5d6d06a-6086-4608-a313-03e33ff83148"]
}, Open  ]],

Cell[BoxData["PosVarList"], "Input",
 CellChangeTimes->{{3.8908238864932175`*^9, 3.8908238892354317`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"8fac0a2d-99a6-41f5-b875-d6e9ad4b0bbe"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
   "e1", ",", "e2", ",", "e3", ",", "e4", ",", "e5", ",", "e6", ",", "e7", 
    ",", "e8"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8908238935187807`*^9, 
  3.8908238935197773`*^9}},ExpressionUUID->"eda0e204-5335-4ed4-bcf1-\
5182b9d459c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarList", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<{\>\"", ",", "VarString", ",", "\"\<}\>\""}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "and", " ", "Extract", " ", "Positive", " ", "Variable", " ", 
    "names"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"PosVarString", " ", "=", " ", 
  RowBox[{"Find", "[", 
   RowBox[{"FileString", ",", "\"\<Positive Variables\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EqString", " ", "=", " ", 
  RowBox[{"Find", "[", 
   RowBox[{"FileString", ",", "\"\<Equations\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Find", "[", 
  RowBox[{"FileString", ",", "\"\<Dump\>\""}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8908215875261445`*^9, 3.89082158954928*^9}, {
  3.890821675485874*^9, 3.890821681048675*^9}, {3.89082176268738*^9, 
  3.890821810393876*^9}, {3.890821866614744*^9, 3.8908219267701693`*^9}, {
  3.8908219706863976`*^9, 3.890822005283523*^9}, {3.890822210172966*^9, 
  3.890822235962015*^9}, {3.8908222787257013`*^9, 3.890822319646041*^9}, {
  3.890822422742833*^9, 3.8908225149015193`*^9}, {3.890822551843607*^9, 
  3.890822559381691*^9}, {3.890822605445099*^9, 3.8908227117381353`*^9}, {
  3.8908228029868593`*^9, 3.890822976350383*^9}, {3.8908230242542133`*^9, 
  3.890823077758992*^9}, {3.890823251757044*^9, 3.8908233571711493`*^9}, {
  3.890823417971775*^9, 3.890823424707432*^9}, {3.890823457437585*^9, 
  3.890823585473443*^9}},ExpressionUUID->"8422f4b7-e097-4d87-9ba8-\
d2ba77ba7139"],

Cell[BoxData["\<\"*  \\n*  Equation counts\\n*      Total        E        G   \
     L        N        X        C        B\\n*          8        8        0   \
     0        0        0        0        0\\n*  \\n*  Variable counts\\n*     \
              x        b        i      s1s      s2s       sc       si\\n*     \
 Total     cont   binary  integer     sos1     sos2    scont     sint\\n*     \
    15       15        0        0        0        0        0        0\\n*  FX \
     0\\n*  \\n*  Nonzero counts\\n*      Total    const       NL      \
DLL\\n*         32       13       19        0\\n*\\n*  Solve m using NLP \
minimizing objvar;\"\>"], "Output",
 CellChangeTimes->{
  3.8908234267795496`*^9, {3.890823474286624*^9, 3.890823479298606*^9}, 
   3.890823511809162*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"8a67f29f-58f9-4ad1-aec8-5767f70cd694"],

Cell[BoxData["\<\"Variables  \
objvar,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15;\"\>"], "Output",
 CellChangeTimes->{
  3.8908234267795496`*^9, {3.890823474286624*^9, 3.890823479298606*^9}, 
   3.8908235118135033`*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"16ccd8e6-0491-459b-9514-6f02a004a4ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",",
    "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", "x14"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8908234267795496`*^9, {3.890823474286624*^9, 3.890823479298606*^9}, 
   3.8908235118170767`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"cf03eb21-7056-4c59-8bb9-7230f07d5f58"],

Cell[BoxData["\<\"Positive Variables  x2,x3,x4,x5,x6;\"\>"], "Output",
 CellChangeTimes->{
  3.8908234267795496`*^9, {3.890823474286624*^9, 3.890823479298606*^9}, 
   3.890823511821101*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"300c6daa-001a-4d84-82cc-2f439279cd89"],

Cell[BoxData["\<\"Equations  e1,e2,e3,e4,e5,e6,e7,e8;\"\>"], "Output",
 CellChangeTimes->{
  3.8908234267795496`*^9, {3.890823474286624*^9, 3.890823479298606*^9}, 
   3.890823511824092*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"0049830e-42b2-4e20-a702-1df8377b12b2"],

Cell[BoxData["EndOfFile"], "Output",
 CellChangeTimes->{
  3.8908234267795496`*^9, {3.890823474286624*^9, 3.890823479298606*^9}, 
   3.890823511828232*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"990ec026-8ff4-4ba0-bf44-0a15706f8238"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["StringDrop"], "Input",
 CellChangeTimes->{{3.890823364878662*^9, 3.8908233792916007`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"2b9ca9b1-bf68-407a-a3a0-4f51ad585e1f"],

Cell[BoxData["StringDrop"], "Output",
 CellChangeTimes->{
  3.89082181223993*^9, {3.890821870396906*^9, 3.8908219273050528`*^9}, {
   3.8908219905993447`*^9, 3.8908220056973543`*^9}, {3.89082222525028*^9, 
   3.890822236946163*^9}, {3.890822301455714*^9, 3.8908223202546215`*^9}, {
   3.8908224280510745`*^9, 3.8908225153909297`*^9}, {3.8908226197574353`*^9, 
   3.890822712425598*^9}, {3.8908228092083673`*^9, 3.890822841476697*^9}, {
   3.890822878160387*^9, 3.8908228897841253`*^9}, {3.890822925981558*^9, 
   3.8908229664955254`*^9}, 3.890823041579655*^9, 3.890823083911173*^9, 
   3.890823380109992*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"fcae6693-087c-4250-b44c-6532a78abb60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Read"], "Input",
 CellChangeTimes->{{3.8908223241163325`*^9, 3.8908223254119606`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"0982418f-40ad-487c-8725-34c42af6ec55"],

Cell[BoxData["Read"], "Output",
 CellChangeTimes->{3.8908223259881625`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"8e09337f-ce96-4656-bda4-dfe0f54bed70"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{843, 965},
WindowMargins->{{Automatic, -1555}, {56, Automatic}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c42bfd28-31a0-4a73-ae12-ae1ef1c633b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 222, 4, 98, "Title",ExpressionUUID->"46447238-1fd7-4f26-bfff-bbe0b1a5ce95"],
Cell[805, 28, 639, 14, 173, "Text",ExpressionUUID->"e6d55b36-c37f-4736-8e1f-cb03a3985015"],
Cell[CellGroupData[{
Cell[1469, 46, 154, 3, 67, "Section",ExpressionUUID->"a88f5554-bf7b-4a63-bb3f-f7df5b6068bf"],
Cell[CellGroupData[{
Cell[1648, 53, 7497, 176, 600, "Input",ExpressionUUID->"cec5c947-314f-4c3d-b7f8-d6f171ada487"],
Cell[9148, 231, 776, 17, 109, "Output",ExpressionUUID->"99633579-fc25-425f-8115-08967fdc8409"],
Cell[9927, 250, 437, 8, 32, "Output",ExpressionUUID->"675e490a-8650-4af4-a0d0-a1922ca79287"],
Cell[10367, 260, 306, 5, 32, "Output",ExpressionUUID->"03e7e80b-27fb-4bf5-baf8-600a443abd3c"],
Cell[10676, 267, 494, 10, 32, "Output",ExpressionUUID->"c4030c83-dfaf-43fa-8cd6-8aa5ad36be68"],
Cell[11173, 279, 257, 3, 32, "Output",ExpressionUUID->"93a85035-c0a6-4c96-9d35-818aea23d12f"],
Cell[11433, 284, 227, 3, 32, "Output",ExpressionUUID->"cb548298-cf0d-48ce-b432-09a01a3a052d"],
Cell[11663, 289, 1458, 28, 118, "Output",ExpressionUUID->"ad29708f-35fc-40b9-b094-fb05db27d2fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13158, 322, 201, 4, 28, "Input",ExpressionUUID->"8f638cc6-8451-4484-8aa0-a93edab2f171"],
Cell[13362, 328, 24566, 530, 421, "Output",ExpressionUUID->"ccbc3a35-632c-4ccc-8426-39288b8e04bd"]
}, Open  ]],
Cell[37943, 861, 205, 3, 28, InheritFromParent,ExpressionUUID->"25b08eb8-3da1-4ab1-93d3-42ba274ff6d7"],
Cell[38151, 866, 208, 4, 48, InheritFromParent,ExpressionUUID->"e884771e-1cab-4f10-8b84-9f7408a83de9"],
Cell[38362, 872, 490, 14, 50, InheritFromParent,ExpressionUUID->"fe1fb802-0e12-4760-a547-403477878c2c"],
Cell[CellGroupData[{
Cell[38877, 890, 389, 9, 48, "Input",ExpressionUUID->"fc2e04bc-75d4-4b60-96c4-a477f4dd772f"],
Cell[39269, 901, 692, 10, 32, "Output",ExpressionUUID->"453a0fdd-03d5-4c7b-9e43-1470590a4e71"],
Cell[39964, 913, 307, 7, 38, "Message",ExpressionUUID->"66632107-b9ff-4f07-8778-0e8d9bb6201e"],
Cell[40274, 922, 684, 10, 32, "Output",ExpressionUUID->"c5d6d06a-6086-4608-a313-03e33ff83148"]
}, Open  ]],
Cell[40973, 935, 189, 3, 28, "Input",ExpressionUUID->"8fac0a2d-99a6-41f5-b875-d6e9ad4b0bbe"],
Cell[41165, 940, 316, 8, 48, InheritFromParent,ExpressionUUID->"eda0e204-5335-4ed4-bcf1-5182b9d459c0"],
Cell[CellGroupData[{
Cell[41506, 952, 1775, 38, 124, "Input",ExpressionUUID->"8422f4b7-e097-4d87-9ba8-d2ba77ba7139"],
Cell[43284, 992, 865, 13, 318, "Output",ExpressionUUID->"8a67f29f-58f9-4ad1-aec8-5767f70cd694"],
Cell[44152, 1007, 307, 6, 32, "Output",ExpressionUUID->"16ccd8e6-0491-459b-9514-6f02a004a4ef"],
Cell[44462, 1015, 415, 10, 32, "Output",ExpressionUUID->"cf03eb21-7056-4c59-8bb9-7230f07d5f58"],
Cell[44880, 1027, 272, 5, 32, "Output",ExpressionUUID->"300c6daa-001a-4d84-82cc-2f439279cd89"],
Cell[45155, 1034, 272, 5, 32, "Output",ExpressionUUID->"0049830e-42b2-4e20-a702-1df8377b12b2"],
Cell[45430, 1041, 238, 5, 32, "Output",ExpressionUUID->"990ec026-8ff4-4ba0-bf44-0a15706f8238"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45705, 1051, 187, 3, 28, "Input",ExpressionUUID->"2b9ca9b1-bf68-407a-a3a0-4f51ad585e1f"],
Cell[45895, 1056, 691, 11, 32, "Output",ExpressionUUID->"fcae6693-087c-4250-b44c-6532a78abb60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46623, 1072, 179, 2, 28, "Input",ExpressionUUID->"0982418f-40ad-487c-8725-34c42af6ec55"],
Cell[46805, 1076, 154, 2, 32, "Output",ExpressionUUID->"8e09337f-ce96-4656-bda4-dfe0f54bed70"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

