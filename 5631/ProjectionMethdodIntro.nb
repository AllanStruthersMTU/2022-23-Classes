(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    337544,       6576]
NotebookOptionsPosition[    334422,       6519]
NotebookOutlinePosition[    334872,       6537]
CellTagsIndexPosition[    334829,       6534]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Projection Methods for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", "b"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1880a565-949b-4695-816a-86206a255fab"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c3d8bc88-7a2d-4c17-bace-574f6b4eea7f"],
 "\nNotation from Saad"
}], "Title",
 CellChangeTimes->{{3.8396701006237125`*^9, 3.839670101611764*^9}, {
  3.840102229200081*^9, 3.840102242729333*^9}, {3.8405293276271477`*^9, 
  3.840529378894744*^9}, {3.840622073686349*^9, 3.84062207418674*^9}, {
  3.8732798196159916`*^9, 
  3.873279897624705*^9}},ExpressionUUID->"5d4a0142-ee91-4c83-922a-\
c35d53e8e7aa"],

Cell[TextData[{
 "The original problem size n is too big.  The plan is to reduce the \
dimension by looking for an approximate solution ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "^"], TraditionalForm]],ExpressionUUID->
  "b5a5df3b-6fe5-4493-ae34-c2ad97ee9cd6"],
 " based on an m dimensional subspace \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[ScriptCapitalK]", "m"], "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"7647a303-992a-41e7-aa8c-5808c1df9e61"],
 "\nby enforcing ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "1c77937b-81d8-4cc7-abf9-0ab3529de54f"],
 " conditions on the residual\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", 
     OverscriptBox["x", "^"]}], "-", "b"}], TraditionalForm]],ExpressionUUID->
  "23134c2d-071e-4960-ae86-16976242daea"],
 "\ndesigned to make the residual small.  Since it is no longer the \
\[OpenCurlyDoubleQuote]big\[CloseCurlyDoubleQuote] problem we will need to \
iterate and we \[OpenCurlyDoubleQuote]hope\[CloseCurlyDoubleQuote] that the \
iteration converges. In the real world we want some assurance that: The \
iteration converges and some quantitative information about how fast it \
should converge.  We will have an initial condition ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "fbea725e-80a3-4abe-a0f5-4625e6f6070d"],
 " that we seek to improve to \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], "=", 
    RowBox[{
     SubscriptBox["x", "0"], "+", "\[Delta]"}]}], TraditionalForm]],
  ExpressionUUID->"ee1b2a85-a3fe-4301-8b2e-968fd15c2dc4"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", "\[Element]", "\[ScriptCapitalK]"}], TraditionalForm]],
  ExpressionUUID->"956153f2-7438-432a-9c68-2cb779b56258"],
 ".\nA projection method is defined by the search space \[ScriptCapitalK] and \
requiring the residual ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", 
     OverscriptBox["x", "^"]}], "-", "b"}], TraditionalForm]],ExpressionUUID->
  "2e4a1b47-4b05-4e68-a7a8-e9e76a4a4aff"],
 " to be orthogonal to a (possibly different subspace) \[ScriptCapitalL]. In \
other words we want to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", "\[Element]", "\[ScriptCapitalK]"}], TraditionalForm]],
  ExpressionUUID->"57f43b01-689f-4b6f-8e2a-590da5f8674b"],
 " satisfying\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "0"], "+", "\[Delta]"}], ")"}]}], "-", "b"}], 
     ")"}], "\[Perpendicular]", "\[ScriptCapitalL]"}], TraditionalForm]],
  ExpressionUUID->"1d7991f9-c3af-412f-abb8-471b83c4b271"],
 "\nFor this to make sense we need ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"dim", "(", "\[ScriptCapitalK]", ")"}], "=", 
    RowBox[{"dim", "(", "\[ScriptCapitalL]", ")"}]}], TraditionalForm]],
  ExpressionUUID->"e789366b-1bbe-4aa9-adb4-83ae8a4013be"],
 ".  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "=", "\[ScriptCapitalL]"}], TraditionalForm]],
  ExpressionUUID->"47bc3ec6-0898-43b9-942a-1644a3e84cfa"],
 " this is an orthogonal projection method. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "\[NotEqual]", "\[ScriptCapitalL]"}], 
   TraditionalForm]],ExpressionUUID->"157c85de-8f24-455b-8d1b-a36fbacb76e4"],
 " this is an oblique projection method."
}], "Text",
 CellChangeTimes->{{3.8396701078417034`*^9, 3.8396701825634975`*^9}, {
  3.839670230732381*^9, 3.839670239843339*^9}, {3.839682243723302*^9, 
  3.8396822454733815`*^9}, {3.8401022145850563`*^9, 3.840102263510256*^9}, {
  3.8401023106071157`*^9, 3.8401025436482224`*^9}, {3.8732798605543203`*^9, 
  3.873279870135392*^9}, {3.873279905244912*^9, 3.873281104091507*^9}, {
  3.873281465446621*^9, 3.873281714736486*^9}, {3.873281760634695*^9, 
  3.8732818113765974`*^9}, {3.873372498296337*^9, 3.8733725579203863`*^9}, {
  3.873372597491496*^9, 
  3.873372651852975*^9}},ExpressionUUID->"8db8a5f6-7547-4811-a12e-\
acb31275510f"],

Cell[CellGroupData[{

Cell["Skeleton Algorithm 5.1", "Section",
 CellChangeTimes->{{3.873281717905846*^9, 
  3.8732817382253866`*^9}},ExpressionUUID->"f9ff0c67-2091-439b-a894-\
f8f6b68c3ab7"],

Cell[TextData[{
 "To implement this we choose basis\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["v", "1"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["v", "m"]}], "]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "702b6218-e4f2-4608-85a3-9da8d960b44f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["w", "1"], "|", "\[Ellipsis]", "|", 
      SubscriptBox["w", "m"]}], "]"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ad50ccc5-83d4-45a3-a6f3-3d6bff7b1629"],
 "\nso that  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "=", 
    RowBox[{"span", "(", "V", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d1c589e9-ff1c-46af-a1e0-463ac648362d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{"span", "(", "W", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0d1a1fa5-21ea-44b8-92e4-0136344ba1dd"],
 " to get the representation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], "=", 
    RowBox[{
     SubscriptBox["x", "0"], "+", 
     RowBox[{"V", " ", "y"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c434eacc-fd60-448c-8559-fbbcacf02c50"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bfc30057-2f6b-421c-af71-50aa17147254"],
 " when you plug in the orhtogonality condition is\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"W", "\[Transpose]"}], ".", "A", " ", ".", "V", ".", "y"}], "+", 
     RowBox[{
      RowBox[{"W", "\[Transpose]"}], ".", "A", " ", ".", 
      SubscriptBox["x", "0"]}], "-", 
     RowBox[{
      RowBox[{"W", "\[Transpose]"}], ".", "b"}]}], "=", "0"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a9411012-c1d5-457e-8d6b-817a4a1c46e8"],
 "  or equivalently ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"W", "\[Transpose]"}], ".", "A", ".", "V", ".", "y"}], "=", 
    RowBox[{
     RowBox[{"W", "\[Transpose]"}], ".", 
     RowBox[{"(", 
      RowBox[{"b", "-", 
       RowBox[{"A", ".", 
        SubscriptBox["x", "0"]}]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fa91bbee-1a2c-4415-95dc-0c619ba31dd9"],
 ".\nAll we need to do is solve this small ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "m"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dde0ef6e-19c5-4dc3-82f1-4f4a99eaab9a"],
 " linear system for ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "07963a31-0f58-446e-b276-acc39216f263"],
 " and build our new (and hopefully)\nimproved  iterate\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "+", 
      RowBox[{"V", " ", "y"}]}], "=", 
     RowBox[{
      SubscriptBox["x", "0"], "+", 
      RowBox[{"V", ".", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"W", "\[Transpose]"}], ".", "A", ".", "V"}], ")"}], 
        RowBox[{"-", "1"}]], ".", 
       RowBox[{"(", 
        RowBox[{"b", "-", 
         RowBox[{"A", ".", 
          SubscriptBox["x", "0"]}]}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0372f872-e134-4e16-a9b8-55b3b88ac1c6"],
 "\nand then repeat as needed see Algorithm 5.1"
}], "Text",
 CellChangeTimes->{{3.8396701078417034`*^9, 3.8396701825634975`*^9}, {
  3.839670230732381*^9, 3.839670239843339*^9}, {3.839682243723302*^9, 
  3.8396822454733815`*^9}, {3.8401022145850563`*^9, 3.840102263510256*^9}, {
  3.8401023106071157`*^9, 3.8401025436482224`*^9}, {3.8732798605543203`*^9, 
  3.873279870135392*^9}, {3.873279905244912*^9, 3.873281104091507*^9}, {
  3.873281465446621*^9, 3.8732816910809383`*^9}, {3.873283960103088*^9, 
  3.8732840337280087`*^9}},ExpressionUUID->"9f7b8c7a-6af2-4112-8894-\
25e877389529"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theory and Interpretation", "Section",
 CellChangeTimes->{{3.873281717905846*^9, 3.8732817382253866`*^9}, {
  3.873281869090175*^9, 3.8732818720319386`*^9}, {3.873282397701008*^9, 
  3.873282405342925*^9}},ExpressionUUID->"6c9e09aa-467a-40b0-a60a-\
a0dae2800a9a"],

Cell[TextData[{
 "P5.2 If A is SPD and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "=", "\[ScriptCapitalL]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0a6269b0-cc44-488d-992f-634993e31b9d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "*"], "=", 
    RowBox[{
     SuperscriptBox["A", 
      RowBox[{"-", "1"}]], "b"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b35c0705-af60-4c20-9ec6-37dc5bdb8b1d"],
 " then \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["argmin", 
       RowBox[{"x", "\[Element]", 
        RowBox[{
         SubscriptBox["x", "0"], "+", "\[ScriptCapitalK]"}]}]], " ", 
      RowBox[{"A", ".", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "*"]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "*"]}], ")"}]}]}], "=", 
     RowBox[{
      SubscriptBox["argmin", 
       RowBox[{"x", "\[Element]", 
        RowBox[{
         SubscriptBox["x", "0"], "+", "\[ScriptCapitalK]"}]}]], " ", 
      SqrtBox[
       RowBox[{"A", ".", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "*"]}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "*"]}], ")"}]}]]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "57ff034f-ccfe-4f79-a903-dcb2b1284685"],
 " "
}], "Abstract",
 CellChangeTimes->{{3.873281919812972*^9, 3.8732820676004825`*^9}, 
   3.873282116086191*^9, {3.873282678536902*^9, 
   3.873282692422753*^9}},ExpressionUUID->"1e1821ea-5405-4d53-a02e-\
cfada3beba30"],

Cell[TextData[{
 "P5.3 If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{"A", " ", ".", "\[ScriptCapitalK]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f7528bea-dd10-447b-98ae-2d5f782f7783"],
 " then \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{
     SubscriptBox["argmin", 
      RowBox[{"x", "\[Element]", 
       RowBox[{
        SubscriptBox["x", "0"], "+", "\[ScriptCapitalK]"}]}]], " ", "||", 
     RowBox[{
      RowBox[{"A", ".", "x"}], "-", "b"}], "||"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "37e01150-bf5a-4108-a102-9a82270a6c20"],
 " "
}], "Abstract",
 CellChangeTimes->{{3.873281919812972*^9, 3.8732820676004825`*^9}, {
  3.8732821188928814`*^9, 3.873282149840767*^9}, {3.873282191556177*^9, 
  3.8732822039984446`*^9}, {3.8732827499170403`*^9, 
  3.8732827545049353`*^9}},ExpressionUUID->"3e338233-9dd0-46cd-ab33-\
f1b523d66890"],

Cell[TextData[{
 "P5.4 If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{"A", " ", ".", "\[ScriptCapitalK]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "29fc88d7-ac5d-4087-95af-24d3911ff729"],
 " and  \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{
     SubscriptBox["argmin", 
      RowBox[{"x", "\[Element]", 
       RowBox[{
        SubscriptBox["x", "0"], "+", "\[ScriptCapitalK]"}]}]], " ", "||", 
     RowBox[{
      RowBox[{"A", ".", "x"}], "-", "b"}], "||"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "df3d0623-ca5c-4614-8678-82402d51e002"],
 "\nthen \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\t", 
    RowBox[{
     RowBox[{"b", "-", 
      RowBox[{"A", ".", 
       SubscriptBox["x", "1"]}]}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"I", "-", "P"}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"b", "-", 
        RowBox[{"A", ".", 
         SubscriptBox["x", "0"]}]}], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7fa351ca-5a6f-4ce4-9959-f19fad95885e"],
 " \nwhere ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0bda5313-a410-4781-b5e8-01a4aaaa9ca3"],
 " is the projection onto ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{"A", ".", "\[ScriptCapitalK]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ed58c5af-a640-4f86-930f-b7813ce60a5b"]
}], "Abstract",
 CellChangeTimes->{{3.873281919812972*^9, 3.8732820676004825`*^9}, {
  3.8732821188928814`*^9, 3.873282149840767*^9}, {3.873282191556177*^9, 
  3.8732822039984446`*^9}, {3.8732826594863834`*^9, 3.8732826606140842`*^9}, {
  3.8732827648375845`*^9, 3.8732827870555935`*^9}, {3.8732828179978094`*^9, 
  3.8732828795519886`*^9}, {3.8732829729018664`*^9, 
  3.873283005630537*^9}},ExpressionUUID->"d2526d53-3953-457c-b781-\
1d2b275828fe"],

Cell[TextData[{
 "P5 .5 If A is SPD and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "=", "\[ScriptCapitalL]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "763fab08-0656-4954-892b-90522ab45c3a"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "*"], "=", 
    RowBox[{
     SuperscriptBox["A", 
      RowBox[{"-", "1"}]], "b"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8e2e2d3f-98c1-4787-a746-add4fc559699"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "*"], "-", 
     SubscriptBox["x", "1"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"I", "-", "P"}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "*"], "-", 
       SubscriptBox["x", "0"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c7cf071b-4177-43b8-8c9a-3ed0c04f2a4f"],
 "\nwhere P is the orthogonal projector onto \[ScriptCapitalK] with respect \
to the A inner product\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", "x"}], ",", 
    RowBox[{
     RowBox[{"y", 
      SubscriptBox[">", "A"]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", ".", "x"}], ")"}], ".", "y"}], "=", 
      RowBox[{
       RowBox[{"x", ".", 
        RowBox[{"(", 
         RowBox[{"A", ".", "y"}], ")"}]}], "=", 
       RowBox[{"<", 
        RowBox[{"S", ".", "x"}]}]}]}]}], ",", 
    RowBox[{
     RowBox[{"S", ".", "y"}], ">"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "efae11ac-f0cd-47b6-9b43-bd1c8cdd87ff"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    SqrtBox["A"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ef11d63c-ebc9-405d-9925-73db470aadc3"],
 ". "
}], "Abstract",
 CellChangeTimes->{{3.8732830550648975`*^9, 3.873283067608638*^9}, {
  3.873283135775061*^9, 
  3.873283423665209*^9}},ExpressionUUID->"3cc287a4-9b35-42cc-bc3d-\
00ad11d8b40f"],

Cell[TextData[{
 "P5 .6 If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", ".", "\[ScriptCapitalK]"}], "=", 
    RowBox[{"\[ScriptCapitalK]", "=", "\[ScriptCapitalL]"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "22e0ddf6-6bba-4b08-b932-90f0177cf5e6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Element]", "\[ScriptCapitalK]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c04f2605-f9b8-438b-8f85-beb8a6814c9e"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{
     SuperscriptBox["A", 
      RowBox[{"-", "1"}]], ".", "b"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "583953d1-392d-47d0-aa89-e3f6504f24f7"]
}], "Abstract",
 CellChangeTimes->{{3.8732830550648975`*^9, 3.873283067608638*^9}, {
   3.873283135775061*^9, 3.873283423665209*^9}, 3.8732834547862763`*^9, {
   3.8732838823328986`*^9, 3.8732839309185343`*^9}, {3.8732840573219385`*^9, 
   3.8732840854952765`*^9}},ExpressionUUID->"1aee77d8-581a-4f37-8c4b-\
c6e11a7d347d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simple 1D Subspace Algorithms", "Section",
 CellChangeTimes->{{3.873281717905846*^9, 3.8732817382253866`*^9}, {
  3.873281869090175*^9, 3.8732818720319386`*^9}, {3.873282397701008*^9, 
  3.873282405342925*^9}, {3.8732856355765734`*^9, 3.8732856393361635`*^9}, {
  3.8732861854973803`*^9, 
  3.87328620222468*^9}},ExpressionUUID->"60ec76c5-82b4-4d59-ada5-\
3afa48fb6018"],

Cell[TextData[{
 "We need to do multiple steps and pick smart spaces ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalK]", "k"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "09bf362b-7023-409c-a128-de3ad1ec4164"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalL]", "k"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "57712fef-7696-4b18-80fb-9aaea5cf15bc"],
 " to define the iteration from our approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "34e495b1-ef0f-460d-a8a9-2e9e3c269162"],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6c9c1cde-7ce5-4ca0-8de9-4ca59b24c70a"],
 ".  Our first attempts will use one dimensional spaces ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "=", 
    RowBox[{"span", "(", "v", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3e0351d3-3712-49d0-8d3f-61d13b3cecf3"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{"span", "(", "w", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "013dbc76-f615-4d9a-ba77-4c92889c2776"],
 " and all we need to do is find the value of \[Alpha] in\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "+", 
    RowBox[{"\[Alpha]", " ", "v"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5dbdd691-8faa-4185-8d1d-274ed1e0c617"],
 "  \nwhich satisfies the inner product equation below\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"w", ",", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["x", "0"], "+", 
          RowBox[{"\[Alpha]", " ", "v"}]}], ")"}]}], "-", "b"}]}], 
     "\[RightAngleBracket]"}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0c4e91b0-5264-4563-b445-11b7b7ad9a69"],
 ".\nSolving gives the update value\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"A", ".", 
         RowBox[{"(", 
          RowBox[{"b", "-", 
           RowBox[{"A", ".", 
            SubscriptBox["x", "0"]}]}], ")"}]}], ",", " ", "w"}], 
       "\[RightAngleBracket]"}], 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"A", ".", "v"}], ",", " ", "w"}], "\[RightAngleBracket]"}]], 
     "=", 
     FractionBox[
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"A", ".", 
         SubscriptBox["r", "0"]}], ",", " ", "w"}], "\[RightAngleBracket]"}], 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"A", ".", "v"}], ",", " ", "w"}], 
       "\[RightAngleBracket]"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "14f921f4-3ce5-4a55-a98b-86d9b1ab46cf"],
 " \nTo avoid indexing and indicate that in practice you overwrite variables \
the book starts using arrows  \[OpenCurlyDoubleQuote]\[LongLeftArrow]\
\[CloseCurlyDoubleQuote] to denote updates\t"
}], "Text",
 CellChangeTimes->{{3.873285647609709*^9, 3.873285729662008*^9}, {
  3.873285850573959*^9, 3.8732858952733727`*^9}, {3.873285958841169*^9, 
  3.8732866623852587`*^9}},ExpressionUUID->"c23ede57-876d-48c2-8206-\
772fa1cbe452"],

Cell[CellGroupData[{

Cell["Steepest Descent \[Section]5.3.1", "Subsection",
 CellChangeTimes->{{3.8732868013679004`*^9, 3.873286806241394*^9}, {
  3.8733744655958376`*^9, 
  3.873374467821978*^9}},ExpressionUUID->"e795deea-cc52-451e-8639-\
99d9de0d1121"],

Cell[TextData[{
 "An SPD matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b1788996-21b2-4fa4-978d-036c59f9ce70"],
 " defines a natural cost function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"x", ".", "A", ".", "x"}]}], "-", 
     RowBox[{"b", ".", "x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b95ab0fc-1eda-43fe-8757-437322a480e7"],
 " which has the negative of the residual ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "r"}], "=", 
    RowBox[{
     RowBox[{"A", ".", "x"}], "-", "b"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "938d7065-2227-4bea-828b-2ee7039fba49"],
 " as its gradient. The orthogonal projection algorithm searching in the \
downhill direction i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalK]", "=", 
    RowBox[{"\[ScriptCapitalL]", "=", 
     RowBox[{"span", 
      RowBox[{"{", "r", "}"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ea53006d-9b95-48fc-8be0-6a612b074ad5"],
 " defines the Steepest Descent algorithm.    In the natural arrow form we \
have\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"r", "\[LongLeftArrow]", 
      RowBox[{"b", "-", 
       RowBox[{"A", ".", "x"}]}]},
     {"\[Alpha]", "\[LongLeftArrow]", 
      FractionBox[
       RowBox[{"r", ".", "r"}], 
       RowBox[{"r", ".", "A", ".", "r"}]]},
     {"x", "\[LongLeftArrow]", 
      RowBox[{"x", "+", 
       RowBox[{"\[Alpha]", " ", "r"}]}]}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b2ca852e-33db-4869-ab36-bd944fad931e"],
 "\nwhich can be rearranged to need only one matrix-vector multiplication. "
}], "Text",
 CellChangeTimes->{{3.8732859048462396`*^9, 3.873285917336029*^9}, {
  3.8732866666802106`*^9, 3.8732868695098743`*^9}, {3.8732869070738983`*^9, 
  3.873286983485224*^9}, {3.873287505372857*^9, 3.8732875064615693`*^9}, {
  3.873289248917669*^9, 
  3.8732893733785553`*^9}},ExpressionUUID->"eb87080e-2f76-4198-bb17-\
0b1c0b79887e"],

Cell[TextData[{
 "Steepest Descent (inner loop)\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"p", "\[LongLeftArrow]", 
      RowBox[{"A", ".", "r"}]},
     {"\[Alpha]", "\[LongLeftArrow]", 
      FractionBox[
       RowBox[{"r", ".", "r"}], 
       RowBox[{"p", ".", "r"}]]},
     {"x", "\[LongLeftArrow]", 
      RowBox[{"x", "+", 
       RowBox[{"\[Alpha]", " ", "r"}]}]},
     {"r", "\[LongLeftArrow]", 
      RowBox[{"r", "-", 
       RowBox[{"\[Alpha]", " ", "p"}]}]}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7713668b-32be-4eb9-823c-3dd2ca2f54a0"],
 "\nThis inner loop updates x and r at the cost of one matrix-vector multiply \
and a bunch of less intensive arithmetic."
}], "Abstract",
 CellChangeTimes->{{3.873281919812972*^9, 3.8732820676004825`*^9}, 
   3.873282116086191*^9, {3.873282678536902*^9, 3.873282692422753*^9}, {
   3.873287521136597*^9, 3.8732878358085275`*^9}, {3.8732878797504597`*^9, 
   3.8732878804136667`*^9}},ExpressionUUID->"d0bd89c9-7ceb-4377-a509-\
abfdbe10b3dd"],

Cell[TextData[{
 "To turn this into an algorithm we need to put it inside a loop which \
terminates when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "r", "||"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aa163835-cb76-4034-b4ba-ef375bde297b"],
 " is sufficiently small. For right now I a just going to run it a fixed \
number of times on a randomly generated test problem and look at the results. "
}], "Text",
 CellChangeTimes->{{3.873287886145522*^9, 3.8732879544585876`*^9}, {
  3.873288916152757*^9, 
  3.8732889578261976`*^9}},ExpressionUUID->"2d333b3a-3403-4191-8b96-\
829d6d110e46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SDStep", "[", "A_", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "r_"}], "}"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{"A", ".", "r"}]}], ",", "\[Alpha]", ",", "xOut", ",", 
       "rOut"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"r", ".", "r"}], "/", 
        RowBox[{"(", 
         RowBox[{"p", ".", "r"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xOut", " ", "=", 
       RowBox[{"x", "+", 
        RowBox[{"\[Alpha]", " ", "r"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rOut", "=", " ", 
       RowBox[{"r", "-", " ", 
        RowBox[{"\[Alpha]", " ", "p"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xOut", ",", "rOut"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"A", "=", 
   RowBox[{"A", ".", 
    RowBox[{"A", "\[Transpose]"}]}]}], ";", " ", 
  RowBox[{"b", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]s", "=", 
   RowBox[{"Eigenvalues", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Five14Ratio", "=", 
    FractionBox[
     RowBox[{
      RowBox[{
      "\[Lambda]s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "-", 
      RowBox[{"\[Lambda]s", "\[LeftDoubleBracket]", 
       RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
     RowBox[{
      RowBox[{
      "\[Lambda]s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "+", 
      RowBox[{"\[Lambda]s", "\[LeftDoubleBracket]", 
       RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xStar", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";", " ", 
  RowBox[{"MaxIter", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "n"}], "]"}]}], ";", " ", 
  RowBox[{"r", "=", "b"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xrData", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{"SDStep", "[", "A", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x0", ",", "r"}], "}"}], ",", "MaxIter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "->", 
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"xrData", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<r\>\"", "->", 
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"xrData", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<||r||\>\"", "->", 
     RowBox[{"ListLogPlot", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Norm", ",", 
         RowBox[{"xrData", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Joined", "->", "True"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<||x-\!\(\*SubscriptBox[\(x\), \(*\)]\)||\>\"", "->", 
     RowBox[{"ListLogPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"#", "-", "xStar"}], "]"}], "&"}], ",", 
           RowBox[{"xrData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"Norm", "[", "xStar", "]"}], 
          SuperscriptBox["Five14Ratio", 
           RowBox[{"Range", "[", "MaxIter", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Joined", "->", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "Five14Ratio"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.873287959211655*^9, 3.873288540755891*^9}, {
   3.8732885910684166`*^9, 3.8732886437519608`*^9}, {3.8732887063555527`*^9, 
   3.8732887071264544`*^9}, {3.873288747895529*^9, 3.873288762733856*^9}, 
   3.8732888104679327`*^9, 3.873288844715387*^9, {3.8732888823068285`*^9, 
   3.8732888826196313`*^9}, {3.8732891432466254`*^9, 
   3.8732891857738037`*^9}, {3.8732907073360357`*^9, 
   3.8732909615079575`*^9}, {3.873291033857867*^9, 3.8732910441053295`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"57b6345d-274e-4955-b948-cf30d076141e"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"x\"\>"->
  TemplateBox[{
    GraphicsBox[
     RasterBox[CompressedData["
1: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
niREDmivOCfBgmN9QMXfkSEIkv6LT66j9t1OMNrFZAhnjReHspW9cXcuIuYH
SLz0MNk77sKEZdu58a8yA9jKP6ZMm8cBX/uSjK3fOHi8W+b55uNcDG52k6jL
JZBuxyKE/WjYTTsU1/vwEQZy74pG83TBTrLVdOd1BmQem64jSplwLb+T//Ao
5UOnXS7+MGej61ff3qLPJPhexvK/kCPB0x20aDFrHOVWwaH8En3Ie2xo5Mvg
InS/9pP54r2Yd6rQ1unbOpzgO//t5BEOvEzPn+m/SuXfIsWzS94x4cZewHRz
64DFssV3lY0p/dzo4X5azcKHcEIpMYPAaN4l4o8ZDV3HtL8RT+/DJ+DNl0kq
x3+a5EoFfGEC/Q05J7YOwVr6dGocpecfOakSKmZDePVO3VPM0hul08LVEQYk
zq75pNTuwcQ2h/LPDzEAgZATKzTlOMg2/PeUl4+LiNpLJ+3OcHGL38drrJzy
PV2XovZHNOifXf0wNasAH5f3GtuJd+EJcbT9WzwDnW7uAVeKmOAYR2ZJn2TC
mRWq4n2Ejc2Sq7dFfSVxZM499IYCiVvWF3y+fRuH4afqkVX/9SFhdVJy+RAX
VYKp+/zX9iJsy+L6LM5G6EhveCx8kIP9p8aU+s5QupbKlk6/ycSCda3ml890
QFy/cGWxCR1HhLu2CFDzWWR6Jjc4iwDnzND9ecdouPZn3CzyQyaUmd8Ut/qT
yJVXa2pWY8FYVmDwwLph/MeYCr28jESGjZ7jBtshLOkxfFVQ5I2VtoUex4yo
HJcovtviTe1Ba+F//ScGkH6hK/fXVg5WLJb1yRPkou+n8ZMDXlzkCewip0sI
TF63iOdJpnzva6ehhkg+zjQ7nzok2oVkT6bUXCy1X/tT4v2Kqfl8020w+I+J
tYV7Hl3VZWOt93fINpOYEbckOJSedaw3t/FOj+PtdNyx3+Z9qNbwNDXp46L9
8E6mwcZeyLy67X/WTxHG0gZF/Ps44HZ5R90/Rvn6WOn7v86UPm9vIRwPdOC9
2d6PHC06pLcbeDyTYkE9M3n9w0wCzvfab1vZ0pAUnc2vY5eJUJPXwsLHqTkI
KOo8H2Wiqnzz5TCHIRyM2BHXIkzCbibjT7f9EDYO3AtybvKG3/iA5i4Tap6B
Gj/fUD76btOmpUvuDeCiQWNIsSMHMscTYi02cDFwb7mazSUuDqtd2BxTTSDJ
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
WEj1HvG/ZS1+STYM3pzoOieSQXg2xb/6sQQfx/7KTsokvnYth163ZH87nD64
GjxdfAzBX+aXNhvQiKv8a3g+gnCncv6tvMp2LPmo4KP9qR5HXV6ZeDM98He+
/+5KDw97tuSN/u/3wFbao4XisizYGF3OC9L7Cq4jR+MLj+SCp8tL0jgCtHae
jky4xsKm/3RlvInf926Y7MTe3Itj0iHR706TPDKfLzrkzUCq3jZ3gHDljUPO
Pp+b+NB5YCnKDaSx8PT+ux4GfORP17PJONwFfnJdkkk08c1v5Rs3HWSD+8Ah
uny8GivbxMWsZrTClsdtZHNZGC3+uvc/kqNlTJqKnk9jw3T6vFzpE3y8Ermz
MvwF0XcjyRyuMwPfe9n4Uk5jMC/sOz+UjzkpAXL2hOfLxDSanU62Y8225RoV
zDGYy/hZmRJ/TZ8Suz4tgeTe7NBdLVIdWNO0i0Ox6zGemG7jMdGDhiD3fava
iX/1Kay5tZtwWn1WEGcDC7OkdfUOKJbjiFPuaMksMrdbc1OP+1AYN9nprCjE
QcKHzoT98hQ2Wp9VehvZC37GNB8SAMCmDnayAhg4r94coCHKwMzH4agk4cGB
COffHrE0RtaLj3rF8nFasab7tVQ3mF6rft0YCmK/l7tts2ZDGsfCb8yqwYyt
Xn8WMS34YOucdKiThXoDb7+hcR6WHD5xfzfhd40Nm45kbecjWPYBE5JCwfZS
pUK6C4NU5d6sYJKnp2mZO/yK4GNzUlQIdzmDLwML/yldacfXBFV9w+zj0Aqd
KzlM9iv+Wm6iTxwPQr8MLv0cacfreyU7pg7U4/eVy4ytSC8WJ+6efa2V1C93
Q2ixEYWLW34nPdJjIWuF9IXca+Ww6TileIChsX/0nlPTiAA7gtfb239kQWKB
3pAC8fvx2Z/9Us6SvCahmaeaVAL/1Xtmvw1hoOXl/F/IAgaHhvYsvmskwKPc
j6l/iN8/m1dipzODj08GbqbTizqx2XbRr/Ekkr8tsxfuvcTG5fzfTVmlNQjb
kr/9kU0rBjQCNysTPb7Md5FsIfty8CGCAwdY6Er996Leno/6Z17TxR5ROLZJ
+cnuEwxMJxxUHpM8nVOhlBBYxkd5VqP7ESkGIk5Xcv7lkc9vvE7v6QUnHD9i
ZBphTHT87omKc1mEy9v+jMQc68D20JGctHkNyEtwzCmd14s3p0bfFdTzoB3r
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
B2RS32o=
      "], {{0, 0}, {12, 101}}, {0, 1}], AspectRatio -> 1, Frame -> True, 
     FrameLabel -> {None, None}, FrameTicks -> {{{{100.5, 
          FormBox["1", TraditionalForm]}, {81.5, 
          FormBox["20", TraditionalForm]}, {61.5, 
          FormBox["40", TraditionalForm]}, {41.5, 
          FormBox["60", TraditionalForm]}, {21.5, 
          FormBox["80", TraditionalForm]}, {0.5, 
          FormBox["101", TraditionalForm]}}, {{100.5, 
          FormBox["1", TraditionalForm]}, {81.5, 
          FormBox["20", TraditionalForm]}, {61.5, 
          FormBox["40", TraditionalForm]}, {41.5, 
          FormBox["60", TraditionalForm]}, {21.5, 
          FormBox["80", TraditionalForm]}, {0.5, 
          FormBox["101", TraditionalForm]}}}, {{{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}, {{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}], 
    FormBox[
     FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              RasterBox[CompressedData["
1:eJxll3k0Vfv7xw1FSoiiQUqG0qVJSaZ3qUSi8UqKRBokDYSDpKho4jYoDUiZ
MqaElFSHImXIPB5ncs7Ze59jbq7vvtZdv39+e63P2sPa6/O8Ps/8aHsc2eIl
KyUlVUUvaXr9+6xptNKOmdaA5+tX3mHz2LAv1FHpWi6CySV8TmQ3wP5d+OZ8
GQ64p8aIcheIsImwcg2Z2YjO1a/lz8ziIMyW9/a0ngje6616nZwbcaRMunSz
BQcakyrubdUUITLD8tiSa42QtrT2197BwePW1EA9NRESxln+mPipEdeKz8zv
P8HB+uTzm78oiFC03+KscFwT9Ezessqu0nK9D/xVKSVCfYW5cvnqJhTmy96M
zeXgpLHd2DtfhCD0zOOTwppgt3CNg3s1LfenQbePWIixZ810Qoub0JYZKbtI
yEEec3yxFU8ILe6K7O1DTfCZV178ZywX6y8TV1U6hFixesVy44XN+P1w7NGa
OVxw/q72YdcLsSXZ9LWSdzNitW30E8HFSa1sm6eVQvhIm9qLHjZjTsK5Dt9d
XKj3Xp59rkyIc+7LG8u7m/F0+rurVgwu8nJ9v28vFCLplcnu+9NbYHNT3k4p
jgu7oI0NBjlCPNcyEYb+3YIWNds/nfm03JWLcn48FKLh5DI/59gWeMdGFWTX
cBGqMCnq4x0hqI6lv4w/tOCHYuWhkyQtt75/T+JVIcZZLD2vLNeKK9EKcxwU
eMi9XW9+LFoII7G1UcSdVpSrdno5mvKw1kWufTK9T75x8nmzQ23oCL4yQ9aP
B2J/54yvL4WwYEiz+83aMcRGXWE2D7Ennu5qZwnxutTdImN8BybY95/zEfBg
EnHxXqmsCOvGlMW5t3VA50myhbYOH+2xHl339UWotpvVr/GoE2Yztg00uvIR
nrBi1lk7EbbEhNnXMLqwOWJs+oVbfOhnqbgf8BGho6Ez5ZxdNw4Sz1zxmY/q
4t4k+xgRFl/WkkpUZOH01gNqQxN7cexdac+CfBGGFjpmB/uzcKtkWmW6bS/U
G2/MUW2k/af+pItTBwt5Oh/CXCN68YLt4zn8RYSQE9nyS9b04N3F0KWqpb3Y
07f6Yct0AlZTO59OzOpB96CRqOJrL+R/T+eVWBKQKlH0EKqxMbKzOzHEWICs
CQN6ie4EmK4WyuUhbExkxv69yFeAzdMq952JIBAl5fMiicOGvqH1BF66AF/0
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
/t+80hM8OWddT9t/71JS/wN5/bRT
               "], {{
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                  112.50000000000001`}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -111.35225167686234`}, 
                    Offset[{4., 0}, {7.5, -111.35225167686234`}]}, {{
                    7.5, -89.91310315818886}, 
                    Offset[{4., 0}, {7.5, -89.91310315818886}]}, {{
                    7.5, -64.90076321973646}, 
                    Offset[{4., 0}, {7.5, -64.90076321973646}]}, {{
                    7.5, -39.888423281284034`}, 
                    Offset[{4., 0}, {7.5, -39.888423281284034`}]}, {{
                    7.5, -1.7152136891232084`}, 
                    Offset[{4., 0}, {7.5, -1.7152136891232084`}]}, {{7.5, 
                    36.457995903037656`}, 
                    Offset[{4., 0}, {7.5, 36.457995903037656`}]}, {{7.5, 
                    74.63120549519849}, 
                    Offset[{4., 0}, {7.5, 74.63120549519849}]}, {{7.5, 
                    108.56294735489703`}, 
                    Offset[{4., 0}, {7.5, 108.56294735489703`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-2.0\"", ShowStringCharacters -> False], -2., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -111.35225167686234`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-1.4\"", ShowStringCharacters -> 
                    False], -1.4000000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -89.91310315818886}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.7\"", ShowStringCharacters -> 
                    False], -0.7000000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -64.90076321973646}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -39.888423281284034`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.9\"", ShowStringCharacters -> False], 0.9, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -1.7152136891232084`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.8\"", ShowStringCharacters -> False], 1.8, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 36.457995903037656`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"2.7\"", ShowStringCharacters -> False], 2.7, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 74.63120549519849}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"3.5\"", ShowStringCharacters -> False], 3.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 108.56294735489703`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                  False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  RowBox[{"Blend", "[", 
                    
                    RowBox[{
                    "System`PlotThemeDump`$ThemeDefaultMatrix", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.26175494451869585`", ",", "1.`"}], "}"}]}], 
              "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
            RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"0.33586456635039963`", ",", 
                    RowBox[{"-", "1.4000000000000001`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.41793228317519976`", ",", 
                    RowBox[{"-", "0.7000000000000001`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.26552080907199954`", ",", 
                    RowBox[{"-", "2.`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.6252497032589521`", ",", "0.9`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.7504994065179044`", ",", "1.8`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.8757491097768564`", ",", "2.7`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.9870821793403695`", ",", "3.5`"}], "}"}]}], 
                "}"}]}], ",", 
            RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
            RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
            RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )],
       TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {2,"\<\"r\"\>"->
  TemplateBox[{
    GraphicsBox[
     RasterBox[CompressedData["
1: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
VmPRprQ0DlorQotrL7JRKuIt22XIg7PQgccrNfmwdIkTfXqNj9QaoYJkVy6u
nH5xMfZlPxzEBPxHjG6Mzw1Z5HCahch2z1qr/VzkT3iFKqyg4FQwtz47joHw
xekT51zK4fN+YPDGxx6ErL3xLiONhcLFJ5wqfLgwf59YaavOhP6XSuv2IQ7i
hwdO+5N9/slGzznEiA/5116uruc4iEq6Hyrs3oOGnC0LggMoLC9SvbJyDgsJ
DorLFb7XY0kkXzuFeOwl4QbGyB4KcmumqIS9YOHT1eGi3tYuDKdHyJ9UInki
N7Fp/XIuZMXey03NpNDi/Zt/eoSF3MVdzoquTXi2YLXb0ftk/m5+lI/zZ8He
8WAI/2YDsn7tGlcmfPqWt0B2jhcTtjPuq1X9qcF+c6u+vTv52DSnoszlIQeD
22du91vRi1c6MWlLJylMt9108sG2AdCOqV3RuEf4XMUpfb0dD9XbKh9nniXc
ba3wsuuSAN8Vg52V5pP5P3rwzdpJAR79Hlmz69h3bHUWzPx5jo8mPlvSdSUX
B7QPiF6R6UePS8anEkkutGJwqD6bwikcvtwsLcD44o2Tq0wpqKrbVW7WYOK2
8ZkS7+Yq7JHdb+lmKoDZ15zfquR8byXZ9YWRXpo8czqiYgETFdsPnLce4MD/
4vDsLS4Ujn+792T2PD7snzTPM80YQAh/VtlvjU4MBW21j57RDraBuIrfdDJ3
2jaxi29wMPex7KS2OwveLMVRp2dc0PPOFN4nHns+98xtF38+xMu1vl7czoXv
8weSD6z68SRTwVNYrRsHA36esSH5N3/N8vYWLS48VkRN2biIgmWVz62nxxgI
djm+d7CqFH8ibelNx7rxuiHl/CsLFspdxSQKtnAxz/a8ZaUdA1031S7NIz31
7I/4XlkVsn/Ms9IUDUnudb5hyp3moOPciSk+Fj14X/6768JJCtEPvDInapjY
LF6Xpplbh0yv2FlydD6mDxQ3H/7KQ9MJ2bm0/UwoM7TF7qd2YkbnqgLjWiae
H3m/M2aYg7NdfKFdyRTsd82VUPpEfFwuRcw2phH+wYkbk25Q2LZeqlDBlAXh
qRWXjxV9Q8s3e8bILgrCY3cWMS2Y+LpAWLSgsBqrX04998iAD/Od9yP3H+Wg
ZfOpKydX98DtgMxiW8JxGZ0T87ub2KhPe0RraW3F2s37Z1vv4YJa07HLpJNC
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
AATfxBk=
      "], {{0, 0}, {12, 101}}, {0, 1}], AspectRatio -> 1, Frame -> True, 
     FrameLabel -> {None, None}, FrameTicks -> {{{{100.5, 
          FormBox["1", TraditionalForm]}, {81.5, 
          FormBox["20", TraditionalForm]}, {61.5, 
          FormBox["40", TraditionalForm]}, {41.5, 
          FormBox["60", TraditionalForm]}, {21.5, 
          FormBox["80", TraditionalForm]}, {0.5, 
          FormBox["101", TraditionalForm]}}, {{100.5, 
          FormBox["1", TraditionalForm]}, {81.5, 
          FormBox["20", TraditionalForm]}, {61.5, 
          FormBox["40", TraditionalForm]}, {41.5, 
          FormBox["60", TraditionalForm]}, {21.5, 
          FormBox["80", TraditionalForm]}, {0.5, 
          FormBox["101", TraditionalForm]}}}, {{{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}, {{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}], 
    FormBox[
     FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              RasterBox[CompressedData["
1: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
mdLpifc6/7s/YIQrFdkwuv57FhP7H3PsoPk=
               "], {{
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -112.5}, {7.500000000000001, 
                  112.5}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -105.67868866690459`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -105.67868866690459`}]}, {{
                    7.500000000000001, -33.31554402116042}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -33.31554402116042}]}, {{
                    7.500000000000001, 16.808169925667666`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    16.808169925667666`}]}, {{7.500000000000001, 
                    66.93188387249579}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    66.93188387249579}]}, {{7.500000000000001, 
                    109.89506725549121`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    109.89506725549121`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-0.9\"", ShowStringCharacters -> False], -0.9,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -105.67868866690459`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -33.31554402116042}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.7\"", ShowStringCharacters -> False], 
                    0.7000000000000001, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    16.808169925667666`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.4\"", ShowStringCharacters -> False], 
                    1.4000000000000001`, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 66.93188387249579}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"2.0\"", ShowStringCharacters -> False], 2., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    109.89506725549121`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                  False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  RowBox[{"Blend", "[", 
                    
                    RowBox[{
                    "System`PlotThemeDump`$ThemeDefaultMatrix", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.22847731526020124`", ",", "1.`"}], "}"}]}], 
              "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
            RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.2518675216297825`", ",", 
                    RowBox[{"-", "0.9`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    
                    RowBox[{
                    "0.6718736993483845`", ",", "0.7000000000000001`"}], 
                    "}"}], ",", 
                  RowBox[{"{", 
                    
                    RowBox[{
                    "0.843747398696769`", ",", "1.4000000000000001`"}], "}"}],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{"0.9910677124239554`", ",", "2.`"}], "}"}]}], 
                "}"}]}], ",", 
            RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
            RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
            RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )],
       TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {3,"\<\"||r||\"\>"->
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kHlMUwccx6kuMgeSBZgcHkC3UAS5B6hQ+gVbjnKVGzYyxzhDEMOWydhQ
HxUjl1VY6h+iAzPn5owFBekGgmXKpGMeQIDMBhQQZcAKyA0WtoXfe8nLy+d9
3uf9fu/ZfHYkKm2Tnp5e2n/n/9eNY1rQOl9y3uf9SQHdQF/6Af4rjpb4bcxd
LOi+zAwTvwuJcYd8SPGK2BQPGpS+ldc0xObo652t0xmNEO9E0PY3Xe5tPcTW
aJGJYizLBom5qL6aP5Zjqyb+AJzm1d/+rukntoXwe6MtfllKYjs4TkukP1t0
EdujOKs1hS8svLvBe+E80Flyu7GdvBNsgtTObbeayLsgd4vFF2sp9eRdYWXE
Dxp2VJN3w8RPRfaqShmxO3JO2xwqD+8m/hBSwZPGCwHs+zxg1N2jXuzrJ/aE
uC1Z3cXpIPaCn9UlrwK3AeJ98Nm+V99b2EW8H6PPYZbkOkR8ACFz38lXkvqI
vVGRkiM/0jBC7IPhh9dzHUM1xHzwGhXSCe5LYl/cCRkLFG99TiyA9NelMu6x
MWKgaILP+yhheIMZwPKmL098b5y8H270h6Vmf/uCvB8qb77zecH8JHl/CJdN
G8qbaB7jj+qE9N1NJlPkD0IZsadO8ZDmMQeR2VVZtCCbJi+ELBGTdX/SPEaI
mmHPZ/MlM+RFcJr8ZGuykuYxIkw4GKy3fv2afADyebfvMWe05APwqPGcmWvy
LPlA/LAk/SeNR/OYQDzm1HTu4c+RD8JAzUr4CR3rgzAV3FNabDRPPhju3OJ0
bQftwwRD552p79bLejGurSj4F0toH0aMv9bt5SYVC+RD4GJSLywQ0D5MCE6a
+Ahs/RfJh0JPl+Rwdpz1oTAXmKXmjrE+DOeTvHmjpbQvEwbl2aobhkVL5MPR
Crm02pr2YcKxbfwXkc17y+QjoNkUnTRznfUReFqs8RyvYr0Ex8O056wcaV9I
0L6/bLHefIWel0BWaNp74gp5lQQmo69dNGXk9SIxu2vZIs+Y9kUkssQ7B/+Y
Z/tIPNOXHsrLI6+KxFz94sRy3Cr1UfBad7PW9bB9FOSy7tNjteSZKGiqik6V
29H3qqJQclUq3sV5Q300DGTZFYovySMaOxRPs7gh5JloOLi7pmqb2T4aXEPj
HSdlbB+DjK/yW/pW2T4GH/uvOag72T4GI3Z+j6Y86H+pYmDqdFn/m8066mOR
zLHLbMkij1iIve8YWHqSZ2Jxa+BTWcsFto/F4zaZyCaV7eOgjXiRlvE728fB
2MCw9C0Z28cBp2qP2WvZPg7DovtDzg1sH4+jBU2pOcb0vxGPfVci+fr9bB+P
S+nKwkp38qp4tI+apL9cYPsEHK4NttZGsn0Cmu9vs7IxXaM+AQ92D/345DDb
JyAj9XjWZmfyeonwyD46U3ia7RNRMWgw3hW4dvdfgB4ZFg==
       "]]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., -2.1140185902910638`},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {
     Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 101}, {-2.1140185902910638`, 0.9377323337423273}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->FrontEndValueCache[{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-1.6094379124341003`, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.2\"", ShowStringCharacters -> False], 0.2, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
        FormBox["2", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.8971199848858813`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.4054651081081644, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.302585092994046, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}}]]}, {
  4,"\<\"||x-\\!\\(\\*SubscriptBox[\\(x\\), \\(*\\)]\\)||\"\>"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1iw0wFnYcx2mN1px5Gm2FO++jWM9DJOL5en958PC8eimk4TDSy6ZDl+Ma
qba1PXIocTvHul4u7JrIyEvTk2uz00bT0GFLjDWl0my7fP93v/vf5/f5fSyT
9sqSV+no6CT/N///r96c2D6l/r62TB8rC/TvbRh2LCavwcwd/09NCshGSJv2
Ef/9EdkYc6rnS+Js8rs4lGKUPJtKNkPcYsCDxSSyBaIfBdw+G0e2wiaX2fuO
arIN0sRTTcciyXY4aV6cXRhGtkd5rjbnYCB5E7xt3Xq7fMmOeO8toVboRX4f
d3eZ1N/cThZC8q26sXIrWQQIKldnisjOcHuaua7MkeyCI5da9SocyFtxsMlB
uMaW7AqbhTOtrlZkN7QN95SNmpO34QmWN4pMye7oDCryMHyHvB1eM5G++cZk
D0wniIeKjMieGNfNH15rSN6B5qbSdLe1ZC/4ZlSdHdAne+OYxuaa2WqyGKEu
eQu3dMnADc2vgi3/6L3iAsCqpvTioxcrrOODc78HL6Qs0vvg2Yh1s+gJvS/C
xvoetv9F74ve40+nNHP0fkgUb5Q6z9D7wd7Z/E/BNL0/4vQCRNen6P3RlveT
Sd0EfQBWtUhdd47TB2DoYbKLZJQ+EMJLfvkGI/SBcBnT0ejeow/C45KSz7U/
0wchMefwZM8gfTAy0lqU5QP0wWhZTnQ6/QN9CAqvhbzI7KcPQWbigcZsLX0o
LiRlz4d/Tx+KZXHWkryXXoKOvoe/uXbRSxAUldDr3Ukfhg6Vd7VNO30YGvdl
LG5pow9HhbHQaUMLfThyn1+utbtKHwEfE/cr65rpI9BVYPDYspFeiuCGzkyj
y/RSGEx/7WF5kT4SO998u1NwfoURifAGs1HrBt5HYkb4ncX6uhXuiEShh/5u
h6/YR+FZT+l68xr2UahV2keIqtlHwXKy0cuuin0Uus93B3tWsJfB+o0SiE6z
l8HCOVEnSMNehsGbsrtep9jLMHT0ulDxGXs5qgJzOyUn2MtRpDWtSSplL0fI
iYn+2GL2cnjMXjDff5S9AruWTt1JL2SvgNU33gWFBewVsGuPqc07zF6BPa2C
ui/z2CvxmuuE9clD7JWwrBzKqvuYvRJ7Zm7sOHeAvRLjt8e6r+5jr0JxZe3g
lSz2KggM5V/c+pC9Cukv6+91p7FXQWJb1jOSyl6NHwcmvX/5gL0a8al90vkk
9mrsdx2bn05gr4ZBTqzN6/Hso7F5m/0fy7Hso3Fmc7X7hhj20aju1zM1VrGP
RvzwJ0VOCvYx0BR7HrGPYh+DB+W7X/pI9fAvn5WTVg==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1iws0FXYcx2/mkTLTlKkYGZJj5Jm3r/fjul0u1716qKRMFpslOUzKnJw7
U5qjxmGpZjPpwSxTRmaWTUoeTWYxi8yxzKSjmbad3e//nN/5n8/v8/usi02W
7FERCARx/85///9v2uukfbs07UMNKBf4W/Cw06SQvBTxXS/4dRWQddBdanIt
PZ+8Eu4J3nZmCrI+Kp12Vt05RjaAjuph48xcsjEyustOrc8hm+Bh+XXtnmyy
KcRvDuZmZZHN0ejybGFDJtkCphqrD/Slky1R0LtpMjuNbIX5iqhYq1SyNXYn
pw7cSyFvRJd7UVjOW2RbOC+r+846iWyHs/e6Pe8nku2h9cl0fW4C2QFpKS+9
bhtPdsSIl/X5n+LIThC+KFqbF0vehPr7iSftd5KdYfyZQvPBdrILFKlV2Yqt
ZFc88bn51DGa7IYdOuNJI1Fkd3QMqY3lR5I94FBtut1ZQvZE+SHf3lEx2Qua
AbHC4yIy8I7ukVZXoZKzgaHhj13Ggui9EXTx68uFAfTeqM0YWu/hR+8Dw+CF
8kfe9D44prdWr8iL3hd/jLp84OVB74ttV+Sqk670fvg2Ky2j2JneDzahxTPe
TvT+KFldnzBlT+8P1fGe4dO29AFI+mJG5mdDH4CBIytuP7aiD4SveGNAqSV9
IGoMxE0BFvRB0P9tv8OMGX0Qcq7mV5e9Rh+MqfeqTYLX0QdDJvn+o9lX6UPQ
ajShc8aAPgRWUxp5wjX0QhQ3mj+fe4VeiCV5/gfPrqIPRaI0bkqkSx+KPpOc
uHkdehEwXTF4XptehM+bWiRhWvSbsfL9Bx1/adJvxmH5Ij7VoBdjwsywQaJG
L0bkn242iyr0YWhu2VJZJVAywrChIN1QuqiuvA9D0dbTRYIFJbeEYdHi6vIL
80oWhCN+ru+o7KmSEY6738zOqzxhHw73Qt23L86wD0dljN2j6Gn2ErxsFb5D
7Xf2EmTOJ/dfnmQvwVh7gWjbBHsJwotq2jTG2Ufg2q5Ot7pf2UfA3GayNuYX
9hE4saBpuWyYfQSedVhU1A+xj0TsqUD9XYPsI9EZt/e41gD7SDjZ5ao39LOP
RMXzc+/u7mUvxfJbrbPad9lLcbBkJLHxNnsphuMFo3tusZcixNFoy4of2Eeh
XsWz+/pN9lEwurMt6I129lFQlGU067axj8LsvhKn5hvsZYhx/qpmXzN7GTrU
fjTVa2Ivg33PXOmNRvYylJ1Zpbu/gb0cmkkOCv0v2ctxwC1iSVsdezl+Xppy
KPkKezmC+k88XnOJfTRqz13a235BHf8AVU+QJA==
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0., 2.7762227902696197`}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {
        Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotLabel -> 
      FormBox["0.9988628474303284`", TraditionalForm], 
      PlotRange -> {{0., 101.}, {2.7762227902696197`, 2.948142756923307}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
        TagBox[
         FrameBox[
          StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
        TagBox[
         FrameBox[
          StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
       "PointLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}}, 4]], "Output",
 CellChangeTimes->{
  3.873290758132992*^9, 3.8732908245857806`*^9, {3.8732908759249835`*^9, 
   3.873290902161561*^9}, {3.8732909431730094`*^9, 3.873290967601866*^9}, 
   3.873291045049974*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"fe19f51d-26f9-4a47-b5bf-2b9219109879"]
}, Open  ]],

Cell["This is not the greatest algorithm in the world!", "Text",
 CellChangeTimes->{{3.873289402983469*^9, 
  3.8732894207131567`*^9}},ExpressionUUID->"2b57d707-f715-4819-9d35-\
66c0e523af97"]
}, Closed]],

Cell[CellGroupData[{

Cell["1D Minimum Residual \[Section]5.3.2", "Subsection",
 CellChangeTimes->{{3.8732868013679004`*^9, 3.873286806241394*^9}, {
  3.8732911013128214`*^9, 3.873291106790098*^9}, {3.8732913699535313`*^9, 
  3.873291371063731*^9}, {3.8733744280865602`*^9, 
  3.8733744570522566`*^9}},ExpressionUUID->"2c692529-86c2-4fed-af94-\
6ef40a96f2bf"],

Cell[TextData[{
 "Taking ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalV]", "=", 
    RowBox[{"span", "(", "r", ")"}]}], TraditionalForm]],ExpressionUUID->
  "78519bda-0fba-4e56-90d2-387d201f6a68"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{
     RowBox[{"span", "(", "w", ")"}], "=", 
     RowBox[{
      RowBox[{"span", "(", 
       RowBox[{"A", ".", "r"}], ")"}], "-", 
      RowBox[{"A", ".", "\[ScriptCapitalV]"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"ccdf9d9a-300e-4b64-af71-bf9d66a7f40b"],
 ".  This algorithm minimizes the residual over the search space. The natural \
iteration is\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"r", "\[LongLeftArrow]", 
      RowBox[{"b", "-", 
       RowBox[{"A", ".", "x"}]}]},
     {"\[Alpha]", "\[LongLeftArrow]", 
      FractionBox[
       RowBox[{"A", ".", "r", ".", "r"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", ".", "r"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"A", ".", "r"}], ")"}]}]]},
     {"x", "\[LongLeftArrow]", 
      RowBox[{"x", "+", 
       RowBox[{"\[Alpha]", " ", "r"}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "b534660f-9fdc-48fe-ab17-369dc5bddf84"],
 "\nRearranging gives us a version that uses only one matrix-vector product.  \
There is a assumption that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "+", 
    RowBox[{"A", "\[Transpose]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d4011cf5-5f95-4c98-8b15-ca8153339883"],
 " needs to be positive definite! We should think about why the assumption \
makes sense and also how to create test problems that satisfy the assumption."
}], "Text",
 CellChangeTimes->{{3.8732859048462396`*^9, 3.873285917336029*^9}, {
  3.8732866666802106`*^9, 3.8732868695098743`*^9}, {3.8732869070738983`*^9, 
  3.873286983485224*^9}, {3.873287505372857*^9, 3.8732875064615693`*^9}, {
  3.873289248917669*^9, 3.8732893733785553`*^9}, {3.8732911808096466`*^9, 
  3.8732912630557747`*^9}, {3.8732912973678937`*^9, 3.8732913534730453`*^9}, {
  3.8732913995499797`*^9, 3.8732914877347984`*^9}, {3.8733740112052813`*^9, 
  3.8733740953559227`*^9}},ExpressionUUID->"a8b90903-62e0-4d2a-aba5-\
d98c0c8ea230"],

Cell[TextData[{
 "1D Min Residual (inner loop)\n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {"\[Alpha]", "\[LongLeftArrow]", 
      FractionBox[
       RowBox[{"p", ".", "r"}], 
       RowBox[{"p", ".", "p"}]]},
     {"x", "\[LongLeftArrow]", 
      RowBox[{"x", "+", 
       RowBox[{"\[Alpha]", " ", "r"}]}]},
     {"r", "\[LongLeftArrow]", 
      RowBox[{"r", "-", 
       RowBox[{"\[Alpha]", " ", "p"}]}]},
     {"p", "\[LongLeftArrow]", 
      RowBox[{"A", ".", "r"}]}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eaf452c7-c998-4d30-b437-650a93160bab"],
 "\nThis inner loop updates x and rand  at the cost of one matrix-vector \
multiply and a bunch of less intensive arithmetic."
}], "Abstract",
 CellChangeTimes->{{3.873281919812972*^9, 3.8732820676004825`*^9}, 
   3.873282116086191*^9, {3.873282678536902*^9, 3.873282692422753*^9}, {
   3.873287521136597*^9, 3.8732878358085275`*^9}, {3.8732878797504597`*^9, 
   3.8732878804136667`*^9}, {3.873291360881978*^9, 3.873291366817668*^9}, {
   3.8732915100614815`*^9, 
   3.873291565467374*^9}},ExpressionUUID->"acda6426-eae5-43c0-aabe-\
f41f9c34ebb3"],

Cell[TextData[{
 "To turn this into an algorithm we need to put it inside a loop which \
terminates when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "r", "||"}], TraditionalForm]],ExpressionUUID->
  "2d7d597b-b14c-4025-acc5-b426c6db5337"],
 " is sufficiently small. For right now I am just going to run it a fixed \
number of times on a randomly generated test problem and look at the results. \
 If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "+", 
    RowBox[{"A", "\[Transpose]"}]}], TraditionalForm]],ExpressionUUID->
  "3812e431-8396-4db9-8859-ee128dd80663"],
 " is SPD then \[Alpha] is positive and the algorithm heads down hill!"
}], "Text",
 CellChangeTimes->{{3.873287886145522*^9, 3.8732879544585876`*^9}, {
  3.873288916152757*^9, 3.8732889578261976`*^9}, {3.8732919376790524`*^9, 
  3.8732920096512823`*^9}},ExpressionUUID->"bf441931-9397-4e52-8ea1-\
6d757b4ec164"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MRStep", "[", "A_", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "r_", ",", "p_"}], "}"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "xOut", ",", "rOut", ",", "pOut"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"p", ".", "r"}], "/", 
        RowBox[{"(", 
         RowBox[{"p", ".", "p"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xOut", " ", "=", 
       RowBox[{"x", "+", 
        RowBox[{"\[Alpha]", " ", "r"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rOut", "=", " ", 
       RowBox[{"r", "-", " ", 
        RowBox[{"\[Alpha]", " ", "p"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pOut", "=", 
       RowBox[{"A", ".", "rOut"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xOut", ",", "rOut", ",", "pOut"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\[Mu]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "12"}], ";", " ", 
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Making", " ", "sure", " ", "A"}], "+", 
    RowBox[{
     RowBox[{"A", "\[Transpose]"}], " ", "is", " ", "SPD"}]}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ASym", ",", "ASkw"}], "}"}], "=", 
   RowBox[{"0.5", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "+", 
       RowBox[{"A", "\[Transpose]"}]}], ",", 
      RowBox[{"A", "-", 
       RowBox[{"A", "\[Transpose]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Min", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"Eigenvalues", "[", "ASym", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ASym", "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Lambda]Min", "<", "\[Epsilon]"}], ",", 
      RowBox[{"ASym", "=", 
       RowBox[{"ASym", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Epsilon]", "/", "2"}], "-", "\[Lambda]Min"}], ")"}], 
         " ", 
         RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}]}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"ASym", "+", "ASkw"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Defining", " ", "function", " ", "below", " ", "5.20", " ", 
    RowBox[{"p141", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\[Mu]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]", "[", "B_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       RowBox[{"B", "+", 
        RowBox[{"B", "\[Transpose]"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "/", "2"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Verifying", " ", "that", " ", "A", " ", "is", " ", "now", " ", "suitable",
     " ", "for", " ", "the", " ", "Algorithm"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "[", "A", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Five15Ratio", ",", "Five20Ratio"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"\[Mu]", "[", "A", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Norm", "[", "A", "]"}], "2"]]}], ")"}], "0.5"], ",", 
     RowBox[{"Chop", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"\[Mu]", "[", "A", "]"}], "*", 
          RowBox[{"\[Mu]", "[", 
           RowBox[{"Inverse", "[", "A", "]"}], "]"}]}]}], ")"}], "0.5"], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xStar", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";", " ", 
  RowBox[{"MaxIter", "=", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "n"}], "]"}]}], ";", " ", 
  RowBox[{"r", "=", "b"}], ";", 
  RowBox[{"p", "=", 
   RowBox[{"A", ".", "r"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xrpData", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{"MRStep", "[", "A", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x0", ",", "r", ",", "p"}], "}"}], ",", "MaxIter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "->", 
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"xrpData", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<r\>\"", "->", 
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"xrpData", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<||r||\>\"", "->", 
     RowBox[{"ListLogPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Norm", ",", 
           RowBox[{"xrpData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Norm", "[", "r", "]"}], 
          SuperscriptBox["Five15Ratio", 
           RowBox[{"Range", "[", "MaxIter", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"Norm", "[", "r", "]"}], 
          SuperscriptBox["Five20Ratio", 
           RowBox[{"Range", "[", "MaxIter", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<||\!\(\*SubscriptBox[\(r\), \
\(k\)]\)||=||A.\!\(\*SubscriptBox[\(x\), \(k\)]\)-b||\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<5.15, \[Rho]=``\>\"", ",", "Five15Ratio"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<5.20, \[Rho]=``\>\"", ",", "Five20Ratio"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<5.15 & 5.20\>\""}]}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<||x-\!\(\*SubscriptBox[\(x\), \(*\)]\)||\>\"", "->", 
     RowBox[{"ListLogPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"#", "-", "xStar"}], "]"}], "&"}], ",", 
           RowBox[{"xrpData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"x0", "-", "xStar"}], "]"}], 
          SuperscriptBox["Five15Ratio", 
           RowBox[{"Range", "[", "MaxIter", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"x0", "-", "xStar"}], "]"}], 
          SuperscriptBox["Five20Ratio", 
           RowBox[{"Range", "[", "MaxIter", "]"}]]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<||\!\(\*SubscriptBox[\(x\), \(k\)]\)-\!\(\*SubscriptBox[\(x\), \
\(*\)]\)||\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<5.15, \[Rho]=``\>\"", ",", "Five15Ratio"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<5.20, \[Rho]=``\>\"", ",", "Five20Ratio"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"Joined", "->", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<5.15 & 5.20\>\""}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.873287959211655*^9, 3.873288540755891*^9}, {
   3.8732885910684166`*^9, 3.8732886437519608`*^9}, {3.8732887063555527`*^9, 
   3.8732887071264544`*^9}, {3.873288747895529*^9, 3.873288762733856*^9}, 
   3.8732888104679327`*^9, 3.873288844715387*^9, {3.8732888823068285`*^9, 
   3.8732888826196313`*^9}, {3.8732891432466254`*^9, 
   3.8732891857738037`*^9}, {3.8732907073360357`*^9, 
   3.8732909615079575`*^9}, {3.873291033857867*^9, 3.8732910441053295`*^9}, {
   3.873291573514372*^9, 3.873291630626774*^9}, {3.8732916669507394`*^9, 
   3.87329191204443*^9}, {3.873292025400303*^9, 3.8732920666070895`*^9}, {
   3.8732921612812557`*^9, 3.873292375631633*^9}, {3.873292475205763*^9, 
   3.8732925542923207`*^9}, {3.8732925925132055`*^9, 3.873292618693696*^9}, {
   3.8732928744402504`*^9, 3.8732928893437443`*^9}, {3.873292919560855*^9, 
   3.8732930790360136`*^9}, {3.873293788232465*^9, 3.8732938113271456`*^9}, {
   3.873293863853979*^9, 3.873293865802267*^9}, {3.8732939048892593`*^9, 
   3.87329391857451*^9}, {3.873373178025257*^9, 3.873373205719679*^9}, {
   3.873373239971434*^9, 3.8733732690027766`*^9}, {3.8733733046770225`*^9, 
   3.873373520605975*^9}, {3.8733735537027397`*^9, 3.8733735832940817`*^9}, {
   3.873373619054434*^9, 3.873373704540066*^9}, {3.873373836943825*^9, 
   3.8733738923073387`*^9}, 3.873373967744353*^9, 3.8733741252760615`*^9, {
   3.8733741694881897`*^9, 3.8733742854155793`*^9}, 3.873374317126231*^9, {
   3.8733743471482134`*^9, 3.8733743879472136`*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"0d65a27f-23e5-4230-a161-dfdc5445cac1"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"x\"\>"->
  TemplateBox[{
    GraphicsBox[
     RasterBox[CompressedData["
1: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
/PowLJW1skRUUgiRLRUpuSUpSkn5JVkqFVlKtpQWoaQokbVdUZSyZAlFlCT7
lkG2Mfszo9Cm5D3vnz7MPJ/ne8657+uaMcPDglQHRuClNujMnWjf6DiEsUVn
Z/07xEXF4+4bfnYU6IO7zxywZ6Dn9P5fb759wjuP9GUux/moWrolUXw+FwGK
9sZOQwMIVNm8VP02A+Y3yiTSDLm4NlPyjGschXhTpVeZaymkO4ts8fnKh4dC
umriRwFOjDK+2h4V4EeUw93zH/loYS5QnTjNxbl6RZmUf5/RJzOP2n15GEpe
47bR+Rx4vXVMj+4l5+te8vr7tt242tto8G+Kh9b6hCyzSQrOU36r5azYyNYL
1VZJpIH5UY43j5wv9+MqMota///5i7TFD1xIjuZ9eGmMPmRKCNz/RDHx9ets
mRsHucjfEy0RtXIQ/zbKW2e+ZGHoapI15ElO/OuO/XS1DddaddsGnIbgoHBn
aBmZT1iPrb2rDYUDZ43i2o0ZiGnlPR5e8gkbVxWP/rMkXFxGgiuEgx0jz/Vp
EeR65yxU4jIYmDv5o5sy5iKi/tD+ywkUPE6tEO/RJL1lGRRST/b73crKRstq
AQ5sUfsduV6AIy/pTZJLCU99jxS9V0+4Vc1BqLO8E1z/PaNtXDpWRUjwSoY5
hP9jgsL7mjDucTP665ZuTHU+HM0XojDcucH8wh8KPZt9XUPM2JgXHCe96iQN
e6TO3zxTyoey1E1d9ioerBaX5Je8o+PdO98nKeM0/Pftc2PoTgYcTcfXSmaT
Hi7+3XZ4xiCOeYYfFU5j4ZXH2f1eM0k/Hh+1PVjbDsrIXKT7+xBYq8uffSDr
r2Z6esM5awqtWir5QqsY0J4Ue18r/AnXRdVtIzaS3A1JGHcI4ODwhxnG+Uf6
YLFQ/ndYCQu77qqYSRziIfXYjbAhwgFvxjY9nxjhwORbtGPjIwpyKQpe4TME
KF0q8u6tqQBHfRx1tFX4WB8z6bLkPRsrrlxVCSjuxI7x+t8GbDr8Yy7/vc4g
/evmdD6mtQk3TZevdjncjdOeBYlef3n4HLqsk1NDgdueuDzUkQWWme3N+4IO
HDgRoin+ig+vopLHPvo8VMbfmR5cRMcW7t3FzEYaprwN7NutGEg13bin6CHx
951B7ayJARzNDu5+dJMFifnu89cK87De+P1aGXo7StJftXOE6Qi+1WVyV4/k
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
FRVOmPZD2G1BfkwTE41nCiTmx3Lx+cQ/RhGTjq7mtF971nEw8mXyte//HyfW
Vxm9p434zbsN2zYMIV47+PQOHy6WTa2qsSL+nV0vctzXmYl4s5QcS6lWNKvP
PC1zjg+jEN6vVDvivZfU5Ab9B6H+I+aa1D4GGnZnSjfP5iJ7vXTChdMUHouo
XfkTRyGMMbNujYoABzVEdROZAjz5MdQ0Hkj6Xf+3chTxsuYi7y1hfHJdhx1c
caMu7NTUHQ95OIwFxXW+9CwONm7TnfaN2YTKGZ1NzFXdUNz9oKOY+KlrW43T
2pl8dP8ejJr0ZMPd3P6jn3I3Rrs4Bm9Izlkuk/PnEw+J2/efxxSN+M/fyKlf
fv1QmqjzOtzHxNHHYWW8ROLjXiOMrWN0rJ0+9ijQgsznqELZY/K4zIPS1ilo
g7yHQmvC6iEUcuIjJf24MF2lu3gbydcFIWqvRbYyMWvj0fq2uhYcun9SU/4M
H0UVoprzrUmPb93e6+w2iCrzu1KxA8PYsmrXwbhaDn5IfdzvtJNCSvRhcyey
/+lOtqzlxCfUlx993zwuwIp65ozsAAHWD1aqZZD78L5r+bt+gIvYrg87nNd1
oeHQtt65mcPIzlcQzCHzCcjq0Do82QRWpsXJK1M0VEe+nV4lSfqrWyP8kjgf
NRraj2pDCX+Pe5zb59mN74czhBMFfHwO1Veu/s1DT+n3zVXvGEgwa3eysu+H
ssNGl5IOJtyfH2usjuOi0MO09xDxV6/MjVrhCzkQ8bE6Hc7lYZtciNDRNW3I
c5x9SspwCM1nFhzRPsHF5IhEcrs5yb3XNXHKcwiXf/Bvqe36CAn5ptm6a/mQ
DDJvm23HwbsIk0jNF19gGEIrz341DO/bIXmJ+Ry4ztSItSH5LpPW7/D5KeF/
tcH/PAwECMs73p82IsChaXbvPVYLsKtOK/UgWX/Te6tj+s6wIVu0Tb/7aifu
iMXdpLWSPp6f3ehMEf4xjptxWLgZ9/2mL/zFpyGs3q7GYw7x0pZboTtJ/6Wf
7Vp3IZiNfsm7pim7utET9jNhbh4fEnM/6O6VIXm4XXf6Ok86Ukubolco0hAz
K/6EriwD+ZYSK+9cIvN4s/7dg0sD2Pky/xrPnoVTt0eWL+/h4tGC5R9fHG2D
12bHaD2bIShVybacPsrFmZzCPrn1FOoWsJNeTQ7j71/tPa17PkK19GX0whV8
NCTqZw4u4+BW/LvlOjJfUJ+gtqOP+F7JvfWZP75zUKPtau5AuOcVvso63eRg
fYzg1PQTxC+EPn8tZfBBN2wMsNIRoFBm2amhIQq3/Lp9VdTYsK/aOLD6SCeW
2DwI96mkw9qH2bpulIMVj6/tdfrZhE1Ou3yZs7tRuUdYO0WcgurYktqUCgpe
75Rlzqxh4d55P8EHvw6YZDKc4nJIf8YsxdwZPBi0Zee/3ESH3yLlZy+m02Dq
3nVTTYyB3ds1JZujOeA2bJn58L8BFO5zD64zJv6eqdsl+YkL9a3OJRp6Hbj5
OeNbtiYdE+6ftdmqXGi/zL9y14xCKsdHO2AGA2l+8/NLYj4ijpO3pF+XjxNi
DuzSBRyUXJgTEkHrxejNGJtfsWyM7VPNK+jl4XT7lZPJsXwoNV1/+82Qg807
uwzHTShAzMBT+D3hn96A5Y1aAlRNO7I+lkZBdHpRW7cEGwH3RKQ09nVCuv3R
duEyOjzvl0Z8H+PAw/jUiVkWTeiUt+2sLu8BY9mwWU4tD43eG+Z1FJEcWF+8
cJksC14XVTaIdbfDfsWM+8+f8RGseXDTGyEeOleyxSTW06Fz59Fk4vcuDCxW
u2U6jYGkkEyp6TEc7Dn0ysjdZwCnJxLo8oSjtv1L2+rUSvpd/Pbqu3YdEBUJ
VLmyhg7v4BmCqEVcCA9cnHfrCgWDiotJFXZMsPPcTR0GW/Dwb1zOy3V8lOj/
ftrhwEFUwW+BScMX+M2S2V8/xsb3Z8kFFvMoiJzR1Kt/wccs68KErnlk/Zds
gaw2yaP1oYrxZXzYrVtuGGsowNmO3G+pExQsZqvQWvazYSyX4DPq24mF7OXC
Ru/oiLtXxRb5xkHS4sE/DepN6Gp71j401YN5e87YxRGOCLySqfkij0L9g533
H/1hwmdGVUXohXYczbyJn4Sf3wjv5LWq8dCO+FPWKXTURulu2KhOw5dPM2qH
5hEfys3zXRPFwaJjEnGzyPV+B0W/qdDkIEH4fkEt8VrqmEjgbZMOzKCWiW/W
pWNVfMJNZRUuUqdv8YtNJvxLS3niEs1E544y8xmVreh7tezarijSN39p9MQA
cg4f2q8YaBjEkmGlHxnv2XBRLU/W+cuDhsLpyK33+VijdaD4OuFs8b+fH3Ps
KPQrWlk8buXDcIbcjbzTAlj1v9NeLSlAq9vBY8PqPGynb07M29yFE2XH9i96
NoznTjKnVR8Tv9Cd1p+4vAkP8ubx1Ed7sD8kdmV6JTk3JTUy/BIKprLDInYL
WbijKqQv+a8dxgnmkqakF/sfZpxgylLo9fJRVhdhYmlOxyFqrB+Tlo//eExn
oVYlZxP3KfH3jWln7X2HwfzItz5G5qUvunt7BllPy1mV6Q1WbbD3Pai20GQI
D20bcnnHuHA8+rh8zi0KFRzFJ3kpTDxKfdxh+7cVxjm6Wg43+BC73hd9OJWL
H3YTdSYGQ3jhdNH0wgLS7z9ZV+05HBz4tWhB6yEKvuw1Q0VdFA5R9BfvrAUY
ST1QnvNPgHMOO6afuiSA7N2N1cXGAsQMVb7NTuXh10VdBavDXZj+ZWJFSukw
3pWZOF9M52DdcNi6gr1NEH7XXHctsge/PhQaqxN/7HWcR8uR5EO4nV28kviJ
B7M97khsN9a2fc2bMcHHsUMs+YmlFIIiz03XXs1EcZZQH8dwAGsraZqpaizY
9LPbJSu4EIz8UUxJHobLU0+jXfc42G3YfLJrDYUoG1rhGaoVRqv8jRizhnB+
8M/3aWe5WKzr+fj1DQo+5z+6jx1nQixucNMc51acs6a5yJBcUTWs42+OJv72
4uer7SJD8JRTnK81fRjFlU3rfbZysNP33/gf4tdNO3d+jbLmY84nw7LoaAEm
f791S1g6gkh5h6D9EaTvTy1kzSA5vWTp8j7TUOJJl1cfy/btQqWaTXvBm2FE
vjG3MnrAwUS4nbGFbDPOdfj730inITEmUPbdfApvNpd7LpInviI6f9PJ52wk
ijo65ev34MCjC04rfvz/ezAGPC6S8y77dsIkToqJxwrTRScUB7C1pmNiRI6F
KH7oYYciLlqf5Z16rT0M2nBnwqcDHMTPdUzZLEfhvrhR48L2VuyeqbT2h9AQ
tK6/PNAURvhui97UbyMKGtNmjonQhzF0anJX08Va3Nz+H09Bn/jBeE2t7BIO
ZG08wqIEvTD7dUOMmzgAZ0uHX9f2sVAj6+5qS3jmmVDn6QFVPtRnWNnlEt4R
f6Rhn6wwArXTg/NjSN/fjdRVEB2jwL0s9UrZlo2kUc4l+xud+CvaIxXVQUf0
WKN7OI/0r5+41znVZvR/2Wfh4UDD9bq4I4fUSb+/aK7dNo+PrYO0nxkFbEhH
DfrIWfZgp8WteRuz+fia5r8y9ScXXrPyC83V6SidX/PJ628XlDu4WTdJ72zM
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
9J3+qeoMPwFW9m6afKNL4X/CzMuU
      "], {{0, 0}, {12, 101}}, {0, 1}], AspectRatio -> 1, Frame -> True, 
     FrameLabel -> {None, None}, FrameTicks -> {{{{100.74875621890548`, 
          FormBox["1", TraditionalForm]}, {76.1268656716418, 
          FormBox["50", TraditionalForm]}, {51.00248756218906, 
          FormBox["100", TraditionalForm]}, {25.87810945273632, 
          FormBox["150", TraditionalForm]}, {0.2512437810945274, 
          FormBox["201", TraditionalForm]}}, {{100.74875621890548`, 
          FormBox["1", TraditionalForm]}, {76.1268656716418, 
          FormBox["50", TraditionalForm]}, {51.00248756218906, 
          FormBox["100", TraditionalForm]}, {25.87810945273632, 
          FormBox["150", TraditionalForm]}, {0.2512437810945274, 
          FormBox["201", TraditionalForm]}}}, {{{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}, {{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}], 
    FormBox[
     FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              RasterBox[CompressedData["
1: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

               "], {{
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                  112.49999999999999`}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.05658513364932`}, 
                    Offset[{4., 0}, {7.5, -112.05658513364932`}]}, {{
                    7.5, -77.7916943235455}, 
                    Offset[{4., 0}, {7.5, -77.7916943235455}]}, {{
                    7.5, -42.09909972968737}, 
                    Offset[{4., 0}, {7.5, -42.09909972968737}]}, {{
                    7.5, -7.834208919583534}, 
                    Offset[{4., 0}, {7.5, -7.834208919583534}]}, {{7.5, 
                    27.8583856742746}, 
                    Offset[{4., 0}, {7.5, 27.8583856742746}]}, {{7.5, 
                    69.51272921521799}, 
                    Offset[{4., 0}, {7.5, 69.51272921521799}]}, {{7.5, 
                    111.16707275616142`}, 
                    Offset[{4., 0}, {7.5, 111.16707275616142`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.98\"", ShowStringCharacters -> False], -0.98, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.05658513364932`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.74\"", ShowStringCharacters -> False], -0.74, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -77.7916943235455}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.49\"", ShowStringCharacters -> False], -0.49, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -42.09909972968737}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.25\"", ShowStringCharacters -> False], -0.25, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -7.834208919583534}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 27.8583856742746}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.24\"", ShowStringCharacters -> False], 0.24,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 69.51272921521799}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.48\"", ShowStringCharacters -> False], 0.48,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 111.16707275616142`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                  False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  RowBox[{"Blend", "[", 
                    
                    RowBox[{
                    "System`PlotThemeDump`$ThemeDefaultMatrix", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.8015196203600924`"}], "}"}]}], "}"}],
             ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
            RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"0.12364172439615041`", ",", 
                    RowBox[{"-", "0.74`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.250789790478532`", ",", 
                    RowBox[{"-", "0.49`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.3728519339176184`", ",", 
                    RowBox[{"-", "0.25`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.001579580957064059`", ",", 
                    RowBox[{"-", "0.98`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.6483856605390481`", ",", "0.24`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.7967713210780962`", ",", "0.48`"}], "}"}]}], 
                "}"}]}], ",", 
            RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
            RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
            RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )],
       TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {2,"\<\"r\"\>"->
  TemplateBox[{
    GraphicsBox[
     RasterBox[CompressedData["
1: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
xLiz2sPSP7MN/ebOq5voNoSeV2emSpI+e0z3TDLp310ZV5JVJjXjLPO1+Trd
Bc/2Yrv8URQ6NyskntnNwl2ODaw0JNyQ8M82T7kDawNnKpfaEv2klTUuihGj
/4zTos0PW7HszJSjY8k9R1gnHGWkKJwunK04poicq2LE24eDzVjNu1iywlCA
rPTLLxTJ86jhFYy3D8n3G4tUN7aLoTT9yL/vjmTvmrefm+bAYt+8k35tp8nz
R/B3/lRoQ3TfY1e72y14IKk2qXWTAOM2/V70iPCshIHzdLeEZny13PWpR5bk
uOrdv18Id8Rm+dWFfvmCWcd/O79b2YXx1Umv9ueIsbOzIKOqsxmVDzbVVusI
4P0ldY2pHvHFCDP3fjJf1Wz7t0/fifG59sebx9rt0I9auaRV5iv2ra424Ny7
kJmZ0Gp7U4zqa3T7lw0sgn4PKSjXi7Hhfy2beTRUj///KVGRiESKQitFhFQ8
sxRp0Z70lpQoW0UiLZRIQlFIIVJIaJO0KImy77Mw1tnvuCNUslXf+/md3/w3
98y5c+9reT4fz3Pu7VyS4qbXg2fa3ebn73XC/mDCYe8DfLjxExm8/z03cbCs
NVKxE1V/tMfeGPKhzKo9z9MX4aTs7eR7Th040nz+ptQ/HrJOxQ/pKoqgF3JP
WryHyoPPC6K1XhMI3vHs5d8P3bCYcW6NxRYx3LZYVt64RcCrvG1p9t8uTLxf
yuo5xILXj0sF3W94UDbzP86luLL9UUTUVeo+xr6v3cmbK0Dkq/Du7rci/DGI
Nqsm2+Fe9lonI4mHQxZ0wTvqPi5GycU8HmjDIrq67KEdPOjrSR53fUJgzarl
C9jbKP7hhbWH3yOwoVGqN8awG6OnDy5OmcxCMevoGuU0HsQG29VvMQhkR6rV
WrhSvjPFnPGMQ8BJzXRDwn5qXzRqns661IaVCnlHJ/R5qGVKT9NOJMC1tv/x
KpqFts+zDFrKefjj++VjYj91/amJDNO1XbD9Ivc0LoKPJxss576jfDI45nfh
BRcxol5nK8h2Eni+4/eRbZt6cEs5/+j+s2LkP55h70Hp8j2ZlMr+xVTO2aJ0
ueNjO2IMnszLiuLBbs0TVSlqj01V7fYc3ylGvdkVOUY2gUeby9Vogd3QGBoy
2ryLyhcMUdVSKikv8VK4q3a9G6zE9M9rzNpQ9mEnK2IeD2NBvSnxUQRcTA2S
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
fTqBT290dxIrxDihFBEomEvlqVcTbw3bOyB74VT5UWMxfq+RTb6/jtqHm78O
tzhROux11NdZgYke08+9MnFcyFefLf7yjPKXx+6k0yKqX6WdyRd+CdG+0Iwm
Y9uB5K+3FSLcxVg+0dmf8Zviy/9UM8/eoPYouGrg/iExXtvMf/+2jcDKpIlV
eeY9eDMnL6a5nYHttw3WNp/lQslE99F8Krd96F4w4pXDRMWk3Y1nWVyosbev
lLtLIFCz/l/WBsovypd+jThOXaf9zo6zK7vQUct1HtPrgJJFk4/mEA9F55Ys
uTJNhPTrRqbTq5j4eIi/37ePiw0naz//onRyultq1smt7SgKjVjt4MlDZ9zb
ebXU/8YdCCuZqiRG2KpMhvNjITpLN3gJZVkYTzTRFI6ReHbowJv2dUI03vNY
L/Juw8/UuRn5dCYWcfq81Ye4GLV9qk+jONRK/dLKdkrPRoZmT762lY9bAanC
dRBh2dK0b08lxTC7qHDu5AEhlibMbrPqbUN7A8+85g8TravCDCyn8PCphNj5
nuKokN6V4/aHmVAKWCW1tJjqY+M9i62ZVP14xIj2lx4EROKEZoAACvC/e+m7
CJVRfo775ojxza1mq36xED+9V8wh97Jwrf97wfxYJj4rL96RWM/FVlv/2MUp
BE4UGqeumMyE1/6nR25HcVF9h2PVTOlMd8YOyxWzxVhsIRP3oYA6j3WJoMyA
hdw3RH7pPDF2SroSnQ1CzJ28b57iK2r/3Y1Ohv0moZu2ij55hRCtIZyyaMM2
TJq+JXH5VDFufrXUZgQIsaNv7drxHe1Yq3vsdssBJvqNyvP/FHIh5z1xejuV
+88NX1n2b5zEmo4Lf9M2CJGu6PTxSUgbKjmmbVGvmXj2rU2K08vFy3tGdhIU
J0+lBcpumS4GT/uehk6IEKcDN/XfDGhHmf1jjqqyGAcLWeOTc4XINfU/tkqD
hQ/zntxxVxVDJ/Z2E+2DELePL4sxOc7CiHPxo2Z3JpIi6Q5O7yl9+K16xfYh
5Uv2Cs9/bmRiLCP2rvVTLn7knO/yoLhYMWgszOMvCWn580cWbxFi5i1/eaUn
bWBKfWFNCFgoYBjQH3TxEOV3u7TvDwG1RQahG1UoPz18b37EKyHWxxssSrJm
4d9PZEgOkZjW9ymhX1mIyydPy7a2MPHpnTjSbw4T13VmeYbc4YLuakfmUPk1
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
IuyfX5q+ro3q4yVj07s5ApSUrbR8u4yBlk4Fu+AKGqIYDgc+nuYgMT62epus
CPPeb6x13U2H/eOkqcZvOChqas3Q/UXgz8qTDS+K6VB993OkVsiBK7vd9hCP
wKpaZU5jE4nCrMeVSyMFUN4xVLc4l44it2lHpzFItEZND/yTJsDhfpP8ockM
pAedjlAeoWEkre1OWBQHZ1TUrE9MFqEtQ6ec7CSxwf/e4LwSAXIXevO9gxnY
HxLm9nWAiWLu97e9f7mYq5a99Es0AcMynYdph2j480Lqoxs4uHtrerujuggZ
qa+XxH4m0dub+1DOUoBIMeNOYDwNR17ZLjy6loEOdTOnzUu5cD548J12E4G8
ywuL5/4gcW7rz+b3akKUz7aoLeIz8bbvjaniLBqyPA1T+tQ4YP28emPzEhHy
MmTVPfToOHtgkvOCRxycTreYsWGc4hyf0KRUCYpzzpkJm/ZQOWhlcrJ6Qxum
/s7SLwe1v5U5hSuOEYhV2mghN78LO765Ov9IpSOg7kbcaxYHh80CF0cRBHza
lhvMj6TD1WdAY0oTB10HJmYNkZRfPLQudn1GYoo7+0f8IB8BBhm+vQdacZah
HD4QS8L0yLeNr47yIeori+jWbYb67suL91JzMXJzvpzsTQ4W/bVq+i0pQkuE
3u4TwyQUN/3WMlwqxPk+57N3Ndtgo79qODWTxL9npksXfORjVres9LWbLXCx
efhY3EHpUt3FxOtjHLT8kr/4ppvAHW2fbrkzNCz2+OrA3syBZUWetqSqCDHP
fzfLKzKQfOaZvrwyF4vT2scTGBQfWvk+H35DYqUWbs+dI8CFfYTPRXEr3nW8
u+RkRgd38QPbwFwOqquefF87SoBbaJqjcZyG76+mWcjacPAtqORqp5oIcUs4
kTVvKX9PWM+bpynArKk7kv/I0bCy4QRuvCLx53ZN5tfJAlgEXYsPymjFGyXZ
7pggEoar7/vUS/Ih/uQrx8xtxMVj6ae4uSS8ymUmDXbycdpB8/MTuVbMnPt0
01l1OuT1Z5ym3afmqmz/BS6Vc0eDP3QYXCVRrcwQv1jNx+Z4746/fk1obN1W
sdaSjsiJAza7CjiYPjTgJzFCwHq5QtWsFyTclt6oGxnhY94ZD/2xs61YPGA0
FFZEIlFHbFOhIMCdjTnpd1pb4eK/e939PBKO0Zb8kzw+JrIC/+ksb0Vs/VYN
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
      "], {{0, 0}, {12, 101}}, {0, 1}], AspectRatio -> 1, Frame -> True, 
     FrameLabel -> {None, None}, FrameTicks -> {{{{100.74875621890548`, 
          FormBox["1", TraditionalForm]}, {76.1268656716418, 
          FormBox["50", TraditionalForm]}, {51.00248756218906, 
          FormBox["100", TraditionalForm]}, {25.87810945273632, 
          FormBox["150", TraditionalForm]}, {0.2512437810945274, 
          FormBox["201", TraditionalForm]}}, {{100.74875621890548`, 
          FormBox["1", TraditionalForm]}, {76.1268656716418, 
          FormBox["50", TraditionalForm]}, {51.00248756218906, 
          FormBox["100", TraditionalForm]}, {25.87810945273632, 
          FormBox["150", TraditionalForm]}, {0.2512437810945274, 
          FormBox["201", TraditionalForm]}}}, {{{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}, {{0.5, 
          FormBox["1", TraditionalForm]}, {4.5, 
          FormBox["5", TraditionalForm]}, {11.5, 
          FormBox["12", TraditionalForm]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}], 
    FormBox[
     FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              RasterBox[CompressedData["
1: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
0fXfOx/f/wDLIIBE
               "], {{
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.43689202827926`}, 
                    Offset[{4., 0}, {7.5, -112.43689202827926`}]}, {{
                    7.5, -57.259545799742554`}, 
                    Offset[{4., 0}, {7.5, -57.259545799742554`}]}, {{
                    7.5, -2.0821995712058383`}, 
                    Offset[{4., 0}, {7.5, -2.0821995712058383`}]}, {{7.5, 
                    55.36800757141426}, 
                    Offset[{4., 0}, {7.5, 55.36800757141426}]}, {{7.5, 
                    111.45035263921007`}, 
                    Offset[{4., 0}, {7.5, 111.45035263921007`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.78\"", ShowStringCharacters -> False], -0.78, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.43689202827926`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.39\"", ShowStringCharacters -> False], -0.39, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -57.259545799742554`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -2.0821995712058383`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.42\"", ShowStringCharacters -> False], 0.42,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 55.36800757141426}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.83\"", ShowStringCharacters -> False], 
                    0.8300000000000001, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 111.45035263921007`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                  False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  RowBox[{"Blend", "[", 
                    
                    RowBox[{
                    "System`PlotThemeDump`$ThemeDefaultMatrix", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.018172103337149473`", ",", "1.`"}], "}"}]}], 
              "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
            RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"0.2592237431511019`", ",", 
                    RowBox[{"-", "0.39`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.018447486302203855`", ",", 
                    RowBox[{"-", "0.78`"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"0.7506942935185945`", ",", "0.42`"}], "}"}], ",", 
                  RowBox[{"{", 
                    
                    RowBox[{
                    "0.9954196752867464`", ",", "0.8300000000000001`"}], 
                    "}"}]}], "}"}]}], ",", 
            RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
            RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
            RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )],
       TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {3,"\<\"||r||\"\>"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZCYZg7/8sD7YgcxLhk2xq2+pvxP3f6LHx7w=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1jQlUlPUah1HyikmoLCKJIIsL27ANDAMzfO/QEILiCLI5gMMOoiIqiIoK
KuKCCh4KF7xcSMW8oEl6IRRTXMC85IIpuVA0FqJGKhaRSfbec+f3nfOd7zzf
7//8H5ukZeGpI/X09K7y+7/v/58XQsAVuVpc+kjQ/SDFqrVdlbvABqSY0RSh
vxM8nhTfvrqVuQNsSortbqrObeBJRL5LO6RbwZYkPDsWXLMFPJUUB3vbDIrA
tqQItVNmbwLbk/CXprWrEDydhM8O+gsF4JlECffO1q4HOxJNmCg1Wgd2JuFi
eGPuWrCIhJWlnt2rwW6ksO84qcwDu5PijoGoPhfsQYriwDqTHLAnKSSbZuav
AItJ3vflEW022Ivk+/+0DVkG9iZ5iE91w1KwhGR/5kyxWAL2If/6hgOFmWAp
+cf/Yt6XAfYlfyOnj1XpYD+Sn083bkoFy0iefbjUKgUsJ5nND4bFSWB/kndO
2dGfABbIb7N6dKQGTCSI9xa1xOu4kIh+uj3CPg67goSK8QUlauzMQaFvBmKw
B5AwtH2NOho787G2wdZI7B8QqfVzHCKwf0DCWHpZFo5dSdKWdVlD87AzL21+
plFhDySp1WBGeyh25hsevaI52D8kSeGy5IoQ7Mzu9T3Ds7AHkUTbF58ahJ25
fNqDjkDss8hXmRQjVmKfRX6/Vd2pDMAeTH61D8L1FdiDyTd60s1MAXsISQ0i
Qzvl2Jmb91yTyrDPJp/M60E1vthnk3Ty2CsGUuxzyKcjKCBbgp15fdH5Li/s
oSQRtcoEMXbm74ebaz2wzyWfMl+JkTt2ZkXe6VxX7CryHjjl3u2CnfnQixNK
Z+zzSB7h4lzvqGOaR7JRmcdMHHCe98ba6fkzdHyBOf3RIe00+GHkP2mqTYg9
fOav4qoabOGHkXzt/skWNvCZne7uK7SGH07yh8YT+6bADyfZLlW5yhI+s//O
8U3vw2d+fnWXlQX8+SSvHjW22Bw+c1jAtn4z+PNJNrJgVKQpfOZTZze1GMOP
ILeUobd2E+BHkLuZ1/qScfAjyLVt+euB9+Az553IUxvCjyS3mc9+bX0XfiS5
3puxwmEMfOYdKc/LRsNn9qtZMjQKfhQ5/9z9RPMOfOZ/vp/ePhI+89zoH0Uj
4EeR09vyxIq3Wp0fTU4nb343PKxjYk58Ly71jY4Lo8nROORex2sdX+D9UnGU
+A/4MeSZc+l25e/wmafphekPwo8hj7uy65m/wmfeumZ25wD8BST2abwqfQmf
+clAYM1z+MwHXC8Z/AJ/AXnOXkLZP8NXk9ubT891PYXPfPwnX+EJfOaFtl/U
PoavJtdxGi+jXvix5Hah8vPcH+EzL//WtVsLP5Zcbc2OK3+Az3w7zLH+e/hx
JCrafdTkO/jMXv+1z38In7l39Cfa+/DjyGWv0jrkHvx4cpm18WBDF/x4cv7j
nIXFXfjM/35dUfgN/HhyipWY9nXCX0giw5w9qlvwmc+dNGq6AZ85q7/E6jr8
heRi7TimuAO+hhxvphX3X4OvIYeNh/Qjv4LPu0dPYUs7fOZHln/ZtcFPIOlH
C/JLLut4agL5BFYMDVzEfQkkGezMVbfqOIH56LhXredxP3PMnGyHL3VczTxm
e39ZC3rMZ65kDp3RcU8CeS8e2adpRj+RpJZCansT+sxf52tFjegzb/hCU3Ea
/UTydf3t4fDn6CeST4+7OrUBfT6/J6ur4zP0eQ+oixCfQJ/51eNblfXoJ5Hk
sL1Kvw595sjEjsxj6DP/oyq48yj6zE3326S16CeRd4a5suYw+swWEa0Gh9Bn
vlbmn12DPnP+12e7/oV+Mvk4vysVqtBn7v6wsfYg+sy7N3saVaKfTBLhwsnc
/egnk/eLNy7de9HnvUZap6xAP5m8wlfNrP8IfWb9U0dMytFPIavTz23z96DP
nOpcrS1FP4WsJy6aErIbfd7bjxxo2Il+Clmu1ppblKDP7GD9ceF29FNo8v1Y
476t6PNesq9UVYx+KlnJ7hg2FaHP3D9hh9Vm9Jmr5o4u3og+s6qkqL8A/VSy
1Ls6InID+swN7xS0rEOfOUnxxi4ffWaTDWtK1qCfRuaXzwwO5KGfRhNzf1+p
XoU+83Txy9Yc9NPIrCs7y2El+uxvO/6sbDn6fF76NGNoGfppZPp0eq8mC/00
MqlMTm5fgn46mc2p7hEtRj+dTIcfxlcsQp/5hMWD4XT0mTVRMalp6DOPL7/T
kYJ+Opm03ggXJ6PP+wrDm5WJ6HPPLjhUPwH9DLL7Zsu1zIXoM2+5GNQZh34G
2Xu/vSyNRT+DbB/7BdQsQJ/P71t93iAGfd6D/yPLjkKf+fXL5q4I9DPIpk4k
Eeajv4hmxC0+XRumFf4GVyavxA==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0., -21.927264777807657`}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {
        Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotLabel -> 
      FormBox["\"5.15 & 5.20\"", TraditionalForm], 
      PlotRange -> {{0., 201.}, {-21.927264777807657`, 0.6114258114327031}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
       "\"||\\!\\(\\*SubscriptBox[\\(r\\), \
\\(k\\)]\\)||=||A.\\!\\(\\*SubscriptBox[\\(x\\), \\(k\\)]\\)-b||\"", 
        InterpretationBox[
        "\"5.15, \[Rho]=\\!\\(\\*FormBox[\\\"0.9998052258454757`\\\", \
TraditionalForm]\\)\"", 
         StringForm["5.15, \[Rho]=``", 0.9998052258454757], Editable -> 
         False], 
        InterpretationBox[
        "\"5.20, \[Rho]=\\!\\(\\*FormBox[\\\"0.998663986179537`\\\", \
TraditionalForm]\\)\"", 
         StringForm["5.20, \[Rho]=``", 0.998663986179537], Editable -> 
         False]}, "PointLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {
  4,"\<\"||x-\\!\\(\\*SubscriptBox[\\(x\\), \\(*\\)]\\)||\"\>"->
  TemplateBox[{
    GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+f0URLiaOpSYenJ/Af0SxkA=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
abgRHPKmec69hv8DQ0EsjA==
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0., -22.735602598666993`}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {
        Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotLabel -> 
      FormBox["\"5.15 & 5.20\"", TraditionalForm], 
      PlotRange -> {{0., 201.}, {-22.735602598666993`, 
       0.014038089276087991`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    FormBox[
     FormBox[
      TemplateBox[{
       "\"||\\!\\(\\*SubscriptBox[\\(x\\), \\(k\\)]\\)-\\!\\(\\*SubscriptBox[\
\\(x\\), \\(*\\)]\\)||\"", 
        InterpretationBox[
        "\"5.15, \[Rho]=\\!\\(\\*FormBox[\\\"0.9998052258454757`\\\", \
TraditionalForm]\\)\"", 
         StringForm["5.15, \[Rho]=``", 0.9998052258454757], Editable -> 
         False], 
        InterpretationBox[
        "\"5.20, \[Rho]=\\!\\(\\*FormBox[\\\"0.998663986179537`\\\", \
TraditionalForm]\\)\"", 
         StringForm["5.20, \[Rho]=``", 0.998663986179537], Editable -> 
         False]}, "PointLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}}, 3]], "Output",
 CellChangeTimes->{{3.873373138788439*^9, 3.8733731524957323`*^9}, {
   3.873373856035692*^9, 3.873373893371052*^9}, 3.873373968809019*^9, 
   3.8733741285798607`*^9, 3.8733741722814665`*^9, 3.8733742867483983`*^9, {
   3.8733743214328327`*^9, 3.8733743887673225`*^9}},
 CellLabel->
  "Out[478]=",ExpressionUUID->"4041729d-bbd9-4f14-b8f3-4686c68183a9"]
}, Open  ]],

Cell["\<\
This algorithm is doing a lot better than the 5.10!  It is also beating both \
theorems a lot. \
\>", "Text",
 CellChangeTimes->{{3.873289402983469*^9, 3.8732894207131567`*^9}, {
  3.87329265562566*^9, 3.873292676544441*^9}, {3.873373927185235*^9, 
  3.873373960301606*^9}},ExpressionUUID->"4820f78e-533f-457f-a580-\
cbc2e5c04aab"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141, 575},
WindowMargins->{{1330, Automatic}, {Automatic, -368}},
Magnification->1.25,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"21380304-70eb-457a-8761-1f1d4d30bec1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 855, 23, 199, "Title",ExpressionUUID->"5d4a0142-ee91-4c83-922a-c35d53e8e7aa"],
Cell[1438, 47, 4144, 102, 417, "Text",ExpressionUUID->"8db8a5f6-7547-4811-a12e-acb31275510f"],
Cell[CellGroupData[{
Cell[5607, 153, 169, 3, 83, "Section",ExpressionUUID->"f9ff0c67-2091-439b-a894-f8f6b68c3ab7"],
Cell[5779, 158, 4237, 124, 274, "Text",ExpressionUUID->"9f7b8c7a-6af2-4112-8894-25e877389529"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10053, 287, 269, 4, 83, "Section",ExpressionUUID->"6c9e09aa-467a-40b0-a60a-a0dae2800a9a"],
Cell[10325, 293, 1728, 55, 111, "Abstract",ExpressionUUID->"1e1821ea-5405-4d53-a02e-cfada3beba30"],
Cell[12056, 350, 984, 28, 109, "Abstract",ExpressionUUID->"3e338233-9dd0-46cd-ab33-f1b523d66890"],
Cell[13043, 380, 2006, 58, 195, "Abstract",ExpressionUUID->"d2526d53-3953-457c-b781-1d2b275828fe"],
Cell[15052, 440, 2023, 68, 194, "Abstract",ExpressionUUID->"3cc287a4-9b35-42cc-bc3d-00ad11d8b40f"],
Cell[17078, 510, 1089, 31, 106, "Abstract",ExpressionUUID->"1aee77d8-581a-4f37-8c4b-c6e11a7d347d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18204, 546, 376, 6, 83, "Section",ExpressionUUID->"60ec76c5-82b4-4d59-ada5-3afa48fb6018"],
Cell[18583, 554, 3522, 99, 255, "Text",ExpressionUUID->"c23ede57-876d-48c2-8206-772fa1cbe452"],
Cell[CellGroupData[{
Cell[22130, 657, 233, 4, 67, "Subsection",ExpressionUUID->"e795deea-cc52-451e-8639-99d9de0d1121"],
Cell[22366, 663, 2175, 61, 216, "Text",ExpressionUUID->"eb87080e-2f76-4198-bb17-0b1c0b79887e"],
Cell[24544, 726, 1033, 26, 216, "Abstract",ExpressionUUID->"d0bd89c9-7ceb-4377-a509-abfdbe10b3dd"],
Cell[25580, 754, 618, 14, 72, "Text",ExpressionUUID->"2d333b3a-3403-4191-8b96-829d6d110e46"],
Cell[CellGroupData[{
Cell[26223, 772, 5554, 146, 576, "Input",ExpressionUUID->"57b6345d-274e-4955-b948-cf30d076141e"],
Cell[31780, 920, 129623, 2345, 514, "Output",ExpressionUUID->"fe19f51d-26f9-4a47-b5bf-2b9219109879"]
}, Open  ]],
Cell[161418, 3268, 192, 3, 43, "Text",ExpressionUUID->"2b57d707-f715-4819-9d35-66c0e523af97"]
}, Closed]],
Cell[CellGroupData[{
Cell[161647, 3276, 337, 5, 46, "Subsection",ExpressionUUID->"2c692529-86c2-4fed-af94-6ef40a96f2bf"],
Cell[161987, 3283, 2229, 56, 244, "Text",ExpressionUUID->"a8b90903-62e0-4d2a-aba5-d98c0c8ea230"],
Cell[164219, 3341, 1138, 28, 246, "Abstract",ExpressionUUID->"acda6426-eae5-43c0-aabe-f41f9c34ebb3"],
Cell[165360, 3371, 880, 20, 101, "Text",ExpressionUUID->"bf441931-9397-4e52-8ea1-6d757b4ec164"],
Cell[CellGroupData[{
Cell[166265, 3395, 10448, 266, 1049, "Input",ExpressionUUID->"0d65a27f-23e5-4230-a161-dfdc5445cac1"],
Cell[176716, 3663, 157310, 2841, 533, "Output",ExpressionUUID->"4041729d-bbd9-4f14-b8f3-4686c68183a9"]
}, Open  ]],
Cell[334041, 6507, 341, 7, 43, "Text",ExpressionUUID->"4820f78e-533f-457f-a580-cbc2e5c04aab"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

